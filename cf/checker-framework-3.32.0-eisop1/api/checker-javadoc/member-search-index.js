memberSearchIndex = [{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"A"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"A2F","l":"A2F(AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"A2FReducer","l":"A2FReducer(AnnotatedTypeFactory)","u":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"AbstractAnalysis(Analysis.Direction)","u":"%3Cinit%3E(org.checkerframework.dataflow.analysis.Analysis.Direction)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"AbstractAtmComboVisitor()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer","l":"AbstractCFGVisualizer()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"AbstractNodeVisitor()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.type.poly","c":"AbstractQualifierPolymorphism","l":"AbstractQualifierPolymorphism(ProcessingEnvironment, AnnotatedTypeFactory)","u":"%3Cinit%3E(javax.annotation.processing.ProcessingEnvironment,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.javacutil","c":"AbstractTypeProcessor","l":"AbstractTypeProcessor()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.type","c":"AbstractViewpointAdapter","l":"AbstractViewpointAdapter(AnnotatedTypeFactory)","u":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"accept(AnnotatedTypeMirror, AnnotatedTypeMirror, PARAM, AtmComboVisitor<RETURN_TYPE, PARAM>)","u":"accept(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,PARAM,org.checkerframework.framework.type.visitor.AtmComboVisitor)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"accept(AnnotatedTypeVisitor<R, P>, P)","u":"accept(org.checkerframework.framework.type.visitor.AnnotatedTypeVisitor,P)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedArrayType","l":"accept(AnnotatedTypeVisitor<R, P>, P)","u":"accept(org.checkerframework.framework.type.visitor.AnnotatedTypeVisitor,P)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedDeclaredType","l":"accept(AnnotatedTypeVisitor<R, P>, P)","u":"accept(org.checkerframework.framework.type.visitor.AnnotatedTypeVisitor,P)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedExecutableType","l":"accept(AnnotatedTypeVisitor<R, P>, P)","u":"accept(org.checkerframework.framework.type.visitor.AnnotatedTypeVisitor,P)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedIntersectionType","l":"accept(AnnotatedTypeVisitor<R, P>, P)","u":"accept(org.checkerframework.framework.type.visitor.AnnotatedTypeVisitor,P)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedNoType","l":"accept(AnnotatedTypeVisitor<R, P>, P)","u":"accept(org.checkerframework.framework.type.visitor.AnnotatedTypeVisitor,P)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedNullType","l":"accept(AnnotatedTypeVisitor<R, P>, P)","u":"accept(org.checkerframework.framework.type.visitor.AnnotatedTypeVisitor,P)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedPrimitiveType","l":"accept(AnnotatedTypeVisitor<R, P>, P)","u":"accept(org.checkerframework.framework.type.visitor.AnnotatedTypeVisitor,P)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedTypeVariable","l":"accept(AnnotatedTypeVisitor<R, P>, P)","u":"accept(org.checkerframework.framework.type.visitor.AnnotatedTypeVisitor,P)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedUnionType","l":"accept(AnnotatedTypeVisitor<R, P>, P)","u":"accept(org.checkerframework.framework.type.visitor.AnnotatedTypeVisitor,P)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedWildcardType","l":"accept(AnnotatedTypeVisitor<R, P>, P)","u":"accept(org.checkerframework.framework.type.visitor.AnnotatedTypeVisitor,P)"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayAccess","l":"accept(JavaExpressionVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.expression.JavaExpressionVisitor,P)"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayCreation","l":"accept(JavaExpressionVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.expression.JavaExpressionVisitor,P)"},{"p":"org.checkerframework.dataflow.expression","c":"BinaryOperation","l":"accept(JavaExpressionVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.expression.JavaExpressionVisitor,P)"},{"p":"org.checkerframework.dataflow.expression","c":"ClassName","l":"accept(JavaExpressionVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.expression.JavaExpressionVisitor,P)"},{"p":"org.checkerframework.dataflow.expression","c":"FieldAccess","l":"accept(JavaExpressionVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.expression.JavaExpressionVisitor,P)"},{"p":"org.checkerframework.dataflow.expression","c":"FormalParameter","l":"accept(JavaExpressionVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.expression.JavaExpressionVisitor,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"accept(JavaExpressionVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.expression.JavaExpressionVisitor,P)"},{"p":"org.checkerframework.dataflow.expression","c":"LocalVariable","l":"accept(JavaExpressionVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.expression.JavaExpressionVisitor,P)"},{"p":"org.checkerframework.dataflow.expression","c":"MethodCall","l":"accept(JavaExpressionVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.expression.JavaExpressionVisitor,P)"},{"p":"org.checkerframework.dataflow.expression","c":"ThisReference","l":"accept(JavaExpressionVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.expression.JavaExpressionVisitor,P)"},{"p":"org.checkerframework.dataflow.expression","c":"UnaryOperation","l":"accept(JavaExpressionVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.expression.JavaExpressionVisitor,P)"},{"p":"org.checkerframework.dataflow.expression","c":"Unknown","l":"accept(JavaExpressionVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.expression.JavaExpressionVisitor,P)"},{"p":"org.checkerframework.dataflow.expression","c":"ValueLiteral","l":"accept(JavaExpressionVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.expression.JavaExpressionVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayAccessNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayCreationNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayTypeNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssertionErrorNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssignmentNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BitwiseAndNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BitwiseComplementNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BitwiseOrNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BitwiseXorNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BooleanLiteralNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"CaseNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"CharacterLiteralNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ClassDeclarationNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ClassNameNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ConditionalAndNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ConditionalNotNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ConditionalOrNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"DoubleLiteralNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"EqualToNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ExplicitThisNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ExpressionStatementNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FieldAccessNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FloatingDivisionNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FloatingRemainderNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FloatLiteralNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FunctionalInterfaceNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"GreaterThanNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"GreaterThanOrEqualNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ImplicitThisNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"InstanceOfNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"IntegerDivisionNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"IntegerLiteralNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"IntegerRemainderNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LambdaResultExpressionNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LeftShiftNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LessThanNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LessThanOrEqualNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LocalVariableNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LongLiteralNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MarkerNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodAccessNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodInvocationNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NarrowingConversionNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"Node","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NotEqualNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NullChkNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NullLiteralNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalAdditionNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalMinusNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalMultiplicationNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalPlusNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalSubtractionNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ObjectCreationNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"PackageNameNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ParameterizedTypeNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"PrimitiveTypeNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ReturnNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ShortLiteralNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SignedRightShiftNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringConcatenateAssignmentNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringConcatenateNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringConversionNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringLiteralNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SuperNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SwitchExpressionNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SynchronizedNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TernaryExpressionNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ThrowNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TypeCastNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"UnsignedRightShiftNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"VariableDeclarationNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"WideningConversionNode","l":"accept(NodeVisitor<R, P>, P)","u":"accept(org.checkerframework.dataflow.cfg.node.NodeVisitor,P)"},{"p":"org.checkerframework.framework.util.element","c":"ClassTypeParamApplier","l":"accepts(AnnotatedTypeMirror, Element)","u":"accepts(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.util.element","c":"MethodApplier","l":"accepts(AnnotatedTypeMirror, Element)","u":"accepts(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.util.element","c":"MethodTypeParamApplier","l":"accepts(AnnotatedTypeMirror, Element)","u":"accepts(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.util.element","c":"ParamApplier","l":"accepts(AnnotatedTypeMirror, Element)","u":"accepts(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.util.element","c":"TypeDeclarationApplier","l":"accepts(AnnotatedTypeMirror, Element)","u":"accepts(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.util.element","c":"TypeVarUseApplier","l":"accepts(AnnotatedTypeMirror, Element)","u":"accepts(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.util.element","c":"VariableApplier","l":"accepts(AnnotatedTypeMirror, Element)","u":"accepts(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.Element)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsTransfer","l":"accumulate(Node, TransferResult<CFValue, CFStore>, String...)","u":"accumulate(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.TransferResult,java.lang.String...)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationTransfer","l":"accumulate(Node, TransferResult<CFValue, CFStore>, String...)","u":"accumulate(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.TransferResult,java.lang.String...)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory","l":"AccumulationAnnotatedTypeFactory(BaseTypeChecker, Class<? extends Annotation>, Class<? extends Annotation>)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,java.lang.Class,java.lang.Class)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory","l":"AccumulationAnnotatedTypeFactory(BaseTypeChecker, Class<? extends Annotation>, Class<? extends Annotation>, Class<? extends Annotation>)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,java.lang.Class,java.lang.Class,java.lang.Class)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory","l":"accumulationChecker"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationChecker","l":"AccumulationChecker()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory.AccumulationQualifierHierarchy","l":"AccumulationQualifierHierarchy(Collection<Class<? extends Annotation>>, Elements)","u":"%3Cinit%3E(java.util.Collection,javax.lang.model.util.Elements)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationTransfer","l":"AccumulationTransfer(CFAnalysis)","u":"%3Cinit%3E(org.checkerframework.framework.flow.CFAnalysis)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory.AccumulationTreeAnnotator","l":"AccumulationTreeAnnotator(AccumulationAnnotatedTypeFactory)","u":"%3Cinit%3E(org.checkerframework.common.accumulation.AccumulationAnnotatedTypeFactory)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationVisitor","l":"AccumulationVisitor(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"adaptGetClassReturnTypeToReceiver(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror, ExpressionTree)","u":"adaptGetClassReturnTypeToReceiver(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.checker.signedness","c":"SignednessAnnotatedTypeFactory","l":"adaptGetClassReturnTypeToReceiver(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror, ExpressionTree)","u":"adaptGetClassReturnTypeToReceiver(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"adaptGetClassReturnTypeToReceiver(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror, ExpressionTree)","u":"adaptGetClassReturnTypeToReceiver(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"adaptParameters(AnnotatedTypeFactory, AnnotatedTypeMirror.AnnotatedExecutableType, List<? extends ExpressionTree>)","u":"adaptParameters(org.checkerframework.framework.type.AnnotatedTypeFactory,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,java.util.List)"},{"p":"org.checkerframework.framework.type.visitor","c":"EquivalentAtmComboScanner.Visited","l":"add(AnnotatedTypeMirror, AnnotatedTypeMirror, RETURN_TYPE)","u":"add(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,RETURN_TYPE)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"add(AnnotationMirror)","u":"add(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis.Worklist","l":"add(Block)","u":"add(org.checkerframework.dataflow.cfg.block.Block)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"addAliasedAnnotation(Class<?>, AnnotationMirror)","u":"addAliasedAnnotation(java.lang.Class,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"addAliasedAnnotation(Class<?>, Class<?>, boolean, String...)","u":"addAliasedAnnotation(java.lang.Class,java.lang.Class,boolean,java.lang.String...)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"addAliasedAnnotation(String, AnnotationMirror)","u":"addAliasedAnnotation(java.lang.String,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"addAliasedDeclAnnotation(Class<? extends Annotation>, Class<? extends Annotation>, AnnotationMirror)","u":"addAliasedDeclAnnotation(java.lang.Class,java.lang.Class,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"addAliasedDeclAnnotation(String, String, AnnotationMirror)","u":"addAliasedDeclAnnotation(java.lang.String,java.lang.String,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"addAliasedTypeAnnotation(Class<?>, AnnotationMirror)","u":"addAliasedTypeAnnotation(java.lang.Class,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"addAliasedTypeAnnotation(Class<?>, Class<?>, boolean, String...)","u":"addAliasedTypeAnnotation(java.lang.Class,java.lang.Class,boolean,java.lang.String...)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"addAliasedTypeAnnotation(String, AnnotationMirror)","u":"addAliasedTypeAnnotation(java.lang.String,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"addAliasedTypeAnnotation(String, Class<?>, boolean, String...)","u":"addAliasedTypeAnnotation(java.lang.String,java.lang.Class,boolean,java.lang.String...)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"addAll(Collection<? extends AnnotationMirror>)","u":"addAll(java.util.Collection)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults.DefaultApplierElement","l":"addAnnotation(AnnotatedTypeMirror, AnnotationMirror)","u":"addAnnotation(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"addAnnotation(AnnotationMirror)","u":"addAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedExecutableType","l":"addAnnotation(AnnotationMirror)","u":"addAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedIntersectionType","l":"addAnnotation(AnnotationMirror)","u":"addAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedTypeVariable","l":"addAnnotation(AnnotationMirror)","u":"addAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedWildcardType","l":"addAnnotation(AnnotationMirror)","u":"addAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"addAnnotation(Class<? extends Annotation>)","u":"addAnnotation(java.lang.Class)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"addAnnotationFromFieldInvariant(AnnotatedTypeMirror, AnnotatedTypeMirror, VariableElement)","u":"addAnnotationFromFieldInvariant(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.VariableElement)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"addAnnotations(Iterable<? extends AnnotationMirror>)","u":"addAnnotations(java.lang.Iterable)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"addAnnotationsFromDefaultForType(Element, AnnotatedTypeMirror)","u":"addAnnotationsFromDefaultForType(javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.signedness","c":"SignednessAnnotatedTypeFactory","l":"addAnnotationsFromDefaultForType(Element, AnnotatedTypeMirror)","u":"addAnnotationsFromDefaultForType(javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"addAnnotationsFromDefaultForType(Element, AnnotatedTypeMirror)","u":"addAnnotationsFromDefaultForType(javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.typeannotator","c":"DefaultForTypeAnnotator","l":"addAtmClass(Class<? extends AnnotatedTypeMirror>, AnnotationMirror)","u":"addAtmClass(java.lang.Class,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer","l":"addBlock(Block, Set<Block>, Queue<Block>)","u":"addBlock(org.checkerframework.dataflow.cfg.block.Block,java.util.Set,java.util.Queue)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer","l":"addBlockContent(Block)","u":"addBlockContent(org.checkerframework.dataflow.cfg.block.Block)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"addCheckedCodeDefault(AnnotationMirror, TypeUseLocation)","u":"addCheckedCodeDefault(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.qual.TypeUseLocation)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"addCheckedCodeDefault(AnnotationMirror, TypeUseLocation, boolean)","u":"addCheckedCodeDefault(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.qual.TypeUseLocation,boolean)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"addCheckedCodeDefaults(AnnotationMirror, TypeUseLocation[])","u":"addCheckedCodeDefaults(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.qual.TypeUseLocation[])"},{"p":"org.checkerframework.common.subtyping","c":"SubtypingAnnotatedTypeFactory","l":"addCheckedCodeDefaults(QualifierDefaults)","u":"addCheckedCodeDefaults(org.checkerframework.framework.util.defaults.QualifierDefaults)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"addCheckedCodeDefaults(QualifierDefaults)","u":"addCheckedCodeDefaults(org.checkerframework.framework.util.defaults.QualifierDefaults)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"addCheckedStandardDefaults(QualifierDefaults)","u":"addCheckedStandardDefaults(org.checkerframework.framework.util.defaults.QualifierDefaults)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"addClimbStandardDefaults()"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundAnnotatedTypeFactory","l":"addComputedTypeAnnotations(Element, AnnotatedTypeMirror)","u":"addComputedTypeAnnotations(javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"addComputedTypeAnnotations(Element, AnnotatedTypeMirror)","u":"addComputedTypeAnnotations(javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.interning","c":"InterningAnnotatedTypeFactory","l":"addComputedTypeAnnotations(Element, AnnotatedTypeMirror)","u":"addComputedTypeAnnotations(javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"addComputedTypeAnnotations(Element, AnnotatedTypeMirror)","u":"addComputedTypeAnnotations(javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"addComputedTypeAnnotations(Element, AnnotatedTypeMirror)","u":"addComputedTypeAnnotations(javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"addComputedTypeAnnotations(Element, AnnotatedTypeMirror)","u":"addComputedTypeAnnotations(javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"addComputedTypeAnnotations(Tree, AnnotatedTypeMirror)","u":"addComputedTypeAnnotations(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"addComputedTypeAnnotations(Tree, AnnotatedTypeMirror)","u":"addComputedTypeAnnotations(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundAnnotatedTypeFactory","l":"addComputedTypeAnnotations(Tree, AnnotatedTypeMirror, boolean)","u":"addComputedTypeAnnotations(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror,boolean)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"addComputedTypeAnnotations(Tree, AnnotatedTypeMirror, boolean)","u":"addComputedTypeAnnotations(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror,boolean)"},{"p":"org.checkerframework.checker.interning","c":"InterningAnnotatedTypeFactory","l":"addComputedTypeAnnotations(Tree, AnnotatedTypeMirror, boolean)","u":"addComputedTypeAnnotations(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror,boolean)"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"addComputedTypeAnnotations(Tree, AnnotatedTypeMirror, boolean)","u":"addComputedTypeAnnotations(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror,boolean)"},{"p":"org.checkerframework.checker.signedness","c":"SignednessAnnotatedTypeFactory","l":"addComputedTypeAnnotations(Tree, AnnotatedTypeMirror, boolean)","u":"addComputedTypeAnnotations(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror,boolean)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"addComputedTypeAnnotations(Tree, AnnotatedTypeMirror, boolean)","u":"addComputedTypeAnnotations(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror,boolean)"},{"p":"org.checkerframework.framework.util.typeinference","c":"DefaultTypeArgumentInference","l":"addConstraintsBetweenTargets(Set<TUConstraint>, Set<TypeVariable>, boolean, AnnotatedTypeFactory)","u":"addConstraintsBetweenTargets(java.util.Set,java.util.Set,boolean,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"addDefaultAnnotations(AnnotatedTypeMirror)","u":"addDefaultAnnotations(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"addDefaultAnnotations(AnnotatedTypeMirror)","u":"addDefaultAnnotations(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"addDiagnosticFile(File)","u":"addDiagnosticFile(java.io.File)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"addDiagnosticFiles(Iterable<File>)","u":"addDiagnosticFiles(java.lang.Iterable)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"adddToPathOption(String, String)","u":"adddToPathOption(java.lang.String,java.lang.String)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"addElementDefault(Element, AnnotationMirror, TypeUseLocation)","u":"addElementDefault(javax.lang.model.element.Element,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.qual.TypeUseLocation)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ExceptionBlockImpl","l":"addExceptionalSuccessor(BlockImpl, TypeMirror)","u":"addExceptionalSuccessor(org.checkerframework.dataflow.cfg.block.BlockImpl,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.ajava","c":"AnnotationFileStore","l":"addFileOrDirectory(File)","u":"addFileOrDirectory(java.io.File)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"addInformationFromPreconditions(CFStore, AnnotatedTypeFactory, UnderlyingAST.CFGMethod, MethodTree, ExecutableElement)","u":"addInformationFromPreconditions(org.checkerframework.framework.flow.CFStore,org.checkerframework.framework.type.AnnotatedTypeFactory,org.checkerframework.dataflow.cfg.UnderlyingAST.CFGMethod,com.sun.source.tree.MethodTree,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenTransfer","l":"addInformationFromPreconditions(CFStore, AnnotatedTypeFactory, UnderlyingAST.CFGMethod, MethodTree, ExecutableElement)","u":"addInformationFromPreconditions(org.checkerframework.framework.flow.CFStore,org.checkerframework.framework.type.AnnotatedTypeFactory,org.checkerframework.dataflow.cfg.UnderlyingAST.CFGMethod,com.sun.source.tree.MethodTree,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"addInformationFromPreconditions(S, AnnotatedTypeFactory, UnderlyingAST.CFGMethod, MethodTree, ExecutableElement)","u":"addInformationFromPreconditions(S,org.checkerframework.framework.type.AnnotatedTypeFactory,org.checkerframework.dataflow.cfg.UnderlyingAST.CFGMethod,com.sun.source.tree.MethodTree,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"addInheritedAnnotation(AnnotationMirror)","u":"addInheritedAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationStore","l":"addInitializedField(FieldAccess)","u":"addInitializedField(org.checkerframework.dataflow.expression.FieldAccess)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationStore","l":"addInitializedField(VariableElement)","u":"addInitializedField(javax.lang.model.element.VariableElement)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"InferredValue.InferredTarget","l":"additionalAnnotations"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"addLabelForNextNode(Label)","u":"addLabelForNextNode(org.checkerframework.dataflow.cfg.builder.Label)"},{"p":"org.checkerframework.framework.type.treeannotator","c":"LiteralTreeAnnotator","l":"addLiteralKind(LiteralKind, AnnotationMirror)","u":"addLiteralKind(org.checkerframework.framework.qual.LiteralKind,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"addMainToArgs(List<String>)","u":"addMainToArgs(java.util.List)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"addMissingAnnotations(Iterable<? extends AnnotationMirror>)","u":"addMissingAnnotations(java.lang.Iterable)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"RegularBlockImpl","l":"addNode(Node)","u":"addNode(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"RegularBlockImpl","l":"addNodes(List<? extends Node>)","u":"addNodes(java.util.List)"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker.PurityResult","l":"addNotBothReason(Tree, String)","u":"addNotBothReason(com.sun.source.tree.Tree,java.lang.String)"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker.PurityResult","l":"addNotDetReason(Tree, String)","u":"addNotDetReason(com.sun.source.tree.Tree,java.lang.String)"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker.PurityResult","l":"addNotSEFreeReason(Tree, String)","u":"addNotSEFreeReason(com.sun.source.tree.Tree,java.lang.String)"},{"p":"org.checkerframework.framework.test","c":"SimpleOptionMap","l":"addOption(String)","u":"addOption(java.lang.String)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"addOption(String)","u":"addOption(java.lang.String)"},{"p":"org.checkerframework.framework.test","c":"SimpleOptionMap","l":"addOption(String, String)","u":"addOption(java.lang.String,java.lang.String)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"addOption(String, String)","u":"addOption(java.lang.String,java.lang.String)"},{"p":"org.checkerframework.framework.test","c":"SimpleOptionMap","l":"addOptionIfValueNonEmpty(String, String)","u":"addOptionIfValueNonEmpty(java.lang.String,java.lang.String)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"addOptionIfValueNonEmpty(String, String)","u":"addOptionIfValueNonEmpty(java.lang.String,java.lang.String)"},{"p":"org.checkerframework.framework.test","c":"SimpleOptionMap","l":"addOptions(Iterable<String>)","u":"addOptions(java.lang.Iterable)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"addOptions(Iterable<String>)","u":"addOptions(java.lang.Iterable)"},{"p":"org.checkerframework.framework.test","c":"SimpleOptionMap","l":"addOptions(Map<String, String>)","u":"addOptions(java.util.Map)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"addOptions(Map<String, String>)","u":"addOptions(java.util.Map)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"addOptions(Map<String, String>)","u":"addOptions(java.util.Map)"},{"p":"org.checkerframework.framework.util.typeinference","c":"DefaultTypeArgumentInference","l":"addOrGetDeclarations(TypeVariable, AnnotatedTypeFactory, Map<TypeVariable, AnnotatedTypeMirror.AnnotatedTypeVariable>)","u":"addOrGetDeclarations(javax.lang.model.type.TypeVariable,org.checkerframework.framework.type.AnnotatedTypeFactory,java.util.Map)"},{"p":"org.checkerframework.framework.util","c":"TreePathCacher","l":"addPath(Tree, TreePath)","u":"addPath(com.sun.source.tree.Tree,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"BlockImpl","l":"addPredecessor(BlockImpl)","u":"addPredecessor(org.checkerframework.dataflow.cfg.block.BlockImpl)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"ConstraintMap","l":"addPrimaryEqualities(TypeVariable, QualifierHierarchy, AnnotationMirrorSet)","u":"addPrimaryEqualities(javax.lang.model.type.TypeVariable,org.checkerframework.framework.type.QualifierHierarchy,org.checkerframework.javacutil.AnnotationMirrorSet)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"ConstraintMap","l":"addPrimarySubtypes(TypeVariable, QualifierHierarchy, AnnotationMirrorSet)","u":"addPrimarySubtypes(javax.lang.model.type.TypeVariable,org.checkerframework.framework.type.QualifierHierarchy,org.checkerframework.javacutil.AnnotationMirrorSet)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"ConstraintMap","l":"addPrimarySupertype(TypeVariable, QualifierHierarchy, AnnotationMirrorSet)","u":"addPrimarySupertype(javax.lang.model.type.TypeVariable,org.checkerframework.framework.type.QualifierHierarchy,org.checkerframework.javacutil.AnnotationMirrorSet)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"addProcessor(String)","u":"addProcessor(java.lang.String)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"addProcessors(Iterable<String>)","u":"addProcessors(java.lang.Iterable)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"addSharedCFGForTree(Tree, ControlFlowGraph)","u":"addSharedCFGForTree(com.sun.source.tree.Tree,org.checkerframework.dataflow.cfg.ControlFlowGraph)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"addSourceFile(File)","u":"addSourceFile(java.io.File)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"addSourceFiles(Iterable<File>)","u":"addSourceFiles(java.lang.Iterable)"},{"p":"org.checkerframework.framework.type.typeannotator","c":"DefaultForTypeAnnotator","l":"addStandardDefaults()"},{"p":"org.checkerframework.framework.type.treeannotator","c":"LiteralTreeAnnotator","l":"addStandardLiteralQualifiers()"},{"p":"org.checkerframework.dataflow.analysis","c":"BackwardAnalysisImpl","l":"addStoreAfter(Block, Node, S, boolean)","u":"addStoreAfter(org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.cfg.node.Node,S,boolean)"},{"p":"org.checkerframework.dataflow.analysis","c":"ForwardAnalysisImpl","l":"addStoreBefore(Block, Node, S, Store.Kind, boolean)","u":"addStoreBefore(org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.cfg.node.Node,S,org.checkerframework.dataflow.analysis.Store.Kind,boolean)"},{"p":"org.checkerframework.framework.type.treeannotator","c":"LiteralTreeAnnotator","l":"addStringPattern(String, AnnotationMirror)","u":"addStringPattern(java.lang.String,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"ConstraintMap","l":"addTargetEquality(TypeVariable, TypeVariable, AnnotationMirrorSet)","u":"addTargetEquality(javax.lang.model.type.TypeVariable,javax.lang.model.type.TypeVariable,org.checkerframework.javacutil.AnnotationMirrorSet)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"ConstraintMap","l":"addTargetSubtype(TypeVariable, TypeVariable, AnnotationMirrorSet)","u":"addTargetSubtype(javax.lang.model.type.TypeVariable,javax.lang.model.type.TypeVariable,org.checkerframework.javacutil.AnnotationMirrorSet)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"ConstraintMap","l":"addTargetSupertype(TypeVariable, TypeVariable, AnnotationMirrorSet)","u":"addTargetSupertype(javax.lang.model.type.TypeVariable,javax.lang.model.type.TypeVariable,org.checkerframework.javacutil.AnnotationMirrorSet)"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"addToClasspath(List<String>)","u":"addToClasspath(java.util.List)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"addToConvertedLookupMap(Node)","u":"addToConvertedLookupMap(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"addToConvertedLookupMap(Tree, Node)","u":"addToConvertedLookupMap(com.sun.source.tree.Tree,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"addToLookupMap(Node)","u":"addToLookupMap(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.framework.test","c":"SimpleOptionMap","l":"addToPathOption(String, String)","u":"addToPathOption(java.lang.String,java.lang.String)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"ConstraintMapBuilder","l":"addToPrimaryRelationship(TypeVariable, TUConstraint, ConstraintMap, AnnotationMirrorSet, QualifierHierarchy)","u":"addToPrimaryRelationship(javax.lang.model.type.TypeVariable,org.checkerframework.framework.util.typeinference.constraint.TUConstraint,org.checkerframework.framework.util.typeinference.solver.ConstraintMap,org.checkerframework.javacutil.AnnotationMirrorSet,org.checkerframework.framework.type.QualifierHierarchy)"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"addToProcessorpath(List<String>)","u":"addToProcessorpath(java.util.List)"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"addToRuntimeClasspath(List<String>)","u":"addToRuntimeClasspath(java.util.List)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"ConstraintMapBuilder","l":"addToTypeRelationship(TypeVariable, AnnotatedTypeMirror, ConstraintMap, TUConstraint, AnnotationMirrorSet)","u":"addToTypeRelationship(javax.lang.model.type.TypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.util.typeinference.solver.ConstraintMap,org.checkerframework.framework.util.typeinference.constraint.TUConstraint,org.checkerframework.javacutil.AnnotationMirrorSet)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"addToWorklist(Block)","u":"addToWorklist(org.checkerframework.dataflow.cfg.block.Block)"},{"p":"org.checkerframework.framework.type","c":"QualifierUpperBounds","l":"addType(Class<?>, AnnotationMirror)","u":"addType(java.lang.Class,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"ConstraintMap","l":"addTypeEqualities(TypeVariable, AnnotatedTypeMirror, AnnotationMirrorSet)","u":"addTypeEqualities(javax.lang.model.type.TypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.javacutil.AnnotationMirrorSet)"},{"p":"org.checkerframework.framework.type","c":"QualifierUpperBounds","l":"addTypeKind(TypeKind, AnnotationMirror)","u":"addTypeKind(javax.lang.model.type.TypeKind,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type.typeannotator","c":"DefaultForTypeAnnotator","l":"addTypeKind(TypeKind, AnnotationMirror)","u":"addTypeKind(javax.lang.model.type.TypeKind,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type.typeannotator","c":"DefaultForTypeAnnotator","l":"addTypes(Class<?>, AnnotationMirror)","u":"addTypes(java.lang.Class,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"ConstraintMap","l":"addTypeSubtype(TypeVariable, AnnotatedTypeMirror, AnnotationMirrorSet)","u":"addTypeSubtype(javax.lang.model.type.TypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.javacutil.AnnotationMirrorSet)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"ConstraintMap","l":"addTypeSupertype(TypeVariable, AnnotatedTypeMirror, AnnotationMirrorSet)","u":"addTypeSupertype(javax.lang.model.type.TypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.javacutil.AnnotationMirrorSet)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"addUncheckedCodeDefault(AnnotationMirror, TypeUseLocation)","u":"addUncheckedCodeDefault(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.qual.TypeUseLocation)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"addUncheckedCodeDefault(AnnotationMirror, TypeUseLocation, boolean)","u":"addUncheckedCodeDefault(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.qual.TypeUseLocation,boolean)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"addUncheckedCodeDefaults(AnnotationMirror, TypeUseLocation[])","u":"addUncheckedCodeDefaults(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.qual.TypeUseLocation[])"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"addUncheckedStandardDefaults()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"addUncheckedStandardDefaults(QualifierDefaults)","u":"addUncheckedStandardDefaults(org.checkerframework.framework.util.defaults.QualifierDefaults)"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprStore","l":"addUseInExpression(Node)","u":"addUseInExpression(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarStore","l":"addUseInExpression(Node)","u":"addUseInExpression(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.javacutil","c":"SystemUtil","l":"addWithoutDuplicates(List<T>, List<? extends T>)","u":"addWithoutDuplicates(java.util.List,java.util.List)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsAnnotatedTypeFactory","l":"adjustMethodNameUsingValueChecker(String, MethodInvocationTree)","u":"adjustMethodNameUsingValueChecker(java.lang.String,com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.framework.test","c":"CheckerFrameworkPerDirectoryTest","l":"adjustTypecheckResult(TypecheckResult)","u":"adjustTypecheckResult(org.checkerframework.framework.test.TypecheckResult)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"JavaDiagnosticReader","l":"advance()"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"AFConstraint","l":"AFConstraint(AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.dataflow.analysis","c":"Analysis.BeforeOrAfter","l":"AFTER"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer.VisualizeWhere","l":"AFTER"},{"p":"org.checkerframework.framework.util.typeinference","c":"DefaultTypeArgumentInference","l":"afToTuConstraints(Set<? extends AFConstraint>, Set<TypeVariable>)","u":"afToTuConstraints(java.util.Set,java.util.Set)"},{"p":"org.checkerframework.framework.source","c":"AggregateChecker","l":"AggregateChecker()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.test","c":"AinferGeneratePerDirectoryTest","l":"AinferGeneratePerDirectoryTest(List<File>, Class<? extends AbstractProcessor>, String, String...)","u":"%3Cinit%3E(java.util.List,java.lang.Class,java.lang.String,java.lang.String...)"},{"p":"org.checkerframework.framework.test","c":"AinferValidatePerDirectoryTest","l":"AinferValidatePerDirectoryTest(List<File>, Class<? extends AbstractProcessor>, String, String, Class<? extends AinferGeneratePerDirectoryTest>, String...)","u":"%3Cinit%3E(java.util.List,java.lang.Class,java.lang.String,java.lang.String,java.lang.Class,java.lang.String...)"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileUtil.AnnotationFileType","l":"AJAVA"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileUtil.AnnotationFileType","l":"AJAVA_AS_STUB"},{"p":"org.checkerframework.framework.test","c":"AinferValidatePerDirectoryTest","l":"ajavaArgFromFiles(List<File>, String)","u":"ajavaArgFromFiles(java.util.List,java.lang.String)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"ajavaTypes"},{"p":"org.checkerframework.common.aliasing","c":"AliasingAnnotatedTypeFactory","l":"AliasingAnnotatedTypeFactory(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.common.aliasing","c":"AliasingChecker","l":"AliasingChecker()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.common.aliasing","c":"AliasingAnnotatedTypeFactory.AliasingQualifierHierarchy","l":"AliasingQualifierHierarchy(Collection<Class<? extends Annotation>>, Elements)","u":"%3Cinit%3E(java.util.Collection,javax.lang.model.util.Elements)"},{"p":"org.checkerframework.common.aliasing","c":"AliasingTransfer","l":"AliasingTransfer(CFAbstractAnalysis<CFValue, CFStore, CFTransfer>)","u":"%3Cinit%3E(org.checkerframework.framework.flow.CFAbstractAnalysis)"},{"p":"org.checkerframework.common.aliasing","c":"AliasingAnnotatedTypeFactory.AliasingTreeAnnotator","l":"AliasingTreeAnnotator(AliasingAnnotatedTypeFactory)","u":"%3Cinit%3E(org.checkerframework.common.aliasing.AliasingAnnotatedTypeFactory)"},{"p":"org.checkerframework.common.aliasing","c":"AliasingVisitor","l":"AliasingVisitor(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.framework.qual","c":"LiteralKind","l":"ALL"},{"p":"org.checkerframework.framework.qual","c":"TypeUseLocation","l":"ALL"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileUtil","l":"allAnnotationFiles(String, AnnotationFileUtil.AnnotationFileType)","u":"allAnnotationFiles(java.lang.String,org.checkerframework.framework.stub.AnnotationFileUtil.AnnotationFileType)"},{"p":"org.checkerframework.framework.qual","c":"LiteralKind","l":"allLiteralKinds()"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy","l":"allQualifierKinds()"},{"p":"org.checkerframework.framework.util","c":"QualifierKindHierarchy","l":"allQualifierKinds()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedUnionType","l":"alternatives"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferInput","l":"analysis"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"analysis"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"analysis"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue","l":"analysis"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"analysis"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"analysisCaches"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"AnalysisResult(IdentityHashMap<Node, V>, IdentityHashMap<Block, TransferInput<V, S>>, IdentityHashMap<Tree, Set<Node>>, IdentityHashMap<UnaryTree, BinaryTree>, HashMap<VariableElement, V>)","u":"%3Cinit%3E(java.util.IdentityHashMap,java.util.IdentityHashMap,java.util.IdentityHashMap,java.util.IdentityHashMap,java.util.HashMap)"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"AnalysisResult(IdentityHashMap<Node, V>, IdentityHashMap<Block, TransferInput<V, S>>, IdentityHashMap<Tree, Set<Node>>, IdentityHashMap<UnaryTree, BinaryTree>, HashMap<VariableElement, V>, Map<TransferInput<V, S>, IdentityHashMap<Node, TransferResult<V, S>>>)","u":"%3Cinit%3E(java.util.IdentityHashMap,java.util.IdentityHashMap,java.util.IdentityHashMap,java.util.IdentityHashMap,java.util.HashMap,java.util.Map)"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"AnalysisResult(Map<TransferInput<V, S>, IdentityHashMap<Node, TransferResult<V, S>>>)","u":"%3Cinit%3E(java.util.Map)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"analyze(Queue<Pair<ClassTree, Store>>, Queue<Pair<LambdaExpressionTree, Store>>, UnderlyingAST, List<CFAbstractAnalysis.FieldInitialValue<Value>>, ClassTree, boolean, boolean, boolean, Store)","u":"analyze(java.util.Queue,java.util.Queue,org.checkerframework.dataflow.cfg.UnderlyingAST,java.util.List,com.sun.source.tree.ClassTree,boolean,boolean,boolean,Store)"},{"p":"org.checkerframework.framework.util","c":"JavaExpressionParseUtil","l":"ANCHORED_PARAMETER_PATTERN"},{"p":"org.checkerframework.framework.util.defaults","c":"Default","l":"anno"},{"p":"org.checkerframework.checker.initialization","c":"InitializationVisitor","l":"annoFormatter"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter.FormattingVisitor","l":"annoFormatter"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker.PurityCheckerHelper","l":"annoProvider"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileParser","l":"annosInPackage(PackageElement)","u":"annosInPackage(javax.lang.model.element.PackageElement)"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileParser","l":"annosInType(TypeElement)","u":"annosInType(javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"annotate(Element, AnnotatedTypeMirror)","u":"annotate(javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"annotate(Tree, AnnotatedTypeMirror)","u":"annotate(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"annotatedForValueElement"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"annotatedGLB(AnnotatedTypeFactory, AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"annotatedGLB(org.checkerframework.framework.type.AnnotatedTypeFactory,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.element","c":"MethodApplier","l":"annotatedTargets()"},{"p":"org.checkerframework.framework.util.element","c":"ParamApplier","l":"annotatedTargets()"},{"p":"org.checkerframework.framework.util.element","c":"SuperTypeApplier","l":"annotatedTargets()"},{"p":"org.checkerframework.framework.util.element","c":"TypeDeclarationApplier","l":"annotatedTargets()"},{"p":"org.checkerframework.framework.util.element","c":"MethodTypeParamApplier","l":"annotatedTargets()"},{"p":"org.checkerframework.framework.util.element","c":"VariableApplier","l":"annotatedTargets()"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeCombiner","l":"AnnotatedTypeCombiner(QualifierHierarchy)","u":"%3Cinit%3E(org.checkerframework.framework.type.QualifierHierarchy)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeCopier","l":"AnnotatedTypeCopier()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeCopier","l":"AnnotatedTypeCopier(boolean)","u":"%3Cinit%3E(boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeCopierWithReplacement","l":"AnnotatedTypeCopierWithReplacement()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"AnnotatedTypeFactory(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeParameterBounds","l":"AnnotatedTypeParameterBounds(AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeReplacer","l":"AnnotatedTypeReplacer()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeReplacer","l":"AnnotatedTypeReplacer(AnnotationMirror)","u":"%3Cinit%3E(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"AnnotatedTypeScanner()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"AnnotatedTypeScanner(AnnotatedTypeScanner.Reduce<R>)","u":"%3Cinit%3E(org.checkerframework.framework.type.visitor.AnnotatedTypeScanner.Reduce)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"AnnotatedTypeScanner(AnnotatedTypeScanner.Reduce<R>, R)","u":"%3Cinit%3E(org.checkerframework.framework.type.visitor.AnnotatedTypeScanner.Reduce,R)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"AnnotatedTypeScanner(R)","u":"%3Cinit%3E(R)"},{"p":"org.checkerframework.framework.type","c":"ElementAnnotationApplier","l":"annotateSupers(List<AnnotatedTypeMirror.AnnotatedDeclaredType>, TypeElement)","u":"annotateSupers(java.util.List,javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.framework.util.element","c":"SuperTypeApplier","l":"annotateSupers(List<AnnotatedTypeMirror.AnnotatedDeclaredType>, TypeElement)","u":"annotateSupers(java.util.List,javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.framework.util","c":"Contract","l":"annotation"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"annotationBinaryName(AnnotationMirror)","u":"annotationBinaryName(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"AnnotationBuilder(ProcessingEnvironment, AnnotationMirror)","u":"%3Cinit%3E(javax.annotation.processing.ProcessingEnvironment,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"AnnotationBuilder(ProcessingEnvironment, CharSequence)","u":"%3Cinit%3E(javax.annotation.processing.ProcessingEnvironment,java.lang.CharSequence)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"AnnotationBuilder(ProcessingEnvironment, Class<? extends Annotation>)","u":"%3Cinit%3E(javax.annotation.processing.ProcessingEnvironment,java.lang.Class)"},{"p":"org.checkerframework.framework.type","c":"AnnotationClassLoader","l":"AnnotationClassLoader(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.framework.util","c":"QualifierKindHierarchy","l":"annotationClassName(Class<? extends Annotation>)","u":"annotationClassName(java.lang.Class)"},{"p":"org.checkerframework.framework.ajava","c":"AnnotationEqualityVisitor","l":"AnnotationEqualityVisitor()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileParser.AnnotationFileAnnotations","l":"AnnotationFileAnnotations()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileElementTypes","l":"AnnotationFileElementTypes(AnnotatedTypeFactory)","u":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.ajava","c":"AnnotationFileStore","l":"AnnotationFileStore()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileUtil","l":"AnnotationFileUtil()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"annotationFromAnnotationTree(AnnotationTree)","u":"annotationFromAnnotationTree(com.sun.source.tree.AnnotationTree)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorMap","l":"AnnotationMirrorMap()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorMap","l":"AnnotationMirrorMap(Map<AnnotationMirror, ? extends V>)","u":"%3Cinit%3E(java.util.Map)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"AnnotationMirrorSet()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"AnnotationMirrorSet(Collection<? extends AnnotationMirror>)","u":"%3Cinit%3E(java.util.Collection)"},{"p":"org.checkerframework.framework.ajava","c":"AnnotationMirrorToAnnotationExprConversion","l":"annotationMirrorSetToAnnotationExprList(AnnotationMirrorSet)","u":"annotationMirrorSetToAnnotationExprList(org.checkerframework.javacutil.AnnotationMirrorSet)"},{"p":"org.checkerframework.framework.ajava","c":"AnnotationMirrorToAnnotationExprConversion","l":"annotationMirrorToAnnotationExpr(AnnotationMirror)","u":"annotationMirrorToAnnotationExpr(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.ajava","c":"AnnotationMirrorToAnnotationExprConversion","l":"AnnotationMirrorToAnnotationExprConversion()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"annotationMirrorToClass(AnnotationMirror)","u":"annotationMirrorToClass(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"annotationName(AnnotationMirror)","u":"annotationName(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"annotationProvider"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue","l":"annotations"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"annotations"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue.AnnotationSetCombiner","l":"AnnotationSetCombiner()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"annotationsFromArrayCreation(NewArrayTree, int)","u":"annotationsFromArrayCreation(com.sun.source.tree.NewArrayTree,int)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"annotationsFromTree(AnnotatedTypeTree)","u":"annotationsFromTree(com.sun.source.tree.AnnotatedTypeTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"annotationsFromTree(TypeParameterTree)","u":"annotationsFromTree(com.sun.source.tree.TypeParameterTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"annotationsFromTypeAnnotationTrees(List<? extends AnnotationTree>)","u":"annotationsFromTypeAnnotationTrees(java.util.List)"},{"p":"org.checkerframework.common.util.count","c":"AnnotationStatistics","l":"AnnotationStatistics()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.ajava","c":"AnnotationTransferVisitor","l":"AnnotationTransferVisitor()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"annotationValueContains(AnnotationValue, String)","u":"annotationValueContains(javax.lang.model.element.AnnotationValue,java.lang.String)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"annotationValueContains(List<? extends AnnotationValue>, String)","u":"annotationValueContains(java.util.List,java.lang.String)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"annotationValueContainsToString(AnnotationValue, String)","u":"annotationValueContainsToString(javax.lang.model.element.AnnotationValue,java.lang.String)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"annotationValueContainsToString(List<? extends AnnotationValue>, String)","u":"annotationValueContainsToString(java.util.List,java.lang.String)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"annotationValueListToEnumArray(AnnotationValue, Class<T>)","u":"annotationValueListToEnumArray(javax.lang.model.element.AnnotationValue,java.lang.Class)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"annotationValueListToEnumArray(List<AnnotationValue>, Class<T>)","u":"annotationValueListToEnumArray(java.util.List,java.lang.Class)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"annotationValueToList(AnnotationValue, Class<T>)","u":"annotationValueToList(javax.lang.model.element.AnnotationValue,java.lang.Class)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"annotationValueToList(List<? extends AnnotationValue>, Class<T>)","u":"annotationValueToList(java.util.List,java.lang.Class)"},{"p":"org.checkerframework.framework.type.treeannotator","c":"ListTreeAnnotator","l":"annotators"},{"p":"org.checkerframework.framework.util.element","c":"VariableApplier","l":"apply(AnnotatedTypeMirror, Element)","u":"apply(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.type","c":"ElementAnnotationApplier","l":"apply(AnnotatedTypeMirror, Element, AnnotatedTypeFactory)","u":"apply(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util.element","c":"MethodApplier","l":"apply(AnnotatedTypeMirror, Element, AnnotatedTypeFactory)","u":"apply(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util.element","c":"TypeDeclarationApplier","l":"apply(AnnotatedTypeMirror, Element, AnnotatedTypeFactory)","u":"apply(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util.element","c":"TypeVarUseApplier","l":"apply(AnnotatedTypeMirror, Element, AnnotatedTypeFactory)","u":"apply(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util.element","c":"ParamApplier","l":"apply(AnnotatedTypeMirror, VariableElement, AnnotatedTypeFactory)","u":"apply(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.VariableElement,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util.element","c":"ClassTypeParamApplier","l":"apply(AnnotatedTypeMirror.AnnotatedTypeVariable, Element, AnnotatedTypeFactory)","u":"apply(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util.element","c":"MethodTypeParamApplier","l":"apply(AnnotatedTypeMirror.AnnotatedTypeVariable, Element, AnnotatedTypeFactory)","u":"apply(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util.element","c":"ElementAnnotationUtil","l":"applyAllElementAnnotations(List<? extends AnnotatedTypeMirror>, List<? extends Element>, AnnotatedTypeFactory)","u":"applyAllElementAnnotations(java.util.List,java.util.List,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"applyAnnotationsFromDeclaredType(AnnotatedTypeMirror.AnnotatedDeclaredType, DeclaredType)","u":"applyAnnotationsFromDeclaredType(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,javax.lang.model.type.DeclaredType)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"applyCaptureConversion(AnnotatedTypeMirror)","u":"applyCaptureConversion(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"applyCaptureConversion(AnnotatedTypeMirror, TypeMirror)","u":"applyCaptureConversion(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"applyConservativeDefaults(Element)","u":"applyConservativeDefaults(javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults.DefaultApplierElement","l":"applyDefault(Default)","u":"applyDefault(org.checkerframework.framework.util.defaults.Default)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"applyInferredAnnotations(AnnotatedTypeMirror, CFValue)","u":"applyInferredAnnotations(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.flow.CFValue)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"applyInferredAnnotations(AnnotatedTypeMirror, Value)","u":"applyInferredAnnotations(org.checkerframework.framework.type.AnnotatedTypeMirror,Value)"},{"p":"org.checkerframework.framework.type","c":"DefaultInferredTypesApplier","l":"applyInferredType(AnnotatedTypeMirror, AnnotationMirrorSet, TypeMirror)","u":"applyInferredType(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"applyQualifierParameterDefaults(Element, AnnotatedTypeMirror)","u":"applyQualifierParameterDefaults(javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"applyQualifierParameterDefaults(Tree, AnnotatedTypeMirror)","u":"applyQualifierParameterDefaults(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.defaults","c":"Default","l":"applyToSubpackages"},{"p":"org.checkerframework.framework.qual","c":"DefaultQualifier","l":"applyToSubpackages()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"applyUnboxing(AnnotatedTypeMirror)","u":"applyUnboxing(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.Kind","l":"ARBITRARY_CODE"},{"p":"org.checkerframework.framework.type","c":"StructuralEqualityComparer","l":"areAllEqual(Collection<? extends AnnotatedTypeMirror>, Collection<? extends AnnotatedTypeMirror>)","u":"areAllEqual(java.util.Collection,java.util.Collection)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"areAllFieldsInitializedOnly(ClassTree)","u":"areAllFieldsInitializedOnly(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"areAllSubtypes(Iterable<? extends AnnotatedTypeMirror>, AnnotatedTypeMirror)","u":"areAllSubtypes(java.lang.Iterable,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"areBoundsValid(AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"areBoundsValid(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"areCorrespondingTypeVariables(Elements, AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedTypeVariable)","u":"areCorrespondingTypeVariables(javax.lang.model.util.Elements,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"areEqualInHierarchy(AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"areEqualInHierarchy(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"StructuralEqualityComparer","l":"areEqualInHierarchy(AnnotatedTypeMirror, AnnotatedTypeMirror, AnnotationMirror)","u":"areEqualInHierarchy(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"areEqualVisitHistory"},{"p":"org.checkerframework.framework.type","c":"EqualityAtmComparer","l":"arePrimeAnnosEqual(AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"arePrimeAnnosEqual(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"StructuralEqualityComparer","l":"arePrimeAnnosEqual(AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"arePrimeAnnosEqual(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"areSame(AnnotationMirror, AnnotationMirror)","u":"areSame(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"areSame(Collection<? extends AnnotationMirror>, Collection<? extends AnnotationMirror>)","u":"areSame(java.util.Collection,java.util.Collection)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"areSameByClass(AnnotationMirror, Class<? extends Annotation>)","u":"areSameByClass(javax.lang.model.element.AnnotationMirror,java.lang.Class)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"areSameByClass(AnnotationMirror, Class<? extends Annotation>)","u":"areSameByClass(javax.lang.model.element.AnnotationMirror,java.lang.Class)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"areSameByName(AnnotationMirror, AnnotationMirror)","u":"areSameByName(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"areSameByName(AnnotationMirror, String)","u":"areSameByName(javax.lang.model.element.AnnotationMirror,java.lang.String)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"areSameDeclaredTypes(Type.ClassType, Type.ClassType)","u":"areSameDeclaredTypes(com.sun.tools.javac.code.Type.ClassType,com.sun.tools.javac.code.Type.ClassType)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"areSamePrimitiveTypes(TypeMirror, TypeMirror)","u":"areSamePrimitiveTypes(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.util","c":"JavaExpressionParseUtil.JavaExpressionParseException","l":"args"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"AFConstraint","l":"argument"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodInvocationNode","l":"arguments"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ObjectCreationNode","l":"arguments"},{"p":"org.checkerframework.dataflow.expression","c":"MethodCall","l":"arguments"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"arithmeticExceptionType"},{"p":"org.checkerframework.checker.index","c":"Subsequence","l":"array"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayAccessNode","l":"array"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayAccess","l":"array"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil.InvocationType","l":"ARRAY"},{"p":"org.checkerframework.framework.qual","c":"TypeKind","l":"ARRAY"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"ARRAY_ARRAY"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"ARRAY_DECLARED"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"ARRAY_EXECUTABLE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"ARRAY_INTERSECTION"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"ARRAY_NONE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"ARRAY_NULL"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"ARRAY_PRIMITIVE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"ARRAY_TYPEVAR"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"ARRAY_UNION"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"ARRAY_WILDCARD"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayAccess","l":"ArrayAccess(TypeMirror, JavaExpression, JavaExpression)","u":"%3Cinit%3E(javax.lang.model.type.TypeMirror,org.checkerframework.dataflow.expression.JavaExpression,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayAccessNode","l":"ArrayAccessNode(ArrayAccessTree, Node, Node)","u":"%3Cinit%3E(com.sun.source.tree.ArrayAccessTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayCreation","l":"ArrayCreation(TypeMirror, List<JavaExpression>, List<JavaExpression>)","u":"%3Cinit%3E(javax.lang.model.type.TypeMirror,java.util.List,java.util.List)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayCreationNode","l":"ArrayCreationNode(NewArrayTree, TypeMirror, List<Node>, List<Node>)","u":"%3Cinit%3E(com.sun.source.tree.NewArrayTree,javax.lang.model.type.TypeMirror,java.util.List,java.util.List)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayAccessNode","l":"arrayExpression"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"arrayIndexOutOfBoundsExceptionType"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"ARRAYLEN_NAME"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"ARRAYLENRANGE_NAME"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"arrayLenRangeFromElement"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"arrayLenRangeToElement"},{"p":"org.checkerframework.common.reflection","c":"MethodValAnnotatedTypeFactory","l":"arrayLenValueElement"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"arrayLenValueElement"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"arraysAreRelevant"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayTypeNode","l":"ArrayTypeNode(ArrayTypeTree, Types)","u":"%3Cinit%3E(com.sun.source.tree.ArrayTypeTree,javax.lang.model.util.Types)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"arrayValues"},{"p":"org.checkerframework.checker.formatter.util","c":"FormatUtil","l":"asFormat(String, ConversionCategory...)","u":"asFormat(java.lang.String,org.checkerframework.checker.formatter.qual.ConversionCategory...)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil","l":"asFormatCallCategories(MethodInvocationNode)","u":"asFormatCallCategories(org.checkerframework.dataflow.cfg.node.MethodInvocationNode)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"asMemberOf(Types, AnnotatedTypeFactory, AnnotatedTypeMirror, Element)","u":"asMemberOf(javax.lang.model.util.Types,org.checkerframework.framework.type.AnnotatedTypeFactory,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"asMemberOf(Types, AnnotatedTypeFactory, AnnotatedTypeMirror, Element, AnnotatedTypeMirror)","u":"asMemberOf(javax.lang.model.util.Types,org.checkerframework.framework.type.AnnotatedTypeFactory,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"asMemberOf(Types, AnnotatedTypeFactory, AnnotatedTypeMirror, ExecutableElement)","u":"asMemberOf(javax.lang.model.util.Types,org.checkerframework.framework.type.AnnotatedTypeFactory,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"asMemberOf(Types, AnnotatedTypeFactory, AnnotatedTypeMirror, ExecutableElement, AnnotatedTypeMirror.AnnotatedExecutableType)","u":"asMemberOf(javax.lang.model.util.Types,org.checkerframework.framework.type.AnnotatedTypeFactory,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.ExecutableElement,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.checker.regex.util","c":"RegexUtil","l":"asRegex(String)","u":"asRegex(java.lang.String)"},{"p":"org.checkerframework.checker.regex.util","c":"RegexUtil","l":"asRegex(String, int)","u":"asRegex(java.lang.String,int)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssertionErrorNode","l":"AssertionErrorNode(AssertTree, Node, Node, TypeMirror)","u":"%3Cinit%3E(com.sun.source.tree.AssertTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"assertionErrorType"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"assertSameSize(Collection<?>, Collection<?>)","u":"assertSameSize(java.util.Collection,java.util.Collection)"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"assertSameSize(Collection<? extends Object>, Collection<? extends Object>, Collection<? extends Object>)","u":"assertSameSize(java.util.Collection,java.util.Collection,java.util.Collection)"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"assertTestDidNotFail(TypecheckResult)","u":"assertTestDidNotFail(org.checkerframework.framework.test.TypecheckResult)"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"assertValidState()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"assignConvert(Node, TypeMirror)","u":"assignConvert(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.util.typeinference","c":"TypeArgInferenceUtil","l":"assignedTo(AnnotatedTypeFactory, TreePath)","u":"assignedTo(org.checkerframework.framework.type.AnnotatedTypeFactory,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.framework.util.typeinference","c":"TypeArgInferenceUtil","l":"assignedToVariable(AnnotatedTypeFactory, Tree)","u":"assignedToVariable(org.checkerframework.framework.type.AnnotatedTypeFactory,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker.PurityCheckerHelper","l":"assignmentCheck(ExpressionTree)","u":"assignmentCheck(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssignmentNode","l":"AssignmentNode(Tree, Node, Node)","u":"%3Cinit%3E(com.sun.source.tree.Tree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssignmentNode","l":"AssignmentNode(Tree, Node, Node, boolean)","u":"%3Cinit%3E(com.sun.source.tree.Tree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node,boolean)"},{"p":"org.checkerframework.framework.flow","c":"CFCFGBuilder","l":"assumeAssertionsActivatedForAssertTree(BaseTypeChecker, AssertTree)","u":"assumeAssertionsActivatedForAssertTree(org.checkerframework.common.basetype.BaseTypeChecker,com.sun.source.tree.AssertTree)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"assumeAssertionsDisabled"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"assumeAssertionsEnabled"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"assumeAssertionsEnabledFor(AssertTree)","u":"assumeAssertionsEnabledFor(com.sun.source.tree.AssertTree)"},{"p":"org.checkerframework.framework.flow","c":"CFCFGBuilder.CFCFGTranslationPhaseOne","l":"assumeAssertionsEnabledFor(AssertTree)","u":"assumeAssertionsEnabledFor(com.sun.source.tree.AssertTree)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"asSuper(AnnotatedTypeFactory, AnnotatedTypeMirror, T)","u":"asSuper(org.checkerframework.framework.type.AnnotatedTypeFactory,org.checkerframework.framework.type.AnnotatedTypeMirror,T)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"asSuper(AnnotatedTypeMirror, T)","u":"asSuper(org.checkerframework.framework.type.AnnotatedTypeMirror,T)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"asSuper(TypeMirror, TypeMirror, ProcessingEnvironment)","u":"asSuper(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"AsSuperVisitor(AnnotatedTypeFactory)","u":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.test","c":"AinferValidatePerDirectoryTest","l":"astubsArgFromFiles(List<File>, String)","u":"astubsArgFromFiles(java.util.List,java.lang.String)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedDeclaredType","l":"asUse()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedTypeVariable","l":"asUse()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"asUse()"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"atConstructorInvocation(AnnotatedTypeMirror.AnnotatedExecutableType, NewClassTree)","u":"atConstructorInvocation(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"atConstructorInvocation(NewClassTree)","u":"atConstructorInvocation(com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.framework.util","c":"StringToJavaExpression","l":"atConstructorInvocation(String, NewClassTree, SourceChecker)","u":"atConstructorInvocation(java.lang.String,com.sun.source.tree.NewClassTree,org.checkerframework.framework.source.SourceChecker)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"atExpression(AnnotatedTypeMirror, ExpressionTree)","u":"atExpression(org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"atFieldAccess(AnnotatedTypeMirror, MemberSelectTree)","u":"atFieldAccess(org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.MemberSelectTree)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"atFieldAccess(JavaExpression)","u":"atFieldAccess(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.framework.util","c":"StringToJavaExpression","l":"atFieldAccess(String, MemberSelectTree, SourceChecker)","u":"atFieldAccess(java.lang.String,com.sun.source.tree.MemberSelectTree,org.checkerframework.framework.source.SourceChecker)"},{"p":"org.checkerframework.framework.util","c":"StringToJavaExpression","l":"atFieldDecl(String, VariableElement, SourceChecker)","u":"atFieldDecl(java.lang.String,javax.lang.model.element.VariableElement,org.checkerframework.framework.source.SourceChecker)"},{"p":"org.checkerframework.framework.util","c":"StringToJavaExpression","l":"atLambdaParameter(String, LambdaExpressionTree, TreePath, SourceChecker)","u":"atLambdaParameter(java.lang.String,com.sun.source.tree.LambdaExpressionTree,com.sun.source.util.TreePath,org.checkerframework.framework.source.SourceChecker)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"atLocalVariable(AnnotatedTypeMirror, Element)","u":"atLocalVariable(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"atMethodBody(AnnotatedTypeMirror, MethodTree)","u":"atMethodBody(org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"atMethodBody(MethodTree)","u":"atMethodBody(com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.framework.util","c":"StringToJavaExpression","l":"atMethodBody(String, MethodTree, SourceChecker)","u":"atMethodBody(java.lang.String,com.sun.source.tree.MethodTree,org.checkerframework.framework.source.SourceChecker)"},{"p":"org.checkerframework.framework.util","c":"StringToJavaExpression","l":"atMethodDecl(String, ExecutableElement, SourceChecker)","u":"atMethodDecl(java.lang.String,javax.lang.model.element.ExecutableElement,org.checkerframework.framework.source.SourceChecker)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"atMethodInvocation(AnnotatedTypeMirror.AnnotatedExecutableType, MethodInvocationTree)","u":"atMethodInvocation(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"atMethodInvocation(MethodInvocationNode)","u":"atMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"atMethodInvocation(MethodInvocationTree)","u":"atMethodInvocation(com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.framework.util","c":"StringToJavaExpression","l":"atMethodInvocation(String, MethodInvocationNode, SourceChecker)","u":"atMethodInvocation(java.lang.String,org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.framework.source.SourceChecker)"},{"p":"org.checkerframework.framework.util","c":"StringToJavaExpression","l":"atMethodInvocation(String, MethodInvocationTree, SourceChecker)","u":"atMethodInvocation(java.lang.String,com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.source.SourceChecker)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"atParameterizedTypeUse(List<AnnotatedTypeParameterBounds>, TypeElement)","u":"atParameterizedTypeUse(java.util.List,javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.framework.util","c":"StringToJavaExpression","l":"atPath(String, TreePath, SourceChecker)","u":"atPath(java.lang.String,com.sun.source.util.TreePath,org.checkerframework.framework.source.SourceChecker)"},{"p":"org.checkerframework.checker.units.qual","c":"Prefix","l":"atto"},{"p":"org.checkerframework.javacutil","c":"TypeAnnotationUtils","l":"attributeFromAnnotationValue(ExecutableElement, AnnotationValue, ProcessingEnvironment)","u":"attributeFromAnnotationValue(javax.lang.model.element.ExecutableElement,javax.lang.model.element.AnnotationValue,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"atTypeDecl(AnnotatedTypeMirror, TypeElement)","u":"atTypeDecl(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.framework.util","c":"StringToJavaExpression","l":"atTypeDecl(String, TypeElement, SourceChecker)","u":"atTypeDecl(java.lang.String,javax.lang.model.element.TypeElement,org.checkerframework.framework.source.SourceChecker)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"atVariableDeclaration(AnnotatedTypeMirror, Tree, VariableElement)","u":"atVariableDeclaration(org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree,javax.lang.model.element.VariableElement)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationTransfer","l":"atypeFactory"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationTransfer","l":"atypeFactory"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"atypeFactory"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"atypeFactory"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"atypeFactory"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis","l":"atypeFactory"},{"p":"org.checkerframework.framework.type","c":"AbstractViewpointAdapter","l":"atypeFactory"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"atypeFactory"},{"p":"org.checkerframework.framework.type.poly","c":"AbstractQualifierPolymorphism","l":"atypeFactory"},{"p":"org.checkerframework.framework.type.treeannotator","c":"TreeAnnotator","l":"atypeFactory"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults.DefaultApplierElement","l":"atypeFactory"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileParser.AnnotationFileAnnotations","l":"atypes"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"AutoValueSupport","l":"AutoValueSupport(CalledMethodsAnnotatedTypeFactory)","u":"%3Cinit%3E(org.checkerframework.checker.calledmethods.CalledMethodsAnnotatedTypeFactory)"},{"p":"org.checkerframework.dataflow.analysis","c":"Analysis.Direction","l":"BACKWARD"},{"p":"org.checkerframework.dataflow.analysis","c":"BackwardAnalysisImpl","l":"BackwardAnalysisImpl()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.analysis","c":"BackwardAnalysisImpl","l":"BackwardAnalysisImpl(T)","u":"%3Cinit%3E(T)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis.Worklist.BackwardDFOComparator","l":"BackwardDFOComparator()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.common.basetype","c":"BaseAnnotatedTypeFactory","l":"BaseAnnotatedTypeFactory(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.common.basetype","c":"BaseAnnotatedTypeFactory","l":"BaseAnnotatedTypeFactory(BaseTypeChecker, boolean)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,boolean)"},{"p":"org.checkerframework.checker.index","c":"BaseAnnotatedTypeFactoryForIndexChecker","l":"BaseAnnotatedTypeFactoryForIndexChecker(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"BaseTypeChecker()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"BaseTypeValidator(BaseTypeChecker, BaseTypeVisitor<?>, AnnotatedTypeFactory)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,org.checkerframework.common.basetype.BaseTypeVisitor,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"BaseTypeVisitor(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"BaseTypeVisitor(BaseTypeChecker, Factory)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,Factory)"},{"p":"org.checkerframework.javacutil","c":"BasicAnnotationProvider","l":"BasicAnnotationProvider()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.javacutil","c":"BasicTypeProcessor","l":"BasicTypeProcessor()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.analysis","c":"Analysis.BeforeOrAfter","l":"BEFORE"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer.VisualizeWhere","l":"BEFORE"},{"p":"org.checkerframework.checker.signature","c":"SignatureAnnotatedTypeFactory","l":"BINARY_NAME"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"binaryName(TypeMirror)","u":"binaryName(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"binaryNumericPromotion(Node, TypeMirror)","u":"binaryNumericPromotion(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.dataflow.expression","c":"BinaryOperation","l":"BinaryOperation(BinaryOperationNode, JavaExpression, JavaExpression)","u":"%3Cinit%3E(org.checkerframework.dataflow.cfg.node.BinaryOperationNode,org.checkerframework.dataflow.expression.JavaExpression,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"BinaryOperation","l":"BinaryOperation(TypeMirror, Tree.Kind, JavaExpression, JavaExpression)","u":"%3Cinit%3E(javax.lang.model.type.TypeMirror,com.sun.source.tree.Tree.Kind,org.checkerframework.dataflow.expression.JavaExpression,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BinaryOperationNode","l":"BinaryOperationNode(BinaryTree, Node, Node)","u":"%3Cinit%3E(com.sun.source.tree.BinaryTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"binaryPromotedType(TypeMirror, TypeMirror)","u":"binaryPromotedType(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"binaryTreeArgTypes(AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"binaryTreeArgTypes(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"binaryTreeArgTypes(BinaryTree)","u":"binaryTreeArgTypes(com.sun.source.tree.BinaryTree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"binaryTreeArgTypes(TypeMirror, AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"binaryTreeArgTypes(javax.lang.model.type.TypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"bindingPatternTreeGetVariable(Tree)","u":"bindingPatternTreeGetVariable(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"InstanceOfNode","l":"bindingVariable"},{"p":"org.checkerframework.common.value.util","c":"ByteMath","l":"bitwiseAnd(Number)","u":"bitwiseAnd(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"DoubleMath","l":"bitwiseAnd(Number)","u":"bitwiseAnd(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"FloatMath","l":"bitwiseAnd(Number)","u":"bitwiseAnd(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"IntegerMath","l":"bitwiseAnd(Number)","u":"bitwiseAnd(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"LongMath","l":"bitwiseAnd(Number)","u":"bitwiseAnd(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"NumberMath","l":"bitwiseAnd(Number)","u":"bitwiseAnd(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"ShortMath","l":"bitwiseAnd(Number)","u":"bitwiseAnd(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"bitwiseAnd(Range)","u":"bitwiseAnd(org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BitwiseAndNode","l":"BitwiseAndNode(BinaryTree, Node, Node)","u":"%3Cinit%3E(com.sun.source.tree.BinaryTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.common.value.util","c":"ByteMath","l":"bitwiseComplement()"},{"p":"org.checkerframework.common.value.util","c":"DoubleMath","l":"bitwiseComplement()"},{"p":"org.checkerframework.common.value.util","c":"FloatMath","l":"bitwiseComplement()"},{"p":"org.checkerframework.common.value.util","c":"IntegerMath","l":"bitwiseComplement()"},{"p":"org.checkerframework.common.value.util","c":"LongMath","l":"bitwiseComplement()"},{"p":"org.checkerframework.common.value.util","c":"NumberMath","l":"bitwiseComplement()"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"bitwiseComplement()"},{"p":"org.checkerframework.common.value.util","c":"ShortMath","l":"bitwiseComplement()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BitwiseComplementNode","l":"BitwiseComplementNode(UnaryTree, Node)","u":"%3Cinit%3E(com.sun.source.tree.UnaryTree,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.common.value.util","c":"ByteMath","l":"bitwiseOr(Number)","u":"bitwiseOr(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"DoubleMath","l":"bitwiseOr(Number)","u":"bitwiseOr(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"FloatMath","l":"bitwiseOr(Number)","u":"bitwiseOr(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"IntegerMath","l":"bitwiseOr(Number)","u":"bitwiseOr(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"LongMath","l":"bitwiseOr(Number)","u":"bitwiseOr(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"NumberMath","l":"bitwiseOr(Number)","u":"bitwiseOr(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"ShortMath","l":"bitwiseOr(Number)","u":"bitwiseOr(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"bitwiseOr(Range)","u":"bitwiseOr(org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BitwiseOrNode","l":"BitwiseOrNode(BinaryTree, Node, Node)","u":"%3Cinit%3E(com.sun.source.tree.BinaryTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.common.value.util","c":"ByteMath","l":"bitwiseXor(Number)","u":"bitwiseXor(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"DoubleMath","l":"bitwiseXor(Number)","u":"bitwiseXor(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"FloatMath","l":"bitwiseXor(Number)","u":"bitwiseXor(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"IntegerMath","l":"bitwiseXor(Number)","u":"bitwiseXor(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"LongMath","l":"bitwiseXor(Number)","u":"bitwiseXor(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"NumberMath","l":"bitwiseXor(Number)","u":"bitwiseXor(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"ShortMath","l":"bitwiseXor(Number)","u":"bitwiseXor(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"bitwiseXor(Range)","u":"bitwiseXor(org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BitwiseXorNode","l":"BitwiseXorNode(BinaryTree, Node, Node)","u":"%3Cinit%3E(com.sun.source.tree.BinaryTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ExtendedNode","l":"block"},{"p":"org.checkerframework.dataflow.cfg.node","c":"Node","l":"block"},{"p":"org.checkerframework.framework.util","c":"ExecUtil","l":"BLOCK_SIZE"},{"p":"org.checkerframework.dataflow.analysis","c":"ForwardAnalysisImpl","l":"blockCount"},{"p":"org.checkerframework.dataflow.cfg.block","c":"BlockImpl","l":"BlockImpl(Block.BlockType)","u":"%3Cinit%3E(org.checkerframework.dataflow.cfg.block.Block.BlockType)"},{"p":"org.checkerframework.framework.qual","c":"LiteralKind","l":"BOOLEAN"},{"p":"org.checkerframework.framework.qual","c":"TypeKind","l":"BOOLEAN"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"BOOLEAN_FALSE"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"BOOLEAN_TRUE"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BooleanLiteralNode","l":"BooleanLiteralNode(LiteralTree)","u":"%3Cinit%3E(com.sun.source.tree.LiteralTree)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"BOOLVAL_NAME"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"boolValValueElement"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"BOOT_CLASS_PATH_REGEX"},{"p":"org.checkerframework.checker.nullness","c":"KeyForPropagator.PropagationDirection","l":"BOTH"},{"p":"org.checkerframework.dataflow.analysis","c":"Store.Kind","l":"BOTH"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"bothHaveSpecificPrefix(Prefix, Prefix, Prefix)","u":"bothHaveSpecificPrefix(org.checkerframework.checker.units.qual.Prefix,org.checkerframework.checker.units.qual.Prefix,org.checkerframework.checker.units.qual.Prefix)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory","l":"bottom"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy.DefaultQualifierKind","l":"bottom"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"Constant.Type","l":"BOTTOM"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundAnnotatedTypeFactory","l":"BOTTOM"},{"p":"org.checkerframework.checker.index.searchindex","c":"SearchIndexAnnotatedTypeFactory","l":"BOTTOM"},{"p":"org.checkerframework.checker.index.substringindex","c":"SubstringIndexAnnotatedTypeFactory","l":"BOTTOM"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"BOTTOM"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"BOTTOM"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory","l":"BOTTOM"},{"p":"org.checkerframework.framework.type","c":"ElementQualifierHierarchy","l":"bottoms"},{"p":"org.checkerframework.framework.type","c":"NoElementQualifierHierarchy","l":"bottoms"},{"p":"org.checkerframework.framework.type","c":"ElementQualifierHierarchy","l":"bottomsMap"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"BOTTOMVAL"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"BOTTOMVAL_NAME"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedIntersectionType","l":"bounds"},{"p":"org.checkerframework.framework.type","c":"BoundsInitializer","l":"BoundsInitializer()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"box(Node)","u":"box(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.javacutil","c":"TypeKindUtils","l":"boxedToTypeKind(TypeMirror)","u":"boxedToTypeKind(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.javacutil","c":"BugInCF","l":"BugInCF(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.checkerframework.javacutil","c":"BugInCF","l":"BugInCF(String, Object...)","u":"%3Cinit%3E(java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.javacutil","c":"BugInCF","l":"BugInCF(String, Throwable)","u":"%3Cinit%3E(java.lang.String,java.lang.Throwable)"},{"p":"org.checkerframework.javacutil","c":"BugInCF","l":"BugInCF(Throwable)","u":"%3Cinit%3E(java.lang.Throwable)"},{"p":"org.checkerframework.javacutil","c":"BugInCF","l":"BugInCF(Throwable, String, Object...)","u":"%3Cinit%3E(java.lang.Throwable,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"build()"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"build()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGBuilder","l":"build(CompilationUnitTree, MethodTree, ClassTree, ProcessingEnvironment)","u":"build(com.sun.source.tree.CompilationUnitTree,com.sun.source.tree.MethodTree,com.sun.source.tree.ClassTree,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.framework.flow","c":"CFCFGBuilder","l":"build(CompilationUnitTree, UnderlyingAST, BaseTypeChecker, AnnotatedTypeFactory, ProcessingEnvironment)","u":"build(com.sun.source.tree.CompilationUnitTree,org.checkerframework.dataflow.cfg.UnderlyingAST,org.checkerframework.common.basetype.BaseTypeChecker,org.checkerframework.framework.type.AnnotatedTypeFactory,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGBuilder","l":"build(CompilationUnitTree, UnderlyingAST, boolean, boolean, ProcessingEnvironment)","u":"build(com.sun.source.tree.CompilationUnitTree,org.checkerframework.dataflow.cfg.UnderlyingAST,boolean,boolean,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGBuilder","l":"build(CompilationUnitTree, UnderlyingAST, ProcessingEnvironment)","u":"build(com.sun.source.tree.CompilationUnitTree,org.checkerframework.dataflow.cfg.UnderlyingAST,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"ConstraintMapBuilder","l":"build(Set<TypeVariable>, Set<TUConstraint>, AnnotatedTypeFactory)","u":"build(java.util.Set,java.util.Set,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGBuilder","l":"build(TreePath, UnderlyingAST, boolean, boolean, ProcessingEnvironment)","u":"build(com.sun.source.util.TreePath,org.checkerframework.dataflow.cfg.UnderlyingAST,boolean,boolean,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsTools","l":"buildAnnoMirrorWithDefaultPrefix(ProcessingEnvironment, Class<? extends Annotation>)","u":"buildAnnoMirrorWithDefaultPrefix(javax.annotation.processing.ProcessingEnvironment,java.lang.Class)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsTools","l":"buildAnnoMirrorWithNoPrefix(ProcessingEnvironment, CharSequence)","u":"buildAnnoMirrorWithNoPrefix(javax.annotation.processing.ProcessingEnvironment,java.lang.CharSequence)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsTools","l":"buildAnnoMirrorWithSpecificPrefix(ProcessingEnvironment, CharSequence, Prefix)","u":"buildAnnoMirrorWithSpecificPrefix(javax.annotation.processing.ProcessingEnvironment,java.lang.CharSequence,org.checkerframework.checker.units.qual.Prefix)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsTools","l":"buildAnnoMirrorWithSpecificPrefix(ProcessingEnvironment, Class<? extends Annotation>, Prefix)","u":"buildAnnoMirrorWithSpecificPrefix(javax.annotation.processing.ProcessingEnvironment,java.lang.Class,org.checkerframework.checker.units.qual.Prefix)"},{"p":"org.checkerframework.framework.flow","c":"CFTreeBuilder","l":"buildAnnotatedType(TypeMirror)","u":"buildAnnotatedType(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"buildAnnotation(AnnotationMirror, Map<ExecutableElement, List<JavaExpression>>)","u":"buildAnnotation(javax.lang.model.element.AnnotationMirror,java.util.Map)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"buildArrayAccess(ExpressionTree, ExpressionTree)","u":"buildArrayAccess(com.sun.source.tree.ExpressionTree,com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"buildArrayLengthAccess(ExpressionTree)","u":"buildArrayLengthAccess(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"buildAssignment(ExpressionTree, ExpressionTree)","u":"buildAssignment(com.sun.source.tree.ExpressionTree,com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"buildAssignment(VariableTree, ExpressionTree)","u":"buildAssignment(com.sun.source.tree.VariableTree,com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"buildBinary(TypeMirror, Tree.Kind, ExpressionTree, ExpressionTree)","u":"buildBinary(javax.lang.model.type.TypeMirror,com.sun.source.tree.Tree.Kind,com.sun.source.tree.ExpressionTree,com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"buildClassUse(Element)","u":"buildClassUse(javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"buildDefaultConfiguration(String, File, Class<?>, List<String>, boolean)","u":"buildDefaultConfiguration(java.lang.String,java.io.File,java.lang.Class,java.util.List,boolean)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"buildDefaultConfiguration(String, Iterable<File>, Collection<String>, Iterable<String>, List<String>, boolean)","u":"buildDefaultConfiguration(java.lang.String,java.lang.Iterable,java.util.Collection,java.lang.Iterable,java.util.List,boolean)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"buildDefaultConfiguration(String, Iterable<File>, Iterable<String>, List<String>, boolean)","u":"buildDefaultConfiguration(java.lang.String,java.lang.Iterable,java.lang.Iterable,java.util.List,boolean)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"buildHasNextMethodAccess(ExpressionTree)","u":"buildHasNextMethodAccess(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"buildIteratorMethodAccess(ExpressionTree)","u":"buildIteratorMethodAccess(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"buildLessThan(ExpressionTree, ExpressionTree)","u":"buildLessThan(com.sun.source.tree.ExpressionTree,com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"buildLiteral(Object)","u":"buildLiteral(java.lang.Object)"},{"p":"org.checkerframework.javacutil","c":"Resolver","l":"buildMethodContext()"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"buildMethodInvocation(ExpressionTree)","u":"buildMethodInvocation(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"buildMethodInvocation(ExpressionTree, ExpressionTree)","u":"buildMethodInvocation(com.sun.source.tree.ExpressionTree,com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"buildNewArray(TypeMirror, List<ExpressionTree>)","u":"buildNewArray(javax.lang.model.type.TypeMirror,java.util.List)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"buildNextMethodAccess(ExpressionTree)","u":"buildNextMethodAccess(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"buildPrimValueMethodAccess(Tree)","u":"buildPrimValueMethodAccess(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"buildTypeCast(TypeMirror, ExpressionTree)","u":"buildTypeCast(javax.lang.model.type.TypeMirror,com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"buildValueOfMethodAccess(Tree)","u":"buildValueOfMethodAccess(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"buildVariableDecl(Tree, String, Element, ExpressionTree)","u":"buildVariableDecl(com.sun.source.tree.Tree,java.lang.String,javax.lang.model.element.Element,com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"buildVariableDecl(TypeMirror, String, Element, ExpressionTree)","u":"buildVariableDecl(javax.lang.model.type.TypeMirror,java.lang.String,javax.lang.model.element.Element,com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"buildVariableUse(VariableTree)","u":"buildVariableUse(com.sun.source.tree.VariableTree)"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileUtil.AnnotationFileType","l":"BUILTIN_STUB"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprValue","l":"busyExpression"},{"p":"org.checkerframework.dataflow.cfg.playground","c":"BusyExpressionPlayground","l":"BusyExpressionPlayground()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprStore","l":"BusyExprStore()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprStore","l":"BusyExprStore(Set<BusyExprValue>)","u":"%3Cinit%3E(java.util.Set)"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprTransfer","l":"BusyExprTransfer()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprValue","l":"BusyExprValue(BinaryOperationNode)","u":"%3Cinit%3E(org.checkerframework.dataflow.cfg.node.BinaryOperationNode)"},{"p":"org.checkerframework.framework.qual","c":"TypeKind","l":"BYTE"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"BYTE_EVERYTHING"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"byteFromDouble(double)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"byteFromFloat(float)"},{"p":"org.checkerframework.common.value.util","c":"ByteMath","l":"ByteMath(byte)","u":"%3Cinit%3E(byte)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"byteRange()"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"C"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsAnalysis","l":"CalledMethodsAnalysis(BaseTypeChecker, CalledMethodsAnnotatedTypeFactory)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,org.checkerframework.checker.calledmethods.CalledMethodsAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsAnnotatedTypeFactory","l":"CalledMethodsAnnotatedTypeFactory(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsChecker","l":"CalledMethodsChecker()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsTransfer","l":"CalledMethodsTransfer(CalledMethodsAnalysis)","u":"%3Cinit%3E(org.checkerframework.checker.calledmethods.CalledMethodsAnalysis)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsVisitor","l":"CalledMethodsVisitor(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"callTransferFunction(Node, TransferInput<V, S>)","u":"callTransferFunction(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.analysis","c":"ForwardAnalysisImpl","l":"callTransferFunction(Node, TransferInput<V, S>)","u":"callTransferFunction(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.analysis","c":"Store","l":"canAlias(JavaExpression, JavaExpression)","u":"canAlias(org.checkerframework.dataflow.expression.JavaExpression,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprStore","l":"canAlias(JavaExpression, JavaExpression)","u":"canAlias(org.checkerframework.dataflow.expression.JavaExpression,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"ConstantPropagationStore","l":"canAlias(JavaExpression, JavaExpression)","u":"canAlias(org.checkerframework.dataflow.expression.JavaExpression,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarStore","l":"canAlias(JavaExpression, JavaExpression)","u":"canAlias(org.checkerframework.dataflow.expression.JavaExpression,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.reachingdef","c":"ReachingDefinitionStore","l":"canAlias(JavaExpression, JavaExpression)","u":"canAlias(org.checkerframework.dataflow.expression.JavaExpression,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"canAlias(JavaExpression, JavaExpression)","u":"canAlias(org.checkerframework.dataflow.expression.JavaExpression,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue","l":"canBeMissingAnnotations()"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakAnnotatedTypeFactory","l":"canCreateObligations()"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"canHaveEmptyAnnotationSet(AnnotatedTypeMirror)","u":"canHaveEmptyAnnotationSet(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"canHaveTypeAnnotation(Tree)","u":"canHaveTypeAnnotation(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"canInsertJavaExpression(JavaExpression)","u":"canInsertJavaExpression(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.checker.signature","c":"SignatureAnnotatedTypeFactory","l":"CANONICAL_NAME"},{"p":"org.checkerframework.checker.signature","c":"SignatureAnnotatedTypeFactory","l":"CANONICAL_NAME_AND_BINARY_NAME"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory","l":"canonicalAnnotation(AnnotationMirror)","u":"canonicalAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"canonicalAnnotation(AnnotationMirror)","u":"canonicalAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"canonicalAnnotation(AnnotationMirror)","u":"canonicalAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"BuilderFrameworkSupportUtils","l":"capitalize(String)","u":"capitalize(java.lang.String)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"CaseNode","l":"caseExprs"},{"p":"org.checkerframework.dataflow.cfg.node","c":"CaseNode","l":"CaseNode(CaseTree, AssignmentNode, List<Node>, Types)","u":"%3Cinit%3E(com.sun.source.tree.CaseTree,org.checkerframework.dataflow.cfg.node.AssignmentNode,java.util.List,javax.lang.model.util.Types)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"caseTreeGetBody(CaseTree)","u":"caseTreeGetBody(com.sun.source.tree.CaseTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"caseTreeGetExpressions(CaseTree)","u":"caseTreeGetExpressions(com.sun.source.tree.CaseTree)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"castedAsSuper(AnnotatedTypeFactory, AnnotatedTypeMirror, T)","u":"castedAsSuper(org.checkerframework.framework.type.AnnotatedTypeFactory,org.checkerframework.framework.type.AnnotatedTypeMirror,T)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"castNode(Class<T>, Node, Tree)","u":"castNode(java.lang.Class,com.github.javaparser.ast.Node,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.nullness.util","c":"NullnessUtil","l":"castNonNull(T)"},{"p":"org.checkerframework.checker.nullness.util","c":"NullnessUtil","l":"castNonNull(T, String)","u":"castNonNull(T,java.lang.String)"},{"p":"org.checkerframework.checker.nullness.util","c":"NullnessUtil","l":"castNonNullDeep(T[])"},{"p":"org.checkerframework.checker.nullness.util","c":"NullnessUtil","l":"castNonNullDeep(T[], String)","u":"castNonNullDeep(T[],java.lang.String)"},{"p":"org.checkerframework.checker.nullness.util","c":"NullnessUtil","l":"castNonNullDeep(T[][])"},{"p":"org.checkerframework.checker.nullness.util","c":"NullnessUtil","l":"castNonNullDeep(T[][], String)","u":"castNonNullDeep(T[][],java.lang.String)"},{"p":"org.checkerframework.checker.nullness.util","c":"NullnessUtil","l":"castNonNullDeep(T[][][])"},{"p":"org.checkerframework.checker.nullness.util","c":"NullnessUtil","l":"castNonNullDeep(T[][][], String)","u":"castNonNullDeep(T[][][],java.lang.String)"},{"p":"org.checkerframework.checker.nullness.util","c":"NullnessUtil","l":"castNonNullDeep(T[][][][])"},{"p":"org.checkerframework.checker.nullness.util","c":"NullnessUtil","l":"castNonNullDeep(T[][][][], String)","u":"castNonNullDeep(T[][][][],java.lang.String)"},{"p":"org.checkerframework.checker.nullness.util","c":"NullnessUtil","l":"castNonNullDeep(T[][][][][])"},{"p":"org.checkerframework.checker.nullness.util","c":"NullnessUtil","l":"castNonNullDeep(T[][][][][], String)","u":"castNonNullDeep(T[][][][][],java.lang.String)"},{"p":"org.checkerframework.common.value.util","c":"NumberUtils","l":"castNumbers(TypeMirror, List<? extends Number>)","u":"castNumbers(javax.lang.model.type.TypeMirror,java.util.List)"},{"p":"org.checkerframework.common.value.util","c":"NumberUtils","l":"castRange(TypeMirror, Range)","u":"castRange(javax.lang.model.type.TypeMirror,org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil","l":"categoriesToFormatAnnotation(ConversionCategory[])","u":"categoriesToFormatAnnotation(org.checkerframework.checker.formatter.qual.ConversionCategory[])"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"categoriesToFormatAnnotation(I18nConversionCategory[])","u":"categoriesToFormatAnnotation(org.checkerframework.checker.i18nformatter.qual.I18nConversionCategory[])"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"cd"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"ceiling(AnnotationMirror)","u":"ceiling(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.units.qual","c":"Prefix","l":"centi"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis","l":"CFAbstractAnalysis(BaseTypeChecker, GenericAnnotatedTypeFactory<V, S, T, ? extends CFAbstractAnalysis<V, S, T>>)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,org.checkerframework.framework.type.GenericAnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis","l":"CFAbstractAnalysis(BaseTypeChecker, GenericAnnotatedTypeFactory<V, S, T, ? extends CFAbstractAnalysis<V, S, T>>, int)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,org.checkerframework.framework.type.GenericAnnotatedTypeFactory,int)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"CFAbstractStore(CFAbstractAnalysis<V, S, ?>, boolean)","u":"%3Cinit%3E(org.checkerframework.framework.flow.CFAbstractAnalysis,boolean)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"CFAbstractStore(CFAbstractStore<V, S>)","u":"%3Cinit%3E(org.checkerframework.framework.flow.CFAbstractStore)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"CFAbstractTransfer(CFAbstractAnalysis<V, S, T>)","u":"%3Cinit%3E(org.checkerframework.framework.flow.CFAbstractAnalysis)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"CFAbstractTransfer(CFAbstractAnalysis<V, S, T>, boolean)","u":"%3Cinit%3E(org.checkerframework.framework.flow.CFAbstractAnalysis,boolean)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue","l":"CFAbstractValue(CFAbstractAnalysis<V, ?, ?>, AnnotationMirrorSet, TypeMirror)","u":"%3Cinit%3E(org.checkerframework.framework.flow.CFAbstractAnalysis,org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.flow","c":"CFAnalysis","l":"CFAnalysis(BaseTypeChecker, GenericAnnotatedTypeFactory<CFValue, CFStore, CFTransfer, CFAnalysis>)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,org.checkerframework.framework.type.GenericAnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.flow","c":"CFCFGBuilder","l":"CFCFGBuilder()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.flow","c":"CFCFGBuilder.CFCFGTranslationPhaseOne","l":"CFCFGTranslationPhaseOne(CFTreeBuilder, BaseTypeChecker, AnnotatedTypeFactory, boolean, boolean, ProcessingEnvironment)","u":"%3Cinit%3E(org.checkerframework.framework.flow.CFTreeBuilder,org.checkerframework.common.basetype.BaseTypeChecker,org.checkerframework.framework.type.AnnotatedTypeFactory,boolean,boolean,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"cfg"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGBuilder","l":"CFGBuilder()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGLambda","l":"CFGLambda(LambdaExpressionTree, ClassTree, MethodTree)","u":"%3Cinit%3E(com.sun.source.tree.LambdaExpressionTree,com.sun.source.tree.ClassTree,com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGMethod","l":"CFGMethod(MethodTree, ClassTree)","u":"%3Cinit%3E(com.sun.source.tree.MethodTree,com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.dataflow.cfg","c":"CFGProcessor","l":"CFGProcessor(String, String)","u":"%3Cinit%3E(java.lang.String,java.lang.String)"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGStatement","l":"CFGStatement(Tree, ClassTree)","u":"%3Cinit%3E(com.sun.source.tree.Tree,com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"CFGTranslationPhaseOne(TreeBuilder, AnnotationProvider, boolean, boolean, ProcessingEnvironment)","u":"%3Cinit%3E(org.checkerframework.javacutil.trees.TreeBuilder,org.checkerframework.javacutil.AnnotationProvider,boolean,boolean,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseThree","l":"CFGTranslationPhaseThree()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"cfgVisualizer"},{"p":"org.checkerframework.framework.flow","c":"CFStore","l":"CFStore(CFAbstractAnalysis<CFValue, CFStore, ?>, boolean)","u":"%3Cinit%3E(org.checkerframework.framework.flow.CFAbstractAnalysis,boolean)"},{"p":"org.checkerframework.framework.flow","c":"CFStore","l":"CFStore(CFAbstractStore<CFValue, CFStore>)","u":"%3Cinit%3E(org.checkerframework.framework.flow.CFAbstractStore)"},{"p":"org.checkerframework.framework.flow","c":"CFTransfer","l":"CFTransfer(CFAbstractAnalysis<CFValue, CFStore, CFTransfer>)","u":"%3Cinit%3E(org.checkerframework.framework.flow.CFAbstractAnalysis)"},{"p":"org.checkerframework.framework.flow","c":"CFTreeBuilder","l":"CFTreeBuilder(ProcessingEnvironment)","u":"%3Cinit%3E(javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.framework.flow","c":"CFValue","l":"CFValue(CFAbstractAnalysis<CFValue, ?, ?>, AnnotationMirrorSet, TypeMirror)","u":"%3Cinit%3E(org.checkerframework.framework.flow.CFAbstractAnalysis,org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.formatter.qual","c":"ConversionCategory","l":"CHAR"},{"p":"org.checkerframework.framework.qual","c":"LiteralKind","l":"CHAR"},{"p":"org.checkerframework.framework.qual","c":"TypeKind","l":"CHAR"},{"p":"org.checkerframework.checker.formatter.qual","c":"ConversionCategory","l":"CHAR_AND_INT"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"CHAR_EVERYTHING"},{"p":"org.checkerframework.dataflow.cfg.node","c":"CharacterLiteralNode","l":"CharacterLiteralNode(LiteralTree)","u":"%3Cinit%3E(com.sun.source.tree.LiteralTree)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"charRange()"},{"p":"org.checkerframework.checker.formatter.qual","c":"ConversionCategory","l":"chars"},{"p":"org.checkerframework.common.returnsreceiver","c":"FluentAPIGenerator","l":"check(AnnotatedTypeMirror.AnnotatedExecutableType)","u":"check(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkAccess(IdentifierTree, Void)","u":"checkAccess(com.sun.source.tree.IdentifierTree,java.lang.Void)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkAccessAllowed(Element, AnnotatedTypeMirror, ExpressionTree)","u":"checkAccessAllowed(javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"checkAndPerformFlowAnalysis(Tree)","u":"checkAndPerformFlowAnalysis(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"checkAnnotationForErrorExpressions(AnnotationMirror, Tree)","u":"checkAnnotationForErrorExpressions(javax.lang.model.element.AnnotationMirror,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkArguments(List<? extends AnnotatedTypeMirror>, List<? extends ExpressionTree>, CharSequence, List<?>)","u":"checkArguments(java.util.List,java.util.List,java.lang.CharSequence,java.util.List)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkArrayInitialization(AnnotatedTypeMirror, List<? extends ExpressionTree>)","u":"checkArrayInitialization(org.checkerframework.framework.type.AnnotatedTypeMirror,java.util.List)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"checkClassForErrorExpressions(ClassTree, AnnotatedTypeMirror.AnnotatedDeclaredType)","u":"checkClassForErrorExpressions(com.sun.source.tree.ClassTree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkConditionalPostcondition(MethodTree, AnnotationMirror, JavaExpression, boolean)","u":"checkConditionalPostcondition(com.sun.source.tree.MethodTree,javax.lang.model.element.AnnotationMirror,org.checkerframework.dataflow.expression.JavaExpression,boolean)"},{"p":"org.checkerframework.checker.fenum","c":"FenumVisitor","l":"checkConstructorInvocation(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedExecutableType, NewClassTree)","u":"checkConstructorInvocation(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationVisitor","l":"checkConstructorInvocation(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedExecutableType, NewClassTree)","u":"checkConstructorInvocation(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkConstructorInvocation(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedExecutableType, NewClassTree)","u":"checkConstructorInvocation(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.checker.fenum","c":"FenumVisitor","l":"checkConstructorResult(AnnotatedTypeMirror.AnnotatedExecutableType, ExecutableElement)","u":"checkConstructorResult(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"checkConstructorResult(AnnotatedTypeMirror.AnnotatedExecutableType, ExecutableElement)","u":"checkConstructorResult(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationVisitor","l":"checkConstructorResult(AnnotatedTypeMirror.AnnotatedExecutableType, ExecutableElement)","u":"checkConstructorResult(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.interning","c":"InterningVisitor","l":"checkConstructorResult(AnnotatedTypeMirror.AnnotatedExecutableType, ExecutableElement)","u":"checkConstructorResult(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"checkConstructorResult(AnnotatedTypeMirror.AnnotatedExecutableType, ExecutableElement)","u":"checkConstructorResult(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallVisitor","l":"checkConstructorResult(AnnotatedTypeMirror.AnnotatedExecutableType, ExecutableElement)","u":"checkConstructorResult(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.signedness","c":"SignednessVisitor","l":"checkConstructorResult(AnnotatedTypeMirror.AnnotatedExecutableType, ExecutableElement)","u":"checkConstructorResult(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.tainting","c":"TaintingVisitor","l":"checkConstructorResult(AnnotatedTypeMirror.AnnotatedExecutableType, ExecutableElement)","u":"checkConstructorResult(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.common.aliasing","c":"AliasingVisitor","l":"checkConstructorResult(AnnotatedTypeMirror.AnnotatedExecutableType, ExecutableElement)","u":"checkConstructorResult(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkConstructorResult(AnnotatedTypeMirror.AnnotatedExecutableType, ExecutableElement)","u":"checkConstructorResult(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationVisitor","l":"checkContract(JavaExpression, AnnotationMirror, AnnotationMirror, CFAbstractStore<?, ?>)","u":"checkContract(org.checkerframework.dataflow.expression.JavaExpression,javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.flow.CFAbstractStore)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkContract(JavaExpression, AnnotationMirror, AnnotationMirror, CFAbstractStore<?, ?>)","u":"checkContract(org.checkerframework.dataflow.expression.JavaExpression,javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.flow.CFAbstractStore)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkDefaultConstructor(ClassTree)","u":"checkDefaultConstructor(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.checker.regex.util","c":"RegexUtil.CheckedPatternSyntaxException","l":"CheckedPatternSyntaxException(PatternSyntaxException)","u":"%3Cinit%3E(java.util.regex.PatternSyntaxException)"},{"p":"org.checkerframework.checker.regex.util","c":"RegexUtil.CheckedPatternSyntaxException","l":"CheckedPatternSyntaxException(String, String, int)","u":"%3Cinit%3E(java.lang.String,java.lang.String,int)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkEnclosingExpr(NewClassTree, AnnotatedTypeMirror.AnnotatedExecutableType)","u":"checkEnclosingExpr(com.sun.source.tree.NewClassTree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil","l":"checker"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"checker"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFormatter","l":"checker"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFormatter.UnitsAnnotationFormatter","l":"checker"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFormatter.UnitsFormattingVisitor","l":"checker"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"checker"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checker"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis","l":"checker"},{"p":"org.checkerframework.framework.flow","c":"CFCFGBuilder.CFCFGTranslationPhaseOne","l":"checker"},{"p":"org.checkerframework.framework.test","c":"CheckerFrameworkPerFileTest","l":"checker"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"checker"},{"p":"org.checkerframework.framework.type","c":"AnnotationClassLoader","l":"checker"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"checker"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"CHECKER_BASE_DIR_NAME"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"CHECKER_QUAL_PATH_OPT"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"CHECKER_UTIL_PATH_OPT"},{"p":"org.checkerframework.framework.test","c":"CheckerFrameworkPerDirectoryTest","l":"CheckerFrameworkPerDirectoryTest(List<File>, Class<? extends AbstractProcessor>, String, List<String>, String...)","u":"%3Cinit%3E(java.util.List,java.lang.Class,java.lang.String,java.util.List,java.lang.String...)"},{"p":"org.checkerframework.framework.test","c":"CheckerFrameworkPerDirectoryTest","l":"CheckerFrameworkPerDirectoryTest(List<File>, Class<? extends AbstractProcessor>, String, String...)","u":"%3Cinit%3E(java.util.List,java.lang.Class,java.lang.String,java.lang.String...)"},{"p":"org.checkerframework.framework.test","c":"CheckerFrameworkPerDirectoryTest","l":"CheckerFrameworkPerDirectoryTest(List<File>, List<String>, String, List<String>, String...)","u":"%3Cinit%3E(java.util.List,java.util.List,java.lang.String,java.util.List,java.lang.String...)"},{"p":"org.checkerframework.framework.test","c":"CheckerFrameworkPerFileTest","l":"CheckerFrameworkPerFileTest(File, Class<? extends AbstractProcessor>, String, String...)","u":"%3Cinit%3E(java.io.File,java.lang.Class,java.lang.String,java.lang.String...)"},{"p":"org.checkerframework.framework.test","c":"CheckerFrameworkWPIPerDirectoryTest","l":"CheckerFrameworkWPIPerDirectoryTest(List<File>, Class<? extends AbstractProcessor>, String, String...)","u":"%3Cinit%3E(java.util.List,java.lang.Class,java.lang.String,java.lang.String...)"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"checkerJar"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"CheckerMain(File, List<String>)","u":"%3Cinit%3E(java.io.File,java.util.List)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"checkerName"},{"p":"org.checkerframework.framework.test","c":"CheckerFrameworkPerDirectoryTest","l":"checkerNames"},{"p":"org.checkerframework.framework.test","c":"CheckerFrameworkPerDirectoryTest","l":"checkerOptions"},{"p":"org.checkerframework.framework.test","c":"CheckerFrameworkPerFileTest","l":"checkerOptions"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"checkerQualJar"},{"p":"org.checkerframework.framework.source","c":"AggregateChecker","l":"checkers"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"checkerUtilJar"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"checkExceptionParameter(CatchTree)","u":"checkExceptionParameter(com.sun.source.tree.CatchTree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkExceptionParameter(CatchTree)","u":"checkExceptionParameter(com.sun.source.tree.CatchTree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkExplicitAnnotationsOnIntersectionBounds(AnnotatedTypeMirror.AnnotatedIntersectionType, List<? extends Tree>)","u":"checkExplicitAnnotationsOnIntersectionBounds(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,java.util.List)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"checkExtendsImplements(ClassTree)","u":"checkExtendsImplements(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkExtendsImplements(ClassTree)","u":"checkExtendsImplements(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkFieldInvariantDeclarations(ClassTree)","u":"checkFieldInvariantDeclarations(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationVisitor","l":"checkFieldsInitialized(Tree, boolean, Store, List<? extends AnnotationMirror>)","u":"checkFieldsInitialized(com.sun.source.tree.Tree,boolean,Store,java.util.List)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"checkForDefaultQualifierInHierarchy(QualifierDefaults)","u":"checkForDefaultQualifierInHierarchy(org.checkerframework.framework.util.defaults.QualifierDefaults)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"checkForPolymorphicQualifiers(ClassTree)","u":"checkForPolymorphicQualifiers(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkForPolymorphicQualifiers(ClassTree)","u":"checkForPolymorphicQualifiers(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkForPolymorphicQualifiers(List<? extends TypeParameterTree>)","u":"checkForPolymorphicQualifiers(java.util.List)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"checkForRedundantTests(BinaryTree)","u":"checkForRedundantTests(com.sun.source.tree.BinaryTree)"},{"p":"org.checkerframework.framework.util.typeinference","c":"TypeArgInferenceUtil","l":"checkForUninferredTypes(AnnotatedTypeMirror)","u":"checkForUninferredTypes(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"checkMethodForErrorExpressions(MethodTree, AnnotatedTypeMirror.AnnotatedExecutableType)","u":"checkMethodForErrorExpressions(com.sun.source.tree.MethodTree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"checkMethodInvocability(AnnotatedTypeMirror.AnnotatedExecutableType, MethodInvocationTree)","u":"checkMethodInvocability(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"checkMethodInvocability(AnnotatedTypeMirror.AnnotatedExecutableType, MethodInvocationTree)","u":"checkMethodInvocability(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkMethodInvocability(AnnotatedTypeMirror.AnnotatedExecutableType, MethodInvocationTree)","u":"checkMethodInvocability(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkMethodReferenceAsOverride(MemberReferenceTree, Void)","u":"checkMethodReferenceAsOverride(com.sun.source.tree.MemberReferenceTree,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"StructuralEqualityComparer","l":"checkOrAreEqual(AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"checkOrAreEqual(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor.OverrideChecker","l":"checkOverride()"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"checkOverride(MethodTree, AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedDeclaredType)","u":"checkOverride(com.sun.source.tree.MethodTree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkOverride(MethodTree, AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedDeclaredType)","u":"checkOverride(com.sun.source.tree.MethodTree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkOverride(MethodTree, AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedDeclaredType)","u":"checkOverride(com.sun.source.tree.MethodTree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType)"},{"p":"org.checkerframework.common.value","c":"ValueVisitor","l":"checkOverride(MethodTree, AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedDeclaredType)","u":"checkOverride(com.sun.source.tree.MethodTree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakVisitor","l":"checkPostcondition(MethodTree, AnnotationMirror, JavaExpression)","u":"checkPostcondition(com.sun.source.tree.MethodTree,javax.lang.model.element.AnnotationMirror,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkPostcondition(MethodTree, AnnotationMirror, JavaExpression)","u":"checkPostcondition(com.sun.source.tree.MethodTree,javax.lang.model.element.AnnotationMirror,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkPreconditions(MethodInvocationTree, Set<Contract.Precondition>)","u":"checkPreconditions(com.sun.source.tree.MethodInvocationTree,java.util.Set)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkPurity(MethodTree)","u":"checkPurity(com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker","l":"checkPurity(TreePath, AnnotationProvider, boolean, boolean)","u":"checkPurity(com.sun.source.util.TreePath,org.checkerframework.javacutil.AnnotationProvider,boolean,boolean)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkQualifierParameter(ClassTree)","u":"checkQualifierParameter(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor.GuiEffectOverrideChecker","l":"checkReceiverOverride()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor.OverrideChecker","l":"checkReceiverOverride()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkSuperConstructorCall(MethodInvocationTree)","u":"checkSuperConstructorCall(com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkThisConstructorCall(MethodInvocationTree)","u":"checkThisConstructorCall(com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationVisitor","l":"checkThisOrSuperConstructorCall(MethodInvocationTree, String)","u":"checkThisOrSuperConstructorCall(com.sun.source.tree.MethodInvocationTree,java.lang.String)"},{"p":"org.checkerframework.common.aliasing","c":"AliasingVisitor","l":"checkThisOrSuperConstructorCall(MethodInvocationTree, String)","u":"checkThisOrSuperConstructorCall(com.sun.source.tree.MethodInvocationTree,java.lang.String)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkThisOrSuperConstructorCall(MethodInvocationTree, String)","u":"checkThisOrSuperConstructorCall(com.sun.source.tree.MethodInvocationTree,java.lang.String)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"checkThrownExpression(ThrowTree)","u":"checkThrownExpression(com.sun.source.tree.ThrowTree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkThrownExpression(ThrowTree)","u":"checkThrownExpression(com.sun.source.tree.ThrowTree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"checkTopLevelDeclaredOrPrimitiveType"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkTypeArguments(Tree, List<? extends AnnotatedTypeParameterBounds>, List<? extends AnnotatedTypeMirror>, List<? extends Tree>, CharSequence, List<?>)","u":"checkTypeArguments(com.sun.source.tree.Tree,java.util.List,java.util.List,java.util.List,java.lang.CharSequence,java.util.List)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkTypecastRedundancy(TypeCastTree)","u":"checkTypecastRedundancy(com.sun.source.tree.TypeCastTree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkTypecastSafety(TypeCastTree)","u":"checkTypecastSafety(com.sun.source.tree.TypeCastTree)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"checkTypeForErrorExpressions(AnnotatedTypeMirror, Tree)","u":"checkTypeForErrorExpressions(org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"checkVarargs(AnnotatedTypeMirror.AnnotatedExecutableType, Tree)","u":"checkVarargs(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ObjectCreationNode","l":"classbody"},{"p":"org.checkerframework.common.reflection","c":"MethodValAnnotatedTypeFactory","l":"classBoundValueElement"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"classCastExceptionType"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"classCircularityErrorType"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ClassDeclarationNode","l":"ClassDeclarationNode(ClassTree)","u":"%3Cinit%3E(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"classElementKinds()"},{"p":"org.checkerframework.javacutil","c":"TypeAnnotationUtils","l":"classExtendsTAPosition(int, int)","u":"classExtendsTAPosition(int,int)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"classFormatErrorType"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"classGetCanonicalName"},{"p":"org.checkerframework.framework.type","c":"AnnotationClassLoader","l":"classLoader"},{"p":"org.checkerframework.common.reflection.qual","c":"MethodVal","l":"className()"},{"p":"org.checkerframework.dataflow.expression","c":"ClassName","l":"ClassName(TypeMirror)","u":"%3Cinit%3E(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ClassNameNode","l":"ClassNameNode(ClassTree)","u":"%3Cinit%3E(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ClassNameNode","l":"ClassNameNode(IdentifierTree)","u":"%3Cinit%3E(com.sun.source.tree.IdentifierTree)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ClassNameNode","l":"ClassNameNode(MemberSelectTree, Node)","u":"%3Cinit%3E(com.sun.source.tree.MemberSelectTree,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ClassNameNode","l":"ClassNameNode(TypeMirror, Element)","u":"%3Cinit%3E(javax.lang.model.type.TypeMirror,javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.test","c":"CheckerFrameworkPerDirectoryTest","l":"classpathExtra"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGMethod","l":"classTree"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGStatement","l":"classTree"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"classTreeKinds()"},{"p":"org.checkerframework.common.reflection","c":"ClassValAnnotatedTypeFactory","l":"CLASSVAL_TOP"},{"p":"org.checkerframework.common.reflection","c":"ClassValAnnotatedTypeFactory","l":"ClassValAnnotatedTypeFactory(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.common.reflection","c":"ClassValChecker","l":"ClassValChecker()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.common.reflection","c":"ClassValAnnotatedTypeFactory.ClassValQualifierHierarchy","l":"ClassValQualifierHierarchy(Set<Class<? extends Annotation>>, Elements)","u":"%3Cinit%3E(java.util.Set,javax.lang.model.util.Elements)"},{"p":"org.checkerframework.common.reflection","c":"ClassValAnnotatedTypeFactory.ClassValTreeAnnotator","l":"ClassValTreeAnnotator(ClassValAnnotatedTypeFactory)","u":"%3Cinit%3E(org.checkerframework.common.reflection.ClassValAnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"classValues"},{"p":"org.checkerframework.common.reflection","c":"MethodValAnnotatedTypeFactory","l":"classValValueElement"},{"p":"org.checkerframework.common.reflection","c":"ClassValVisitor","l":"ClassValVisitor(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.framework.type.visitor","c":"EquivalentAtmComboScanner.Visited","l":"clear()"},{"p":"org.checkerframework.framework.util","c":"TreePathCacher","l":"clear()"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"TargetConstraints.Equalities","l":"clear()"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"TargetConstraints.Subtypes","l":"clear()"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"TargetConstraints.Supertypes","l":"clear()"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorMap","l":"clear()"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"clear()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"clearAnnotations()"},{"p":"org.checkerframework.framework.util","c":"JavaParserUtil","l":"clearAnnotations(Node)","u":"clearAnnotations(com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.type.typeannotator","c":"DefaultQualifierForUseTypeAnnotator","l":"clearCache()"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"clearValue(JavaExpression)","u":"clearValue(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"JavaDiagnosticReader","l":"close()"},{"p":"org.checkerframework.framework.type","c":"AnnotationClassLoader","l":"close()"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGStatement","l":"code"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"collectArgFiles(List<String>)","u":"collectArgFiles(java.util.List)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"collectionToArrayHeuristics"},{"p":"org.checkerframework.checker.nullness","c":"CollectionToArrayHeuristics","l":"CollectionToArrayHeuristics(BaseTypeChecker, NullnessAnnotatedTypeFactory)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,org.checkerframework.checker.nullness.NullnessAnnotatedTypeFactory)"},{"p":"org.checkerframework.javacutil","c":"CollectionUtils","l":"CollectionUtils()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"combine(AnalysisResult<V, S>)","u":"combine(org.checkerframework.dataflow.analysis.AnalysisResult)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeCombiner","l":"combine(AnnotatedTypeMirror, AnnotatedTypeMirror, QualifierHierarchy)","u":"combine(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.QualifierHierarchy)"},{"p":"org.checkerframework.framework.type.poly","c":"AbstractQualifierPolymorphism","l":"combine(AnnotationMirror, AnnotationMirror, AnnotationMirror)","u":"combine(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type.poly","c":"DefaultQualifierPolymorphism","l":"combine(AnnotationMirror, AnnotationMirror, AnnotationMirror)","u":"combine(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeCombiner","l":"combineAnnotations(AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"combineAnnotations(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AbstractViewpointAdapter","l":"combineAnnotationWithAnnotation(AnnotationMirror, AnnotationMirror)","u":"combineAnnotationWithAnnotation(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AbstractViewpointAdapter","l":"combineAnnotationWithType(AnnotationMirror, AnnotatedTypeMirror)","u":"combineAnnotationWithType(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue.AnnotationSetCombiner","l":"combineNoAnnotations(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotationMirror, boolean)","u":"combineNoAnnotations(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,javax.lang.model.element.AnnotationMirror,boolean)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue.ValueGlb","l":"combineNoAnnotations(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotationMirror, boolean)","u":"combineNoAnnotations(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,javax.lang.model.element.AnnotationMirror,boolean)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue.ValueLub","l":"combineNoAnnotations(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotationMirror, boolean)","u":"combineNoAnnotations(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,javax.lang.model.element.AnnotationMirror,boolean)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue.AnnotationSetCombiner","l":"combineOneAnnotation(AnnotationMirror, AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotationMirror, boolean)","u":"combineOneAnnotation(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,javax.lang.model.element.AnnotationMirror,boolean)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue.ValueGlb","l":"combineOneAnnotation(AnnotationMirror, AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotationMirror, boolean)","u":"combineOneAnnotation(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,javax.lang.model.element.AnnotationMirror,boolean)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue.ValueLub","l":"combineOneAnnotation(AnnotationMirror, AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotationMirror, boolean)","u":"combineOneAnnotation(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,javax.lang.model.element.AnnotationMirror,boolean)"},{"p":"org.checkerframework.javacutil","c":"SwitchExpressionScanner","l":"combineResults(R, R)","u":"combineResults(R,R)"},{"p":"org.checkerframework.javacutil","c":"SwitchExpressionScanner.FunctionalSwitchExpressionScanner","l":"combineResults(R1, R1)","u":"combineResults(R1,R1)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue.AnnotationSetCombiner","l":"combineSets(TypeMirror, AnnotationMirrorSet, TypeMirror, AnnotationMirrorSet, boolean)","u":"combineSets(javax.lang.model.type.TypeMirror,org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeMirror,org.checkerframework.javacutil.AnnotationMirrorSet,boolean)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue.AnnotationSetCombiner","l":"combineTwoAnnotations(AnnotationMirror, AnnotationMirror, AnnotationMirror)","u":"combineTwoAnnotations(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue.ValueGlb","l":"combineTwoAnnotations(AnnotationMirror, AnnotationMirror, AnnotationMirror)","u":"combineTwoAnnotations(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue.ValueLub","l":"combineTwoAnnotations(AnnotationMirror, AnnotationMirror, AnnotationMirror)","u":"combineTwoAnnotations(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AbstractViewpointAdapter","l":"combineTypeWithType(AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"combineTypeWithType(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileUtil.AnnotationFileType","l":"COMMAND_LINE_STUB"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory.CommitmentTreeAnnotator","l":"CommitmentTreeAnnotator(InitializationAnnotatedTypeFactory<?, ?, ?, ?>)","u":"%3Cinit%3E(org.checkerframework.checker.initialization.InitializationAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory.CommitmentTypeAnnotator","l":"CommitmentTypeAnnotator(InitializationAnnotatedTypeFactory<?, ?, ?, ?>)","u":"%3Cinit%3E(org.checkerframework.checker.initialization.InitializationAnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"COMMON_BASE_DIR_NAME"},{"p":"org.checkerframework.checker.formatter","c":"FormatterVisitor","l":"commonAssignmentCheck(AnnotatedTypeMirror, AnnotatedTypeMirror, Tree, String, Object...)","u":"commonAssignmentCheck(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterVisitor","l":"commonAssignmentCheck(AnnotatedTypeMirror, AnnotatedTypeMirror, Tree, String, Object...)","u":"commonAssignmentCheck(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanVisitor","l":"commonAssignmentCheck(AnnotatedTypeMirror, AnnotatedTypeMirror, Tree, String, Object...)","u":"commonAssignmentCheck(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenVisitor","l":"commonAssignmentCheck(AnnotatedTypeMirror, AnnotatedTypeMirror, Tree, String, Object...)","u":"commonAssignmentCheck(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"commonAssignmentCheck(AnnotatedTypeMirror, AnnotatedTypeMirror, Tree, String, Object...)","u":"commonAssignmentCheck(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallVisitor","l":"commonAssignmentCheck(AnnotatedTypeMirror, AnnotatedTypeMirror, Tree, String, Object...)","u":"commonAssignmentCheck(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"commonAssignmentCheck(AnnotatedTypeMirror, AnnotatedTypeMirror, Tree, String, Object...)","u":"commonAssignmentCheck(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.common.aliasing","c":"AliasingVisitor","l":"commonAssignmentCheck(AnnotatedTypeMirror, AnnotatedTypeMirror, Tree, String, Object...)","u":"commonAssignmentCheck(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"commonAssignmentCheck(AnnotatedTypeMirror, AnnotatedTypeMirror, Tree, String, Object...)","u":"commonAssignmentCheck(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.common.value","c":"ValueVisitor","l":"commonAssignmentCheck(AnnotatedTypeMirror, AnnotatedTypeMirror, Tree, String, Object...)","u":"commonAssignmentCheck(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundVisitor","l":"commonAssignmentCheck(AnnotatedTypeMirror, ExpressionTree, String, Object...)","u":"commonAssignmentCheck(org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.ExpressionTree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"commonAssignmentCheck(AnnotatedTypeMirror, ExpressionTree, String, Object...)","u":"commonAssignmentCheck(org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.ExpressionTree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"commonAssignmentCheck(AnnotatedTypeMirror, ExpressionTree, String, Object...)","u":"commonAssignmentCheck(org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.ExpressionTree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.common.value","c":"ValueVisitor","l":"commonAssignmentCheck(AnnotatedTypeMirror, ExpressionTree, String, Object...)","u":"commonAssignmentCheck(org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.ExpressionTree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanVisitor","l":"commonAssignmentCheck(Tree, ExpressionTree, String, Object...)","u":"commonAssignmentCheck(com.sun.source.tree.Tree,com.sun.source.tree.ExpressionTree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundVisitor","l":"commonAssignmentCheck(Tree, ExpressionTree, String, Object...)","u":"commonAssignmentCheck(com.sun.source.tree.Tree,com.sun.source.tree.ExpressionTree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundVisitor","l":"commonAssignmentCheck(Tree, ExpressionTree, String, Object...)","u":"commonAssignmentCheck(com.sun.source.tree.Tree,com.sun.source.tree.ExpressionTree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationVisitor","l":"commonAssignmentCheck(Tree, ExpressionTree, String, Object...)","u":"commonAssignmentCheck(com.sun.source.tree.Tree,com.sun.source.tree.ExpressionTree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallVisitor","l":"commonAssignmentCheck(Tree, ExpressionTree, String, Object...)","u":"commonAssignmentCheck(com.sun.source.tree.Tree,com.sun.source.tree.ExpressionTree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"commonAssignmentCheck(Tree, ExpressionTree, String, Object...)","u":"commonAssignmentCheck(com.sun.source.tree.Tree,com.sun.source.tree.ExpressionTree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.common.aliasing","c":"AliasingVisitor","l":"commonAssignmentCheck(Tree, ExpressionTree, String, Object...)","u":"commonAssignmentCheck(com.sun.source.tree.Tree,com.sun.source.tree.ExpressionTree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"commonAssignmentCheck(Tree, ExpressionTree, String, Object...)","u":"commonAssignmentCheck(com.sun.source.tree.Tree,com.sun.source.tree.ExpressionTree,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"commonAssignmentCheckEndDiagnostic(boolean, String, AnnotatedTypeMirror, AnnotatedTypeMirror, Tree)","u":"commonAssignmentCheckEndDiagnostic(boolean,java.lang.String,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"commonAssignmentCheckEndDiagnostic(String, AnnotatedTypeMirror, AnnotatedTypeMirror, Tree)","u":"commonAssignmentCheckEndDiagnostic(java.lang.String,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"commonAssignmentCheckStartDiagnostic(AnnotatedTypeMirror, AnnotatedTypeMirror, Tree)","u":"commonAssignmentCheckStartDiagnostic(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"commonConvert(Node, TypeMirror, boolean)","u":"commonConvert(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.type.TypeMirror,boolean)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"comparator()"},{"p":"org.checkerframework.framework.type","c":"EqualityAtmComparer","l":"compare(AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"compare(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis.Worklist.BackwardDFOComparator","l":"compare(Block, Block)","u":"compare(org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.cfg.block.Block)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis.Worklist.ForwardDFOComparator","l":"compare(Block, Block)","u":"compare(org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.cfg.block.Block)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"compareAnnotationMirrors(AnnotationMirror, AnnotationMirror)","u":"compareAnnotationMirrors(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"compareByName(AnnotationMirror, AnnotationMirror)","u":"compareByName(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"InternalUtils","l":"compareDiagnosticPosition(Tree, Tree)","u":"compareDiagnosticPosition(com.sun.source.tree.Tree,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.util.defaults","c":"Default","l":"compareTo(Default)","u":"compareTo(org.checkerframework.framework.util.defaults.Default)"},{"p":"org.checkerframework.framework.util","c":"QualifierKind","l":"compareTo(QualifierKind)","u":"compareTo(org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"compareUnsigned(byte, byte)","u":"compareUnsigned(byte,byte)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"compareUnsigned(short, short)","u":"compareUnsigned(short,short)"},{"p":"org.checkerframework.framework.test","c":"TypecheckExecutor","l":"compile(TestConfiguration)","u":"compile(org.checkerframework.framework.test.TestConfiguration)"},{"p":"org.checkerframework.framework.test","c":"CompilationResult","l":"compiledWithoutError()"},{"p":"org.checkerframework.checker.compilermsgs","c":"CompilerMessagesAnnotatedTypeFactory","l":"CompilerMessagesAnnotatedTypeFactory(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.compilermsgs","c":"CompilerMessagesChecker","l":"CompilerMessagesChecker()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileParser.RecordStub","l":"componentsByName"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileParser.RecordStub","l":"componentsInCanonicalConstructor"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"compoundAssignmentTreeArgTypes(CompoundAssignmentTree)","u":"compoundAssignmentTreeArgTypes(com.sun.source.tree.CompoundAssignmentTree)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseThree","l":"computeNeighborhoodOfEmptyBlock(RegularBlockImpl, Set<RegularBlockImpl>, Set<CFGTranslationPhaseThree.PredecessorHolder>)","u":"computeNeighborhoodOfEmptyBlock(org.checkerframework.dataflow.cfg.block.RegularBlockImpl,java.util.Set,java.util.Set)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseThree","l":"computeNeighborhoodOfEmptyBlockBackwards(RegularBlockImpl, Set<RegularBlockImpl>, Set<CFGTranslationPhaseThree.PredecessorHolder>)","u":"computeNeighborhoodOfEmptyBlockBackwards(org.checkerframework.dataflow.cfg.block.RegularBlockImpl,java.util.Set,java.util.Set)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"computeNewValueAndInsert(JavaExpression, V, BinaryOperator<V>, boolean)","u":"computeNewValueAndInsert(org.checkerframework.dataflow.expression.JavaExpression,V,java.util.function.BinaryOperator,boolean)"},{"p":"org.checkerframework.javacutil","c":"SystemUtil","l":"concatenate(T, T[], T)","u":"concatenate(T,T[],T)"},{"p":"org.checkerframework.javacutil","c":"SystemUtil","l":"concatenate(T[], T...)","u":"concatenate(T[],T...)"},{"p":"org.checkerframework.framework.util","c":"JavaParserUtil","l":"concatenateAddedStringLiterals(Node)","u":"concatenateAddedStringLiterals(com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssertionErrorNode","l":"condition"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TernaryExpressionNode","l":"condition"},{"p":"org.checkerframework.dataflow.cfg.block","c":"Block.BlockType","l":"CONDITIONAL_BLOCK"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ExtendedNode.ExtendedNodeType","l":"CONDITIONAL_JUMP"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ConditionalAndNode","l":"ConditionalAndNode(BinaryTree, Node, Node)","u":"%3Cinit%3E(com.sun.source.tree.BinaryTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ConditionalBlockImpl","l":"ConditionalBlockImpl()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"conditionalExprPromotion(Node, TypeMirror)","u":"conditionalExprPromotion(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ConditionalJump","l":"ConditionalJump(Label, Label)","u":"%3Cinit%3E(org.checkerframework.dataflow.cfg.builder.Label,org.checkerframework.dataflow.cfg.builder.Label)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ConditionalNotNode","l":"ConditionalNotNode(UnaryTree, Node)","u":"%3Cinit%3E(com.sun.source.tree.UnaryTree,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ConditionalOrNode","l":"ConditionalOrNode(BinaryTree, Node, Node)","u":"%3Cinit%3E(com.sun.source.tree.BinaryTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.framework.util","c":"Contract.Kind","l":"CONDITIONALPOSTCONDITION"},{"p":"org.checkerframework.framework.util","c":"Contract.ConditionalPostcondition","l":"ConditionalPostcondition(String, AnnotationMirror, AnnotationMirror, boolean)","u":"%3Cinit%3E(java.lang.String,javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror,boolean)"},{"p":"org.checkerframework.dataflow.analysis","c":"ConditionalTransferResult","l":"ConditionalTransferResult(V, S, S)","u":"%3Cinit%3E(V,S,S)"},{"p":"org.checkerframework.dataflow.analysis","c":"ConditionalTransferResult","l":"ConditionalTransferResult(V, S, S, boolean)","u":"%3Cinit%3E(V,S,S,boolean)"},{"p":"org.checkerframework.dataflow.analysis","c":"ConditionalTransferResult","l":"ConditionalTransferResult(V, S, S, Map<TypeMirror, S>)","u":"%3Cinit%3E(V,S,S,java.util.Map)"},{"p":"org.checkerframework.dataflow.analysis","c":"ConditionalTransferResult","l":"ConditionalTransferResult(V, S, S, Map<TypeMirror, S>, boolean)","u":"%3Cinit%3E(V,S,S,java.util.Map,boolean)"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"Constant.Type","l":"CONSTANT"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"Constant","l":"Constant(Constant.Type)","u":"%3Cinit%3E(org.checkerframework.dataflow.constantpropagation.Constant.Type)"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"Constant","l":"Constant(Integer)","u":"%3Cinit%3E(java.lang.Integer)"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"ConstantPropagationStore","l":"ConstantPropagationStore()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"ConstantPropagationStore","l":"ConstantPropagationStore(Map<Node, Constant>)","u":"%3Cinit%3E(java.util.Map)"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"ConstantPropagationTransfer","l":"ConstantPropagationTransfer()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"constrainAnonymousClassToUI(TypeElement)","u":"constrainAnonymousClassToUI(javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"constrainLambdaToUI(LambdaExpressionTree)","u":"constrainLambdaToUI(com.sun.source.tree.LambdaExpressionTree)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"ConstraintMap","l":"ConstraintMap(ConstraintMap)","u":"%3Cinit%3E(org.checkerframework.framework.util.typeinference.solver.ConstraintMap)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"ConstraintMap","l":"ConstraintMap(Set<TypeVariable>)","u":"%3Cinit%3E(java.util.Set)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"ConstraintMapBuilder","l":"ConstraintMapBuilder()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"A2F","l":"construct(AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"construct(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"AFConstraint","l":"construct(AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"construct(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"F2A","l":"construct(AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"construct(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"FIsA","l":"construct(AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"construct(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ObjectCreationNode","l":"constructor"},{"p":"org.checkerframework.framework.qual","c":"TypeUseLocation","l":"CONSTRUCTOR_RESULT"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"constructor(NewClassTree)","u":"constructor(com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnnotatedTypeFactory","l":"constructorFromUse(NewClassTree)","u":"constructorFromUse(com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"constructorFromUse(NewClassTree)","u":"constructorFromUse(com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"constructorFromUse(NewClassTree)","u":"constructorFromUse(com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"constructorFromUsePreSubstitution(NewClassTree, AnnotatedTypeMirror.AnnotatedExecutableType)","u":"constructorFromUsePreSubstitution(com.sun.source.tree.NewClassTree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"constructorFromUsePreSubstitution(NewClassTree, AnnotatedTypeMirror.AnnotatedExecutableType)","u":"constructorFromUsePreSubstitution(com.sun.source.tree.NewClassTree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"constructorFromUsePreSubstitution(NewClassTree, AnnotatedTypeMirror.AnnotatedExecutableType)","u":"constructorFromUsePreSubstitution(com.sun.source.tree.NewClassTree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.framework.type.visitor","c":"EquivalentAtmComboScanner.Visited","l":"contains(AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"contains(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"SubtypeVisitHistory","l":"contains(AnnotatedTypeMirror, AnnotatedTypeMirror, AnnotationMirror)","u":"contains(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis.Worklist","l":"contains(Block)","u":"contains(org.checkerframework.dataflow.cfg.block.Block)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"contains(long)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"contains(Object)","u":"contains(java.lang.Object)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"contains(Range)","u":"contains(org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"containsAll(Collection<?>)","u":"containsAll(java.util.Collection)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorMap","l":"containsKey(Object)","u":"containsKey(java.lang.Object)"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayAccess","l":"containsModifiableAliasOf(Store<?>, JavaExpression)","u":"containsModifiableAliasOf(org.checkerframework.dataflow.analysis.Store,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"BinaryOperation","l":"containsModifiableAliasOf(Store<?>, JavaExpression)","u":"containsModifiableAliasOf(org.checkerframework.dataflow.analysis.Store,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"ClassName","l":"containsModifiableAliasOf(Store<?>, JavaExpression)","u":"containsModifiableAliasOf(org.checkerframework.dataflow.analysis.Store,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"FieldAccess","l":"containsModifiableAliasOf(Store<?>, JavaExpression)","u":"containsModifiableAliasOf(org.checkerframework.dataflow.analysis.Store,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"containsModifiableAliasOf(Store<?>, JavaExpression)","u":"containsModifiableAliasOf(org.checkerframework.dataflow.analysis.Store,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"MethodCall","l":"containsModifiableAliasOf(Store<?>, JavaExpression)","u":"containsModifiableAliasOf(org.checkerframework.dataflow.analysis.Store,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"ThisReference","l":"containsModifiableAliasOf(Store<?>, JavaExpression)","u":"containsModifiableAliasOf(org.checkerframework.dataflow.analysis.Store,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"UnaryOperation","l":"containsModifiableAliasOf(Store<?>, JavaExpression)","u":"containsModifiableAliasOf(org.checkerframework.dataflow.analysis.Store,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"Unknown","l":"containsModifiableAliasOf(Store<?>, JavaExpression)","u":"containsModifiableAliasOf(org.checkerframework.dataflow.analysis.Store,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"ValueLiteral","l":"containsModifiableAliasOf(Store<?>, JavaExpression)","u":"containsModifiableAliasOf(org.checkerframework.dataflow.analysis.Store,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"containsModifier(AnnotatedTypeMirror, AnnotationMirror)","u":"containsModifier(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"containsNullnessAnnotation(List<? extends AnnotationTree>)","u":"containsNullnessAnnotation(java.util.List)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"containsNullnessAnnotation(List<? extends AnnotationTree>, Tree)","u":"containsNullnessAnnotation(java.util.List,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayAccess","l":"containsOfClass(Class<? extends JavaExpression>)","u":"containsOfClass(java.lang.Class)"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayCreation","l":"containsOfClass(Class<? extends JavaExpression>)","u":"containsOfClass(java.lang.Class)"},{"p":"org.checkerframework.dataflow.expression","c":"BinaryOperation","l":"containsOfClass(Class<? extends JavaExpression>)","u":"containsOfClass(java.lang.Class)"},{"p":"org.checkerframework.dataflow.expression","c":"ClassName","l":"containsOfClass(Class<? extends JavaExpression>)","u":"containsOfClass(java.lang.Class)"},{"p":"org.checkerframework.dataflow.expression","c":"FieldAccess","l":"containsOfClass(Class<? extends JavaExpression>)","u":"containsOfClass(java.lang.Class)"},{"p":"org.checkerframework.dataflow.expression","c":"FormalParameter","l":"containsOfClass(Class<? extends JavaExpression>)","u":"containsOfClass(java.lang.Class)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"containsOfClass(Class<? extends JavaExpression>)","u":"containsOfClass(java.lang.Class)"},{"p":"org.checkerframework.dataflow.expression","c":"LocalVariable","l":"containsOfClass(Class<? extends JavaExpression>)","u":"containsOfClass(java.lang.Class)"},{"p":"org.checkerframework.dataflow.expression","c":"MethodCall","l":"containsOfClass(Class<? extends JavaExpression>)","u":"containsOfClass(java.lang.Class)"},{"p":"org.checkerframework.dataflow.expression","c":"ThisReference","l":"containsOfClass(Class<? extends JavaExpression>)","u":"containsOfClass(java.lang.Class)"},{"p":"org.checkerframework.dataflow.expression","c":"UnaryOperation","l":"containsOfClass(Class<? extends JavaExpression>)","u":"containsOfClass(java.lang.Class)"},{"p":"org.checkerframework.dataflow.expression","c":"Unknown","l":"containsOfClass(Class<? extends JavaExpression>)","u":"containsOfClass(java.lang.Class)"},{"p":"org.checkerframework.dataflow.expression","c":"ValueLiteral","l":"containsOfClass(Class<? extends JavaExpression>)","u":"containsOfClass(java.lang.Class)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"containsSame(Collection<? extends AnnotationMirror>, AnnotationMirror)","u":"containsSame(java.util.Collection,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"containsSameByClass(Collection<? extends AnnotationMirror>, Class<? extends Annotation>)","u":"containsSameByClass(java.util.Collection,java.lang.Class)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"containsSameByClass(Collection<? extends AnnotationMirror>, Class<? extends Annotation>)","u":"containsSameByClass(java.util.Collection,java.lang.Class)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"containsSameByName(Collection<? extends AnnotationMirror>, AnnotationMirror)","u":"containsSameByName(java.util.Collection,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"containsSameByName(Collection<? extends AnnotationMirror>, String)","u":"containsSameByName(java.util.Collection,java.lang.String)"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayAccess","l":"containsSyntacticEqualJavaExpression(JavaExpression)","u":"containsSyntacticEqualJavaExpression(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayCreation","l":"containsSyntacticEqualJavaExpression(JavaExpression)","u":"containsSyntacticEqualJavaExpression(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"BinaryOperation","l":"containsSyntacticEqualJavaExpression(JavaExpression)","u":"containsSyntacticEqualJavaExpression(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"ClassName","l":"containsSyntacticEqualJavaExpression(JavaExpression)","u":"containsSyntacticEqualJavaExpression(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"FieldAccess","l":"containsSyntacticEqualJavaExpression(JavaExpression)","u":"containsSyntacticEqualJavaExpression(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"FormalParameter","l":"containsSyntacticEqualJavaExpression(JavaExpression)","u":"containsSyntacticEqualJavaExpression(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"containsSyntacticEqualJavaExpression(JavaExpression)","u":"containsSyntacticEqualJavaExpression(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"LocalVariable","l":"containsSyntacticEqualJavaExpression(JavaExpression)","u":"containsSyntacticEqualJavaExpression(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"MethodCall","l":"containsSyntacticEqualJavaExpression(JavaExpression)","u":"containsSyntacticEqualJavaExpression(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"ThisReference","l":"containsSyntacticEqualJavaExpression(JavaExpression)","u":"containsSyntacticEqualJavaExpression(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"UnaryOperation","l":"containsSyntacticEqualJavaExpression(JavaExpression)","u":"containsSyntacticEqualJavaExpression(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"Unknown","l":"containsSyntacticEqualJavaExpression(JavaExpression)","u":"containsSyntacticEqualJavaExpression(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"ValueLiteral","l":"containsSyntacticEqualJavaExpression(JavaExpression)","u":"containsSyntacticEqualJavaExpression(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"containsThisConstructorInvocation(MethodTree)","u":"containsThisConstructorInvocation(com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.dataflow.analysis","c":"ConditionalTransferResult","l":"containsTwoStores()"},{"p":"org.checkerframework.dataflow.analysis","c":"RegularTransferResult","l":"containsTwoStores()"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferInput","l":"containsTwoStores()"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferResult","l":"containsTwoStores()"},{"p":"org.checkerframework.framework.util.typeinference","c":"TypeArgInferenceUtil","l":"containsTypeParameter(AnnotatedTypeMirror, Collection<TypeVariable>)","u":"containsTypeParameter(org.checkerframework.framework.type.AnnotatedTypeMirror,java.util.Collection)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"containsUninferredTypeArguments()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"containsUninferredTypeArguments(AnnotatedTypeMirror)","u":"containsUninferredTypeArguments(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"containsUnknown()"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorMap","l":"containsValue(Object)","u":"containsValue(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"RegularBlockImpl","l":"contents"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"continuationPart(String)","u":"continuationPart(java.lang.String)"},{"p":"org.checkerframework.framework.util","c":"Contract","l":"contractAnnotation"},{"p":"org.checkerframework.framework.util","c":"ContractsFromMethod","l":"ContractsFromMethod(GenericAnnotatedTypeFactory<?, ?, ?, ?>)","u":"%3Cinit%3E(org.checkerframework.framework.type.GenericAnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"contractsUtils"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"ControlFlowGraph(SpecialBlock, SpecialBlockImpl, SpecialBlockImpl, UnderlyingAST, IdentityHashMap<Tree, Set<Node>>, IdentityHashMap<Tree, Set<Node>>, IdentityHashMap<UnaryTree, BinaryTree>, List<ReturnNode>, List<ClassTree>, List<LambdaExpressionTree>)","u":"%3Cinit%3E(org.checkerframework.dataflow.cfg.block.SpecialBlock,org.checkerframework.dataflow.cfg.block.SpecialBlockImpl,org.checkerframework.dataflow.cfg.block.SpecialBlockImpl,org.checkerframework.dataflow.cfg.UnderlyingAST,java.util.IdentityHashMap,java.util.IdentityHashMap,java.util.IdentityHashMap,java.util.List,java.util.List,java.util.List)"},{"p":"org.checkerframework.checker.formatter.util","c":"FormatUtil","l":"conversionCharFromFormat(String)","u":"conversionCharFromFormat(java.lang.String)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"conversionRequiresNarrowing(TypeMirror, Node)","u":"conversionRequiresNarrowing(javax.lang.model.type.TypeMirror,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionConverter","l":"convert(JavaExpression)","u":"convert(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionConverter","l":"convert(List<JavaExpression>)","u":"convert(java.util.List)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"convertAnnotatedTypeMirror(StringToJavaExpression, AnnotatedTypeMirror)","u":"convertAnnotatedTypeMirror(org.checkerframework.framework.util.StringToJavaExpression,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"convertAnnotationMirror(StringToJavaExpression, AnnotationMirror)","u":"convertAnnotationMirror(org.checkerframework.framework.util.StringToJavaExpression,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"convertArrayLenToArrayLenRange(AnnotationMirror)","u":"convertArrayLenToArrayLenRange(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"convertCallArguments(ExecutableElement, ExecutableType, List<? extends ExpressionTree>)","u":"convertCallArguments(javax.lang.model.element.ExecutableElement,javax.lang.model.type.ExecutableType,java.util.List)"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"convertedTreeLookup"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"convertIntRangeToIntVal(AnnotationMirror)","u":"convertIntRangeToIntVal(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"convertIntValToIntRange(AnnotationMirror)","u":"convertIntValToIntRange(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"convertToAnnotation(ProcessingEnvironment)","u":"convertToAnnotation(javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory","l":"convertToPredicate(AnnotationMirror)","u":"convertToPredicate(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"convertToSubstringIndexAnnotation(ProcessingEnvironment)","u":"convertToSubstringIndexAnnotation(javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.checker.index.substringindex","c":"SubstringIndexAnnotatedTypeFactory","l":"convertUBQualifierToAnnotation(UBQualifier)","u":"convertUBQualifierToAnnotation(org.checkerframework.checker.index.upperbound.UBQualifier)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"convertUBQualifierToAnnotation(UBQualifier)","u":"convertUBQualifierToAnnotation(org.checkerframework.checker.index.upperbound.UBQualifier)"},{"p":"org.checkerframework.dataflow.analysis","c":"Store","l":"copy()"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferInput","l":"copy()"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprStore","l":"copy()"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"Constant","l":"copy()"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"ConstantPropagationStore","l":"copy()"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarStore","l":"copy()"},{"p":"org.checkerframework.dataflow.reachingdef","c":"ReachingDefinitionStore","l":"copy()"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"copy()"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"copyAdd(char, OffsetEquation)","u":"copyAdd(char,org.checkerframework.checker.index.upperbound.OffsetEquation)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeCopier","l":"copyAnnotations"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"copyElementValuesFromAnnotation(AnnotationMirror, Collection<ExecutableElement>)","u":"copyElementValuesFromAnnotation(javax.lang.model.element.AnnotationMirror,java.util.Collection)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"copyElementValuesFromAnnotation(AnnotationMirror, String...)","u":"copyElementValuesFromAnnotation(javax.lang.model.element.AnnotationMirror,java.lang.String...)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedIntersectionType","l":"copyIntersectionBoundAnnotations()"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"copyOnlyExplicitConstructorAnnotations(AnnotatedTypeFactory, AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedExecutableType)","u":"copyOnlyExplicitConstructorAnnotations(org.checkerframework.framework.type.AnnotatedTypeFactory,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"copyRenameElementValuesFromAnnotation(AnnotationMirror, Map<String, String>)","u":"copyRenameElementValuesFromAnnotation(javax.lang.model.element.AnnotationMirror,java.util.Map)"},{"p":"org.checkerframework.javacutil","c":"TypeAnnotationUtils","l":"copyTAPosition(TypeAnnotationPosition)","u":"copyTAPosition(com.sun.tools.javac.code.TypeAnnotationPosition)"},{"p":"org.checkerframework.framework.util.typeinference","c":"TypeArgInferenceUtil","l":"correctResults(Map<TypeVariable, AnnotatedTypeMirror>, ExpressionTree, ExecutableType, AnnotatedTypeFactory)","u":"correctResults(java.util.Map,com.sun.source.tree.ExpressionTree,javax.lang.model.type.ExecutableType,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsChecker","l":"COUNT_FRAMEWORK_BUILD_CALLS"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakChecker","l":"COUNT_MUST_CALL"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"create(Collection<? extends Number>)","u":"create(java.util.Collection)"},{"p":"org.checkerframework.framework.util","c":"Contract","l":"create(Contract.Kind, String, AnnotationMirror, AnnotationMirror, Boolean)","u":"create(org.checkerframework.framework.util.Contract.Kind,java.lang.String,javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror,java.lang.Boolean)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.UpperBoundLiteralQualifier","l":"create(int)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"create(long, long)","u":"create(long,long)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil","l":"create(MethodInvocationTree, AnnotatedTypeFactory)","u":"create(com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"create(TypeKind)","u":"create(javax.lang.model.type.TypeKind)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis","l":"createAbstractValue(AnnotatedTypeMirror)","u":"createAbstractValue(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.lock","c":"LockAnalysis","l":"createAbstractValue(AnnotationMirrorSet, TypeMirror)","u":"createAbstractValue(org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnalysis","l":"createAbstractValue(AnnotationMirrorSet, TypeMirror)","u":"createAbstractValue(org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnalysis","l":"createAbstractValue(AnnotationMirrorSet, TypeMirror)","u":"createAbstractValue(org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis","l":"createAbstractValue(AnnotationMirrorSet, TypeMirror)","u":"createAbstractValue(org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.flow","c":"CFAnalysis","l":"createAbstractValue(AnnotationMirrorSet, TypeMirror)","u":"createAbstractValue(org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory","l":"createAccumulatorAnnotation(List<String>)","u":"createAccumulatorAnnotation(java.util.List)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory","l":"createAccumulatorAnnotation(String)","u":"createAccumulatorAnnotation(java.lang.String)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationChecker","l":"createAliasAnalyses()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"createAndInitQualifierDefaults()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"createAnnotatedTypeFormatter()"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory","l":"createAnnotatedTypeFormatter()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"createAnnotatedTypeFormatter()"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory","l":"createAnnotationClassLoader()"},{"p":"org.checkerframework.common.subtyping","c":"SubtypingAnnotatedTypeFactory","l":"createAnnotationClassLoader()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"createAnnotationClassLoader()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"createAnnotationFormatter()"},{"p":"org.checkerframework.framework.type","c":"NoElementQualifierHierarchy","l":"createAnnotationMirrors(Elements)","u":"createAnnotationMirrors(javax.lang.model.util.Elements)"},{"p":"org.checkerframework.framework.util.typeinference","c":"DefaultTypeArgumentInference","l":"createArgumentAFConstraints(AnnotatedTypeFactory, List<AnnotatedTypeMirror>, AnnotatedTypeMirror.AnnotatedExecutableType, Set<TypeVariable>, boolean)","u":"createArgumentAFConstraints(org.checkerframework.framework.type.AnnotatedTypeFactory,java.util.List,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,java.util.Set,boolean)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"createArrayLenAnnotation(List<Integer>)","u":"createArrayLenAnnotation(java.util.List)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"createArrayLenRangeAnnotation(int, int)","u":"createArrayLenRangeAnnotation(int,int)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"createArrayLenRangeAnnotation(Range)","u":"createArrayLenRangeAnnotation(org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"createArrayType(TypeMirror, Types)","u":"createArrayType(javax.lang.model.type.TypeMirror,javax.lang.model.util.Types)"},{"p":"org.checkerframework.framework.util.typeinference","c":"DefaultTypeArgumentInference","l":"createAssignmentConstraints(AnnotatedTypeMirror, AnnotatedTypeMirror, AnnotatedTypeMirror.AnnotatedExecutableType, Set<AFConstraint>, Map<TypeVariable, AnnotatedTypeMirror>, Set<TypeVariable>, AnnotatedTypeFactory)","u":"createAssignmentConstraints(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,java.util.Set,java.util.Map,java.util.Set,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.propkey","c":"PropertyKeyAnnotatedTypeFactory","l":"createBasicTreeAnnotator()"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"createBooleanAnnotation(List<Boolean>)","u":"createBooleanAnnotation(java.util.List)"},{"p":"org.checkerframework.framework.type","c":"NoElementQualifierHierarchy","l":"createBottoms()"},{"p":"org.checkerframework.framework.type","c":"ElementQualifierHierarchy","l":"createBottomsMap()"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakAnnotatedTypeFactory","l":"createCalledMethods(String...)","u":"createCalledMethods(java.lang.String...)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"createCFGVisualizer()"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"createCharAnnotation(List<Character>)","u":"createCharAnnotation(java.util.List)"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenAnnotatedTypeFactory","l":"createCombinedSameLen(List<JavaExpression>, List<AnnotationMirror>)","u":"createCombinedSameLen(java.util.List,java.util.List)"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"createCompilationBootclasspath(List<String>)","u":"createCompilationBootclasspath(java.util.List)"},{"p":"org.checkerframework.javacutil","c":"TypeAnnotationUtils","l":"createCompoundFromAnnotationMirror(AnnotationMirror, ProcessingEnvironment)","u":"createCompoundFromAnnotationMirror(javax.lang.model.element.AnnotationMirror,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"createContractsFromMethod()"},{"p":"org.checkerframework.framework.flow","c":"CFAnalysis","l":"createCopiedStore(CFStore)","u":"createCopiedStore(org.checkerframework.framework.flow.CFStore)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnalysis","l":"createCopiedStore(KeyForStore)","u":"createCopiedStore(org.checkerframework.checker.nullness.KeyForStore)"},{"p":"org.checkerframework.checker.lock","c":"LockAnalysis","l":"createCopiedStore(LockStore)","u":"createCopiedStore(org.checkerframework.checker.lock.LockStore)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnalysis","l":"createCopiedStore(NullnessStore)","u":"createCopiedStore(org.checkerframework.checker.nullness.NullnessStore)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis","l":"createCopiedStore(S)"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"createCpOpts(List<String>)","u":"createCpOpts(java.util.List)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"createDefaultApplierElement(AnnotatedTypeFactory, Element, AnnotatedTypeMirror, boolean)","u":"createDefaultApplierElement(org.checkerframework.framework.type.AnnotatedTypeFactory,javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeMirror,boolean)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"createDefaultForTypeAnnotator()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"createDefaultForTypeAnnotator()"},{"p":"org.checkerframework.checker.interning","c":"InterningAnnotatedTypeFactory","l":"createDefaultForUseTypeAnnotator()"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"createDefaultForUseTypeAnnotator()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"createDefaultForUseTypeAnnotator()"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanAnnotatedTypeFactory","l":"createDependentTypesHelper()"},{"p":"org.checkerframework.checker.index.substringindex","c":"SubstringIndexAnnotatedTypeFactory","l":"createDependentTypesHelper()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"createDependentTypesHelper()"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"createDependentTypesHelper()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"createDependentTypesHelper()"},{"p":"org.checkerframework.checker.index","c":"OffsetDependentTypesHelper","l":"createDependentTypesTreeAnnotator()"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"createDependentTypesTreeAnnotator()"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy","l":"createDirectSuperMap()"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"createDoesNotMatchRegexAnnotation(List<String>)","u":"createDoesNotMatchRegexAnnotation(java.util.List)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"createDoubleAnnotation(List<Double>)","u":"createDoubleAnnotation(java.util.List)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"createDoubleValAnnotation(List<Double>)","u":"createDoubleValAnnotation(java.util.List)"},{"p":"org.checkerframework.framework.type","c":"ElementQualifierHierarchy","l":"createElementlessQualifierMap()"},{"p":"org.checkerframework.checker.lock","c":"LockAnalysis","l":"createEmptyStore(boolean)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnalysis","l":"createEmptyStore(boolean)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnalysis","l":"createEmptyStore(boolean)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis","l":"createEmptyStore(boolean)"},{"p":"org.checkerframework.framework.flow","c":"CFAnalysis","l":"createEmptyStore(boolean)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"createEnhancedForLoopArrayVariable(ExpressionTree, VariableElement)","u":"createEnhancedForLoopArrayVariable(com.sun.source.tree.ExpressionTree,javax.lang.model.element.VariableElement)"},{"p":"org.checkerframework.framework.flow","c":"CFCFGBuilder.CFCFGTranslationPhaseOne","l":"createEnhancedForLoopArrayVariable(ExpressionTree, VariableElement)","u":"createEnhancedForLoopArrayVariable(com.sun.source.tree.ExpressionTree,javax.lang.model.element.VariableElement)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"createEnhancedForLoopIteratorVariable(MethodInvocationTree, VariableElement)","u":"createEnhancedForLoopIteratorVariable(com.sun.source.tree.MethodInvocationTree,javax.lang.model.element.VariableElement)"},{"p":"org.checkerframework.framework.flow","c":"CFCFGBuilder.CFCFGTranslationPhaseOne","l":"createEnhancedForLoopIteratorVariable(MethodInvocationTree, VariableElement)","u":"createEnhancedForLoopIteratorVariable(com.sun.source.tree.MethodInvocationTree,javax.lang.model.element.VariableElement)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"createEqualityComparer()"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"createError(String, JavaExpressionParseUtil.JavaExpressionParseException)","u":"createError(java.lang.String,org.checkerframework.framework.util.JavaExpressionParseUtil.JavaExpressionParseException)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"createError(String, String)","u":"createError(java.lang.String,java.lang.String)"},{"p":"org.checkerframework.checker.signature","c":"SignatureChecker","l":"createFactory(CompilationUnitTree)","u":"createFactory(com.sun.source.tree.CompilationUnitTree)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsAnnotatedTypeFactory","l":"createFlowAnalysis()"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"createFlowAnalysis()"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnnotatedTypeFactory","l":"createFlowAnalysis()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"createFlowAnalysis()"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakAnnotatedTypeFactory","l":"createFlowAnalysis()"},{"p":"org.checkerframework.common.basetype","c":"BaseAnnotatedTypeFactory","l":"createFlowAnalysis()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"createFlowAnalysis()"},{"p":"org.checkerframework.checker.regex","c":"RegexAnnotatedTypeFactory","l":"createFlowTransferFunction(CFAbstractAnalysis<CFValue, CFStore, CFTransfer>)","u":"createFlowTransferFunction(org.checkerframework.framework.flow.CFAbstractAnalysis)"},{"p":"org.checkerframework.common.aliasing","c":"AliasingAnnotatedTypeFactory","l":"createFlowTransferFunction(CFAbstractAnalysis<CFValue, CFStore, CFTransfer>)","u":"createFlowTransferFunction(org.checkerframework.framework.flow.CFAbstractAnalysis)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"createFlowTransferFunction(CFAbstractAnalysis<CFValue, CFStore, CFTransfer>)","u":"createFlowTransferFunction(org.checkerframework.framework.flow.CFAbstractAnalysis)"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"createFlowTransferFunction(CFAbstractAnalysis<CFValue, LockStore, LockTransfer>)","u":"createFlowTransferFunction(org.checkerframework.framework.flow.CFAbstractAnalysis)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnnotatedTypeFactory","l":"createFlowTransferFunction(CFAbstractAnalysis<KeyForValue, KeyForStore, KeyForTransfer>)","u":"createFlowTransferFunction(org.checkerframework.framework.flow.CFAbstractAnalysis)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"createFlowTransferFunction(CFAbstractAnalysis<NullnessValue, NullnessStore, NullnessTransfer>)","u":"createFlowTransferFunction(org.checkerframework.framework.flow.CFAbstractAnalysis)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"createFlowTransferFunction(CFAbstractAnalysis<Value, Store, TransferFunction>)","u":"createFlowTransferFunction(org.checkerframework.framework.flow.CFAbstractAnalysis)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"createFormatForCall(MethodInvocationTree, I18nFormatterAnnotatedTypeFactory)","u":"createFormatForCall(com.sun.source.tree.MethodInvocationTree,org.checkerframework.checker.i18nformatter.I18nFormatterAnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy","l":"createGlbsMap()"},{"p":"org.checkerframework.framework.util.typeinference","c":"TypeArgInferenceUtil","l":"createHierarchyMap(AnnotationMirrorSet, QualifierHierarchy)","u":"createHierarchyMap(org.checkerframework.javacutil.AnnotationMirrorSet,org.checkerframework.framework.type.QualifierHierarchy)"},{"p":"org.checkerframework.framework.util.typeinference","c":"DefaultTypeArgumentInference","l":"createInitialAssignmentConstraints(AnnotatedTypeMirror, AnnotatedTypeMirror, AnnotatedTypeFactory, Set<TypeVariable>)","u":"createInitialAssignmentConstraints(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeFactory,java.util.Set)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"createIntRangeAnnotation(Range)","u":"createIntRangeAnnotation(org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"createIntValAnnotation(List<Long>)","u":"createIntValAnnotation(java.util.List)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnnotatedTypeFactory","l":"createKeyForAnnotationMirrorWithValue(Set<String>)","u":"createKeyForAnnotationMirrorWithValue(java.util.Set)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnnotatedTypeFactory","l":"createKeyForAnnotationMirrorWithValue(String)","u":"createKeyForAnnotationMirrorWithValue(java.lang.String)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanAnnotatedTypeFactory","l":"createLessThanQualifier(List<String>)","u":"createLessThanQualifier(java.util.List)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanAnnotatedTypeFactory","l":"createLessThanQualifier(String)","u":"createLessThanQualifier(java.lang.String)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"createLiteral(int)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"createLiteral(TypeTag, Object, TypeMirror, ProcessingEnvironment)","u":"createLiteral(com.sun.tools.javac.code.TypeTag,java.lang.Object,javax.lang.model.type.TypeMirror,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.javacutil","c":"CollectionUtils","l":"createLRUCache(int)"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy","l":"createLubsMap()"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"createMatchesRegexAnnotation(List<String>)","u":"createMatchesRegexAnnotation(java.util.List)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"createMustCall(List<String>)","u":"createMustCall(java.util.List)"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileParser","l":"createNameToAnnotationMap(List<TypeElement>)","u":"createNameToAnnotationMap(java.util.List)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"createNumberAnnotationMirror(List<Number>)","u":"createNumberAnnotationMirror(java.util.List)"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"createOffsetForInt(int)"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"createOffsetFromJavaExpression(String)","u":"createOffsetFromJavaExpression(java.lang.String)"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"createOffsetFromNode(Node, AnnotationProvider, char)","u":"createOffsetFromNode(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.javacutil.AnnotationProvider,char)"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"createOffsetFromNodesValue(Node, ValueAnnotatedTypeFactory, char)","u":"createOffsetFromNodesValue(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.common.value.ValueAnnotatedTypeFactory,char)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"createOverrideChecker(Tree, AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror, AnnotatedTypeMirror, AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror)","u":"createOverrideChecker(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"createOverrideChecker(Tree, AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror, AnnotatedTypeMirror, AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror)","u":"createOverrideChecker(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"createPpOpts(List<String>)","u":"createPpOpts(java.util.List)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory","l":"createPredicateAnnotation(String)","u":"createPredicateAnnotation(java.lang.String)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"createQualifierDefaults()"},{"p":"org.checkerframework.checker.fenum","c":"FenumAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.checker.formatter","c":"FormatterAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.checker.index.searchindex","c":"SearchIndexAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.checker.index.substringindex","c":"SubstringIndexAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.checker.regex","c":"RegexAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.common.aliasing","c":"AliasingAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.common.reflection","c":"ClassValAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.common.reflection","c":"MethodValAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.common.util.debug","c":"TypeOutputtingChecker.GeneralAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"createQualifierHierarchy()"},{"p":"org.checkerframework.checker.fenum","c":"FenumAnnotatedTypeFactory.FenumQualifierHierarchy","l":"createQualifierKindHierarchy(Collection<Class<? extends Annotation>>)","u":"createQualifierKindHierarchy(java.util.Collection)"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory.UnitsQualifierHierarchy","l":"createQualifierKindHierarchy(Collection<Class<? extends Annotation>>)","u":"createQualifierKindHierarchy(java.util.Collection)"},{"p":"org.checkerframework.framework.type","c":"ElementQualifierHierarchy","l":"createQualifierKindHierarchy(Collection<Class<? extends Annotation>>)","u":"createQualifierKindHierarchy(java.util.Collection)"},{"p":"org.checkerframework.framework.type","c":"NoElementQualifierHierarchy","l":"createQualifierKindHierarchy(Collection<Class<? extends Annotation>>)","u":"createQualifierKindHierarchy(java.util.Collection)"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy","l":"createQualifierKinds(Collection<Class<? extends Annotation>>)","u":"createQualifierKinds(java.util.Collection)"},{"p":"org.checkerframework.checker.signedness","c":"SignednessAnnotatedTypeFactory","l":"createQualifierPolymorphism()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"createQualifierPolymorphism()"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"createQualifierUpperBounds()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"createQualifierUpperBounds()"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsAnnotatedTypeFactory","l":"createRequiresOrEnsuresQualifier(String, AnnotationMirror, AnnotatedTypeMirror, Analysis.BeforeOrAfter, List<AnnotationMirror>)","u":"createRequiresOrEnsuresQualifier(java.lang.String,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.dataflow.analysis.Analysis.BeforeOrAfter,java.util.List)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"createRequiresOrEnsuresQualifier(String, AnnotationMirror, AnnotatedTypeMirror, Analysis.BeforeOrAfter, List<AnnotationMirror>)","u":"createRequiresOrEnsuresQualifier(java.lang.String,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.dataflow.analysis.Analysis.BeforeOrAfter,java.util.List)"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"createRuntimeClasspath(List<String>)","u":"createRuntimeClasspath(java.util.List)"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenAnnotatedTypeFactory","l":"createSameLen(Collection<String>)","u":"createSameLen(java.util.Collection)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis","l":"createSingleAnnotationValue(AnnotationMirror, TypeMirror)","u":"createSingleAnnotationValue(javax.lang.model.element.AnnotationMirror,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessChecker","l":"createSourceVisitor()"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakChecker","l":"createSourceVisitor()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"createSourceVisitor()"},{"p":"org.checkerframework.common.reflection","c":"ClassValChecker","l":"createSourceVisitor()"},{"p":"org.checkerframework.common.reflection","c":"MethodValChecker","l":"createSourceVisitor()"},{"p":"org.checkerframework.common.util.count","c":"AnnotationStatistics","l":"createSourceVisitor()"},{"p":"org.checkerframework.common.util.count","c":"JavaCodeStatistics","l":"createSourceVisitor()"},{"p":"org.checkerframework.common.util.debug","c":"TypeOutputtingChecker","l":"createSourceVisitor()"},{"p":"org.checkerframework.common.value","c":"ValueChecker","l":"createSourceVisitor()"},{"p":"org.checkerframework.framework.source","c":"AggregateChecker","l":"createSourceVisitor()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"createSourceVisitor()"},{"p":"org.checkerframework.common.util.debug","c":"TreeDebug","l":"createSourceVisitor(CompilationUnitTree)","u":"createSourceVisitor(com.sun.source.tree.CompilationUnitTree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"createSourceVisitorPublic()"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"createStringAnnotation(List<String>)","u":"createStringAnnotation(java.util.List)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"createSupportedLintOptions()"},{"p":"org.checkerframework.checker.fenum","c":"FenumAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.i18n","c":"I18nAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.i18n","c":"LocalizableKeyAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.index.searchindex","c":"SearchIndexAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.index.substringindex","c":"SubstringIndexAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.regex","c":"RegexAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.signature","c":"SignatureAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.signedness","c":"SignednessAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.common.aliasing","c":"AliasingAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.common.reflection","c":"ClassValAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.common.reflection","c":"MethodValAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.common.returnsreceiver","c":"ReturnsReceiverAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.common.subtyping","c":"SubtypingAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.framework.util","c":"PurityAnnotatedTypeFactory","l":"createSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallTransfer","l":"createTemporaryVar(Node)","u":"createTemporaryVar(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.framework.type","c":"NoElementQualifierHierarchy","l":"createTops()"},{"p":"org.checkerframework.framework.type","c":"ElementQualifierHierarchy","l":"createTopsMap()"},{"p":"org.checkerframework.checker.lock","c":"LockAnalysis","l":"createTransferFunction()"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis","l":"createTransferFunction()"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"createTransferResult(V, TransferInput<V, S>)","u":"createTransferResult(V,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.compilermsgs","c":"CompilerMessagesAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.formatter","c":"FormatterAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.i18n","c":"I18nAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.i18n","c":"LocalizableKeyAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.interning","c":"InterningAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.propkey","c":"PropertyKeyAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.regex","c":"RegexAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.signature","c":"SignatureAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.signedness","c":"SignednessAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.common.aliasing","c":"AliasingAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.common.reflection","c":"ClassValAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.common.reflection","c":"MethodValAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"createTreeAnnotator()"},{"p":"org.checkerframework.dataflow.cfg","c":"CFGProcessor","l":"createTreePathScanner(CompilationUnitTree)","u":"createTreePathScanner(com.sun.source.tree.CompilationUnitTree)"},{"p":"org.checkerframework.javacutil","c":"BasicTypeProcessor","l":"createTreePathScanner(CompilationUnitTree)","u":"createTreePathScanner(com.sun.source.tree.CompilationUnitTree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"createType(TypeMirror, AnnotatedTypeFactory, boolean)","u":"createType(javax.lang.model.type.TypeMirror,org.checkerframework.framework.type.AnnotatedTypeFactory,boolean)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsAnnotatedTypeFactory","l":"createTypeAnnotator()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"createTypeAnnotator()"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"createTypeAnnotator()"},{"p":"org.checkerframework.checker.interning","c":"InterningAnnotatedTypeFactory","l":"createTypeAnnotator()"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"createTypeAnnotator()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"createTypeAnnotator()"},{"p":"org.checkerframework.common.returnsreceiver","c":"ReturnsReceiverAnnotatedTypeFactory","l":"createTypeAnnotator()"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"createTypeAnnotator()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"createTypeAnnotator()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"createTypeArgumentInference()"},{"p":"org.checkerframework.javacutil","c":"TypeAnnotationUtils","l":"createTypeCompoundFromAnnotationMirror(AnnotationMirror, TypeAnnotationPosition, ProcessingEnvironment)","u":"createTypeCompoundFromAnnotationMirror(javax.lang.model.element.AnnotationMirror,com.sun.tools.javac.code.TypeAnnotationPosition,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"createTypeFactory()"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"createTypeFactory()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"createTypeFactory()"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakVisitor","l":"createTypeFactory()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"createTypeFactory()"},{"p":"org.checkerframework.common.reflection","c":"ClassValVisitor","l":"createTypeFactory()"},{"p":"org.checkerframework.common.reflection","c":"MethodValVisitor","l":"createTypeFactory()"},{"p":"org.checkerframework.common.value","c":"ValueVisitor","l":"createTypeFactory()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"createTypeFactoryPublic()"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnnotatedTypeFactory","l":"createTypeHierarchy()"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"createTypeHierarchy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"createTypeHierarchy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"createTypeOfObject(AnnotatedTypeFactory)","u":"createTypeOfObject(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"createTypeValidator()"},{"p":"org.checkerframework.checker.optional","c":"OptionalVisitor","l":"createTypeValidator()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"createTypeValidator()"},{"p":"org.checkerframework.common.reflection","c":"ClassValVisitor","l":"createTypeValidator()"},{"p":"org.checkerframework.common.reflection","c":"MethodValVisitor","l":"createTypeValidator()"},{"p":"org.checkerframework.common.util.report","c":"ReportVisitor","l":"createTypeValidator()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"createTypeVariableSubstitutor()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"createUBQualifier(AnnotatedTypeMirror, AnnotationMirror, UpperBoundChecker)","u":"createUBQualifier(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror,org.checkerframework.checker.index.upperbound.UpperBoundChecker)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"createUBQualifier(AnnotationMirror, String, UpperBoundChecker)","u":"createUBQualifier(javax.lang.model.element.AnnotationMirror,java.lang.String,org.checkerframework.checker.index.upperbound.UpperBoundChecker)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"createUBQualifier(AnnotationMirror, UpperBoundChecker)","u":"createUBQualifier(javax.lang.model.element.AnnotationMirror,org.checkerframework.checker.index.upperbound.UpperBoundChecker)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"createUBQualifier(List<String>, List<String>)","u":"createUBQualifier(java.util.List,java.util.List)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"createUBQualifier(List<String>, List<String>, String)","u":"createUBQualifier(java.util.List,java.util.List,java.lang.String)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"createUBQualifier(String, String)","u":"createUBQualifier(java.lang.String,java.lang.String)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"createUnderInitializationAnnotation(Class<?>)","u":"createUnderInitializationAnnotation(java.lang.Class)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"createUnderInitializationAnnotation(TypeMirror)","u":"createUnderInitializationAnnotation(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"createUnknownInitializationAnnotation(Class<?>)","u":"createUnknownInitializationAnnotation(java.lang.Class)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"createUnknownInitializationAnnotation(TypeMirror)","u":"createUnknownInitializationAnnotation(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"createViewpointAdapter()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"currentFileAjavaTypes"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"currentInput"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"currentMethods"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"currentNode"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter.FormattingVisitor","l":"currentPrintInvisibleSetting"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter.FormattingVisitor","l":"currentPrintVerboseGenerics"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"currentRoot"},{"p":"org.checkerframework.javacutil","c":"BasicTypeProcessor","l":"currentRoot"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"currentTop"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"currentTree"},{"p":"org.checkerframework.framework.test","c":"CheckerFrameworkPerDirectoryTest","l":"customizeOptions(List<String>)","u":"customizeOptions(java.util.List)"},{"p":"org.checkerframework.framework.test","c":"CheckerFrameworkPerFileTest","l":"customizeOptions(List<String>)","u":"customizeOptions(java.util.List)"},{"p":"org.checkerframework.checker.i18nformatter.qual","c":"I18nConversionCategory","l":"DATE"},{"p":"org.checkerframework.framework.type.treeannotator","c":"DebugListTreeAnnotator","l":"DebugListTreeAnnotator(Tree.Kind[], TreeAnnotator...)","u":"%3Cinit%3E(com.sun.source.tree.Tree.Kind[],org.checkerframework.framework.type.treeannotator.TreeAnnotator...)"},{"p":"org.checkerframework.framework.type.treeannotator","c":"DebugListTreeAnnotator","l":"DebugListTreeAnnotator(TreeAnnotator...)","u":"%3Cinit%3E(org.checkerframework.framework.type.treeannotator.TreeAnnotator...)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"debugSpew"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"debugSpew"},{"p":"org.checkerframework.checker.units.qual","c":"Prefix","l":"deca"},{"p":"org.checkerframework.checker.units.qual","c":"Prefix","l":"deci"},{"p":"org.checkerframework.javacutil.trees","c":"DetachedVarSymbol","l":"decl"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileParser.AnnotationFileAnnotations","l":"declAnnos"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"declarationFromElement(Element)","u":"declarationFromElement(javax.lang.model.element.Element)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"declarationTreeKinds()"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis.FieldInitialValue","l":"declared"},{"p":"org.checkerframework.framework.qual","c":"TypeKind","l":"DECLARED"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"DECLARED_ARRAY"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"DECLARED_DECLARED"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"DECLARED_EXECUTABLE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"DECLARED_INTERSECTION"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"DECLARED_NONE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"DECLARED_NULL"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"DECLARED_PRIMITIVE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"DECLARED_TYPEVAR"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"DECLARED_UNION"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"DECLARED_WILDCARD"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"declaredClasses"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"declaredLambdas"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedArrayType","l":"deepCopy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedDeclaredType","l":"deepCopy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedExecutableType","l":"deepCopy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedIntersectionType","l":"deepCopy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedNoType","l":"deepCopy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedNullType","l":"deepCopy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedPrimitiveType","l":"deepCopy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedTypeVariable","l":"deepCopy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedUnionType","l":"deepCopy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedWildcardType","l":"deepCopy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"deepCopy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedArrayType","l":"deepCopy(boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedDeclaredType","l":"deepCopy(boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedExecutableType","l":"deepCopy(boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedIntersectionType","l":"deepCopy(boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedNoType","l":"deepCopy(boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedNullType","l":"deepCopy(boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedPrimitiveType","l":"deepCopy(boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedTypeVariable","l":"deepCopy(boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedUnionType","l":"deepCopy(boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedWildcardType","l":"deepCopy(boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"deepCopy(boolean)"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"deeplyEnclosedJavaTestFiles(File)","u":"deeplyEnclosedJavaTestFiles(java.io.File)"},{"p":"org.checkerframework.dataflow.reachingdef","c":"ReachingDefinitionNode","l":"def"},{"p":"org.checkerframework.framework.util","c":"JavaParserUtil","l":"DEFAULT_LANGUAGE_LEVEL"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeVisitor","l":"DEFAULT_VALUE"},{"p":"org.checkerframework.framework.util.defaults","c":"Default","l":"Default(AnnotationMirror, TypeUseLocation, boolean)","u":"%3Cinit%3E(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.qual.TypeUseLocation,boolean)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeScanner","l":"defaultAction"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeReplacer","l":"defaultAction(AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"defaultAction(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeCombiner","l":"defaultAction(AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"defaultAction(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.visitor","c":"DoubleAnnotatedTypeScanner","l":"defaultAction(AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"defaultAction(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"defaultAction(AnnotatedTypeMirror, AnnotatedTypeMirror, PARAM)","u":"defaultAction(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,PARAM)"},{"p":"org.checkerframework.framework.type","c":"StructuralEqualityComparer","l":"defaultAction(AnnotatedTypeMirror, AnnotatedTypeMirror, Void)","u":"defaultAction(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeScanner","l":"defaultAction(AnnotatedTypeMirror, P)","u":"defaultAction(org.checkerframework.framework.type.AnnotatedTypeMirror,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeScanner.DefaultAction","l":"defaultAction(AnnotatedTypeMirror, P)","u":"defaultAction(org.checkerframework.framework.type.AnnotatedTypeMirror,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeVisitor","l":"defaultAction(AnnotatedTypeMirror, P)","u":"defaultAction(org.checkerframework.framework.type.AnnotatedTypeMirror,P)"},{"p":"org.checkerframework.framework.type","c":"HashcodeAtmVisitor","l":"defaultAction(AnnotatedTypeMirror, Void)","u":"defaultAction(org.checkerframework.framework.type.AnnotatedTypeMirror,java.lang.Void)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"defaultAction(Node)","u":"defaultAction(com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.ajava","c":"AnnotationEqualityVisitor","l":"defaultAction(T, T)","u":"defaultAction(T,T)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"defaultAction(T, T)","u":"defaultAction(T,T)"},{"p":"org.checkerframework.framework.ajava","c":"ExpectedTreesVisitor","l":"defaultAction(Tree)","u":"defaultAction(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"defaultAction(Tree)","u":"defaultAction(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.type.treeannotator","c":"DebugListTreeAnnotator","l":"defaultAction(Tree, AnnotatedTypeMirror)","u":"defaultAction(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.treeannotator","c":"ListTreeAnnotator","l":"defaultAction(Tree, AnnotatedTypeMirror)","u":"defaultAction(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.treeannotator","c":"LiteralTreeAnnotator","l":"defaultAction(Tree, AnnotatedTypeMirror)","u":"defaultAction(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"defaultAction(Tree, Node)","u":"defaultAction(com.sun.source.tree.Tree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"Heuristics.Matcher","l":"defaultAction(Tree, Void)","u":"defaultAction(com.sun.source.tree.Tree,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter","l":"DefaultAnnotatedTypeFormatter()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter","l":"DefaultAnnotatedTypeFormatter(AnnotationFormatter, boolean, boolean)","u":"%3Cinit%3E(org.checkerframework.framework.util.AnnotationFormatter,boolean,boolean)"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter","l":"DefaultAnnotatedTypeFormatter(boolean, boolean)","u":"%3Cinit%3E(boolean,boolean)"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter","l":"DefaultAnnotatedTypeFormatter(DefaultAnnotatedTypeFormatter.FormattingVisitor)","u":"%3Cinit%3E(org.checkerframework.framework.type.DefaultAnnotatedTypeFormatter.FormattingVisitor)"},{"p":"org.checkerframework.framework.util","c":"DefaultAnnotationFormatter","l":"DefaultAnnotationFormatter()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults.DefaultApplierElement","l":"DefaultApplierElement(AnnotatedTypeFactory, Element, AnnotatedTypeMirror, boolean)","u":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory,javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeMirror,boolean)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults.DefaultApplierElement.DefaultApplierElementImpl","l":"DefaultApplierElementImpl()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis","l":"defaultCreateAbstractValue(CFAbstractAnalysis<CFValue, ?, ?>, AnnotationMirrorSet, TypeMirror)","u":"defaultCreateAbstractValue(org.checkerframework.framework.flow.CFAbstractAnalysis,org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"defaultErrorMessage(AnnotatedTypeMirror, AnnotatedTypeMirror, PARAM)","u":"defaultErrorMessage(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"defaultErrorMessage(AnnotatedTypeMirror, AnnotatedTypeMirror, Void)","u":"defaultErrorMessage(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"defaultErrorMessage(AnnotatedTypeMirror, AnnotatedTypeMirror, Void)","u":"defaultErrorMessage(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"EqualityAtmComparer","l":"defaultErrorMessage(AnnotatedTypeMirror, AnnotatedTypeMirror, Void)","u":"defaultErrorMessage(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"StructuralEqualityComparer","l":"defaultErrorMessage(AnnotatedTypeMirror, AnnotatedTypeMirror, Void)","u":"defaultErrorMessage(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,java.lang.Void)"},{"p":"org.checkerframework.framework.type.typeannotator","c":"DefaultForTypeAnnotator","l":"DefaultForTypeAnnotator(AnnotatedTypeFactory)","u":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.type","c":"DefaultInferredTypesApplier","l":"DefaultInferredTypesApplier(boolean, QualifierHierarchy, AnnotatedTypeFactory)","u":"%3Cinit%3E(boolean,org.checkerframework.framework.type.QualifierHierarchy,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.type","c":"DefaultInferredTypesApplier","l":"DefaultInferredTypesApplier(QualifierHierarchy, AnnotatedTypeFactory)","u":"%3Cinit%3E(org.checkerframework.framework.type.QualifierHierarchy,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter.FormattingVisitor","l":"defaultInvisiblesSetting"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"defaultJointAction(Tree, Node)","u":"defaultJointAction(com.sun.source.tree.Tree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"DefaultJointVisitor()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter.FormattingVisitor","l":"defaultPrintVerboseGenerics"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"defaultQualifierApplyToSubpackagesElement"},{"p":"org.checkerframework.framework.type.typeannotator","c":"DefaultQualifierForUseTypeAnnotator","l":"DefaultQualifierForUseTypeAnnotator(AnnotatedTypeFactory)","u":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy","l":"DefaultQualifierKindHierarchy(Collection<Class<? extends Annotation>>)","u":"%3Cinit%3E(java.util.Collection)"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy","l":"DefaultQualifierKindHierarchy(Collection<Class<? extends Annotation>>, Class<? extends Annotation>)","u":"%3Cinit%3E(java.util.Collection,java.lang.Class)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"defaultQualifierListValueElement"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"defaultQualifierLocationsElement"},{"p":"org.checkerframework.framework.type.poly","c":"DefaultQualifierPolymorphism","l":"DefaultQualifierPolymorphism(ProcessingEnvironment, AnnotatedTypeFactory)","u":"%3Cinit%3E(javax.annotation.processing.ProcessingEnvironment,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"defaultQualifierValueElement"},{"p":"org.checkerframework.common.reflection","c":"DefaultReflectionResolver","l":"DefaultReflectionResolver(BaseTypeChecker, MethodValAnnotatedTypeFactory, boolean)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,org.checkerframework.common.reflection.MethodValAnnotatedTypeFactory,boolean)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"defaultResult"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"defaults"},{"p":"org.checkerframework.framework.util.typeinference","c":"DefaultTypeArgumentInference","l":"DefaultTypeArgumentInference(AnnotatedTypeFactory)","u":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.type.typeannotator","c":"DefaultForTypeAnnotator","l":"defaultTypeFromName(AnnotatedTypeMirror, String)","u":"defaultTypeFromName(org.checkerframework.framework.type.AnnotatedTypeMirror,java.lang.String)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"DefaultTypeHierarchy(BaseTypeChecker, QualifierHierarchy, boolean, boolean)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,org.checkerframework.framework.type.QualifierHierarchy,boolean,boolean)"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"deg"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"delocalize(AnnotatedTypeMirror, MethodTree)","u":"delocalize(org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"delocalizeAtCallsite(AnnotatedTypeMirror, Tree, List<Node>, Node, ExecutableElement)","u":"delocalizeAtCallsite(org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree,java.util.List,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesError","l":"DependentTypesError(String, JavaExpressionParseUtil.JavaExpressionParseException)","u":"%3Cinit%3E(java.lang.String,org.checkerframework.framework.util.JavaExpressionParseUtil.JavaExpressionParseException)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesError","l":"DependentTypesError(String, String)","u":"%3Cinit%3E(java.lang.String,java.lang.String)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis","l":"dependentTypesHelper"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"dependentTypesHelper"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"DependentTypesHelper(AnnotatedTypeFactory)","u":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesTreeAnnotator","l":"DependentTypesTreeAnnotator(AnnotatedTypeFactory, DependentTypesHelper)","u":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory,org.checkerframework.framework.util.dependenttypes.DependentTypesHelper)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis.Worklist","l":"depthFirstOrder"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"descendingIterator()"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"descendingSet()"},{"p":"org.checkerframework.javacutil.trees","c":"DetachedVarSymbol","l":"DetachedVarSymbol(long, Name, Type, Symbol)","u":"%3Cinit%3E(long,com.sun.tools.javac.util.Name,com.sun.tools.javac.code.Type,com.sun.tools.javac.code.Symbol)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssertionErrorNode","l":"detail"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"DETAILS_SEPARATOR"},{"p":"org.checkerframework.dataflow.qual","c":"Pure.Kind","l":"DETERMINISTIC"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"DETERMINISTIC"},{"p":"org.checkerframework.framework.source","c":"DiagMessage","l":"DiagMessage(Diagnostic.Kind, String, Object...)","u":"%3Cinit%3E(javax.tools.Diagnostic.Kind,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"DIAGNOSTIC_FILE_PATTERN"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"DIAGNOSTIC_FILE_REGEX"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"DIAGNOSTIC_FILE_WARNING_PATTERN"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"DIAGNOSTIC_FILE_WARNING_REGEX"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"DIAGNOSTIC_IN_JAVA_PATTERN"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"DIAGNOSTIC_IN_JAVA_REGEX"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"DIAGNOSTIC_PATTERN"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"DIAGNOSTIC_REGEX"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"DIAGNOSTIC_WARNING_IN_JAVA_PATTERN"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"DIAGNOSTIC_WARNING_IN_JAVA_REGEX"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"DIAGNOSTIC_WARNING_PATTERN"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"DIAGNOSTIC_WARNING_REGEX"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"diagnosticsToString(List<TestDiagnostic>)","u":"diagnosticsToString(java.util.List)"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"diagnosticsToStrings(Iterable<Diagnostic<? extends JavaFileObject>>, boolean)","u":"diagnosticsToStrings(java.lang.Iterable,boolean)"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"diagnosticToString(Diagnostic<? extends JavaFileObject>, boolean)","u":"diagnosticToString(javax.tools.Diagnostic,boolean)"},{"p":"org.checkerframework.framework.test","c":"TypecheckResult","l":"didTestFail()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayCreationNode","l":"dimensions"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayCreation","l":"dimensions"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtilExtra","l":"dimensionUnsignedHeight(Dimension)","u":"dimensionUnsignedHeight(java.awt.Dimension)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtilExtra","l":"dimensionUnsignedWidth(Dimension)","u":"dimensionUnsignedWidth(java.awt.Dimension)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"direction"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedDeclaredType","l":"directSupertypes()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedIntersectionType","l":"directSupertypes()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"directSupertypes()"},{"p":"org.checkerframework.framework.stub","c":"JavaStubifier","l":"dirnameToPath(String)","u":"dirnameToPath(java.lang.String)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsChecker","l":"DISABLE_BUILDER_FRAMEWORK_SUPPORTS"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsChecker","l":"DISABLE_RETURNS_RECEIVER"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"divide(int)"},{"p":"org.checkerframework.common.value.util","c":"ByteMath","l":"divide(Number)","u":"divide(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"DoubleMath","l":"divide(Number)","u":"divide(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"FloatMath","l":"divide(Number)","u":"divide(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"IntegerMath","l":"divide(Number)","u":"divide(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"LongMath","l":"divide(Number)","u":"divide(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"NumberMath","l":"divide(Number)","u":"divide(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"ShortMath","l":"divide(Number)","u":"divide(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"divide(Range)","u":"divide(org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelations","l":"division(AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"division(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"division(AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"division(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"DOES_NOT_MATCH_REGEX_NAME"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"doesAnnotatedForApplyToThisChecker(AnnotationMirror)","u":"doesAnnotatedForApplyToThisChecker(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"doesNotMatchRegexValueElement"},{"p":"org.checkerframework.common.util.report","c":"DoNothingChecker","l":"DoNothingChecker()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.test","c":"CheckerFrameworkWPIPerDirectoryTest","l":"doNotTypecheck(String)","u":"doNotTypecheck(java.lang.String)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"dontEmitDebugInfo()"},{"p":"org.checkerframework.checker.signature","c":"SignatureAnnotatedTypeFactory","l":"DOT_SEPARATED_IDENTIFIERS"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"DOTCFGVisualizer()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"dotOutputFileName(UnderlyingAST)","u":"dotOutputFileName(org.checkerframework.dataflow.cfg.UnderlyingAST)"},{"p":"org.checkerframework.framework.qual","c":"LiteralKind","l":"DOUBLE"},{"p":"org.checkerframework.framework.qual","c":"TypeKind","l":"DOUBLE"},{"p":"org.checkerframework.framework.type.visitor","c":"DoubleAnnotatedTypeScanner","l":"DoubleAnnotatedTypeScanner()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.type.visitor","c":"DoubleAnnotatedTypeScanner","l":"DoubleAnnotatedTypeScanner(AnnotatedTypeScanner.Reduce<R>, R)","u":"%3Cinit%3E(org.checkerframework.framework.type.visitor.AnnotatedTypeScanner.Reduce,R)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"DoubleJavaParserVisitor()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"DoubleLiteralNode","l":"DoubleLiteralNode(LiteralTree)","u":"%3Cinit%3E(com.sun.source.tree.LiteralTree)"},{"p":"org.checkerframework.common.value.util","c":"DoubleMath","l":"DoubleMath(double)","u":"%3Cinit%3E(double)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"DOUBLEVAL_NAME"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"doubleValValueElement"},{"p":"org.checkerframework.common.util","c":"TypeVisualizer","l":"drawToDot(File, AnnotatedTypeMirror)","u":"drawToDot(java.io.File,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.util","c":"TypeVisualizer","l":"drawToDot(String, AnnotatedTypeMirror)","u":"drawToDot(java.lang.String,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.util","c":"TypeVisualizer","l":"drawToPng(File, AnnotatedTypeMirror)","u":"drawToPng(java.io.File,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.util","c":"TypeVisualizer","l":"drawToPng(String, AnnotatedTypeMirror)","u":"drawToPng(java.lang.String,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"ea"},{"p":"org.checkerframework.dataflow.analysis","c":"Store.FlowRule","l":"EACH_TO_EACH"},{"p":"org.checkerframework.checker.guieffect","c":"Effect","l":"Effect(Class<? extends Annotation>)","u":"%3Cinit%3E(java.lang.Class)"},{"p":"org.checkerframework.checker.guieffect","c":"Effect.EffectRange","l":"EffectRange(Effect, Effect)","u":"%3Cinit%3E(org.checkerframework.checker.guieffect.Effect,org.checkerframework.checker.guieffect.Effect)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"effStack"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ClassNameNode","l":"element"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FieldAccessNode","l":"element"},{"p":"org.checkerframework.dataflow.cfg.node","c":"PackageNameNode","l":"element"},{"p":"org.checkerframework.dataflow.expression","c":"FormalParameter","l":"element"},{"p":"org.checkerframework.dataflow.expression","c":"LocalVariable","l":"element"},{"p":"org.checkerframework.framework.util.element","c":"MethodTypeParamApplier","l":"element"},{"p":"org.checkerframework.framework.util.element","c":"ElementAnnotationUtil","l":"ElementAnnotationUtil()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"elementFromDeclaration(ClassTree)","u":"elementFromDeclaration(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"elementFromDeclaration(ExpressionTree)","u":"elementFromDeclaration(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"elementFromDeclaration(MemberSelectTree)","u":"elementFromDeclaration(com.sun.source.tree.MemberSelectTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"elementFromDeclaration(MethodInvocationTree)","u":"elementFromDeclaration(com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"elementFromDeclaration(MethodTree)","u":"elementFromDeclaration(com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"elementFromDeclaration(NewClassTree)","u":"elementFromDeclaration(com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"elementFromDeclaration(VariableTree)","u":"elementFromDeclaration(com.sun.source.tree.VariableTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"elementFromTree(ClassTree)","u":"elementFromTree(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"elementFromTree(ExpressionTree)","u":"elementFromTree(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"elementFromTree(MemberSelectTree)","u":"elementFromTree(com.sun.source.tree.MemberSelectTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"elementFromTree(MethodInvocationTree)","u":"elementFromTree(com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"elementFromTree(MethodTree)","u":"elementFromTree(com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"elementFromTree(NewClassTree)","u":"elementFromTree(com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"elementFromTree(Tree)","u":"elementFromTree(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"elementFromTree(VariableTree)","u":"elementFromTree(com.sun.source.tree.VariableTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"elementFromUse(ClassTree)","u":"elementFromUse(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"elementFromUse(ExpressionTree)","u":"elementFromUse(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"elementFromUse(MemberSelectTree)","u":"elementFromUse(com.sun.source.tree.MemberSelectTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"elementFromUse(MethodInvocationTree)","u":"elementFromUse(com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"elementFromUse(MethodTree)","u":"elementFromUse(com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"elementFromUse(NewClassTree)","u":"elementFromUse(com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"elementFromUse(VariableTree)","u":"elementFromUse(com.sun.source.tree.VariableTree)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"elementNamesValues(String, Object)","u":"elementNamesValues(java.lang.String,java.lang.Object)"},{"p":"org.checkerframework.framework.type","c":"ElementQualifierHierarchy","l":"ElementQualifierHierarchy(Collection<Class<? extends Annotation>>, Elements)","u":"%3Cinit%3E(java.util.Collection,javax.lang.model.util.Elements)"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFormatter","l":"elements"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFormatter.UnitsAnnotationFormatter","l":"elements"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFormatter.UnitsFormattingVisitor","l":"elements"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"elements"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"elements"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"elements"},{"p":"org.checkerframework.framework.source","c":"SourceVisitor","l":"elements"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"elements"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"elements"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"elementsWithSuppressedWarnings"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"elementToBoundType"},{"p":"org.checkerframework.framework.type.typeannotator","c":"DefaultQualifierForUseTypeAnnotator","l":"elementToDefaults"},{"p":"org.checkerframework.dataflow.analysis","c":"Store.Kind","l":"ELSE"},{"p":"org.checkerframework.dataflow.analysis","c":"Store.FlowRule","l":"ELSE_TO_BOTH"},{"p":"org.checkerframework.dataflow.analysis","c":"Store.FlowRule","l":"ELSE_TO_ELSE"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ConditionalBlockImpl","l":"elseFlowRule"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TernaryExpressionNode","l":"elseOperand"},{"p":"org.checkerframework.checker.index","c":"IndexRefinementInfo","l":"elseStore"},{"p":"org.checkerframework.dataflow.analysis","c":"ConditionalTransferResult","l":"elseStore"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferInput","l":"elseStore"},{"p":"org.checkerframework.dataflow.analysis","c":"ForwardAnalysisImpl","l":"elseStores"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ConditionalBlockImpl","l":"elseSuccessor"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"emitDebugInfo()"},{"p":"org.checkerframework.common.util.debug","c":"EmptyProcessor","l":"EmptyProcessor()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"emptySet()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"emptyStore"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"enclosingClass(Element)","u":"enclosingClass(javax.lang.model.element.Element)"},{"p":"org.checkerframework.javacutil","c":"TreePathUtil","l":"enclosingClass(TreePath)","u":"enclosingClass(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.javacutil","c":"TreePathUtil","l":"enclosingDeclarationPath(TreePath)","u":"enclosingDeclarationPath(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ObjectCreationNode","l":"enclosingExpression"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"enclosingMemberSelect()"},{"p":"org.checkerframework.javacutil","c":"TreePathUtil","l":"enclosingMethod(TreePath)","u":"enclosingMethod(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.javacutil","c":"TreePathUtil","l":"enclosingMethodOrLambda(TreePath)","u":"enclosingMethodOrLambda(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.javacutil","c":"TreePathUtil","l":"enclosingNonParen(TreePath)","u":"enclosingNonParen(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.javacutil","c":"TreePathUtil","l":"enclosingOfClass(TreePath, Class<T>)","u":"enclosingOfClass(com.sun.source.util.TreePath,java.lang.Class)"},{"p":"org.checkerframework.javacutil","c":"TreePathUtil","l":"enclosingOfKind(TreePath, Set<Tree.Kind>)","u":"enclosingOfKind(com.sun.source.util.TreePath,java.util.Set)"},{"p":"org.checkerframework.javacutil","c":"TreePathUtil","l":"enclosingOfKind(TreePath, Tree.Kind)","u":"enclosingOfKind(com.sun.source.util.TreePath,com.sun.source.tree.Tree.Kind)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"enclosingPackage(Element)","u":"enclosingPackage(javax.lang.model.element.Element)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"enclosingStatement(Tree)","u":"enclosingStatement(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.javacutil","c":"TreePathUtil","l":"enclosingTopLevelBlock(TreePath)","u":"enclosingTopLevelBlock(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedDeclaredType","l":"enclosingType"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"enclosingTypeElement(Element)","u":"enclosingTypeElement(javax.lang.model.element.Element)"},{"p":"org.checkerframework.javacutil","c":"TreePathUtil","l":"enclosingVariable(TreePath)","u":"enclosingVariable(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"ensureDirectoryExists(String)","u":"ensureDirectoryExists(java.lang.String)"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"ensuresLockHeldIfExpressionElement"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"ensuresLockHeldValueElement"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"ensuresQualifierExpressionElement"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"ensuresQualifierIfExpressionElement"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"ensuresQualifierIfListTM"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"ensuresQualifierIfListValueElement"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"ensuresQualifierIfResultElement"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"ensuresQualifierIfTM"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"ensuresQualifierListTM"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"ensuresQualifierListValueElement"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"ensuresQualifierTM"},{"p":"org.checkerframework.dataflow.cfg.block","c":"SpecialBlock.SpecialBlockType","l":"ENTRY"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"entryBlock"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorMap","l":"entrySet()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"env"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis","l":"env"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"env"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"TargetConstraints","l":"equalities"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"TargetConstraints.Equalities","l":"Equalities()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"EqualitiesSolver","l":"EqualitiesSolver()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"EQUALITY_COMPARER"},{"p":"org.checkerframework.framework.type","c":"EqualityAtmComparer","l":"EqualityAtmComparer()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"equalityComparer"},{"p":"org.checkerframework.checker.guieffect","c":"Effect","l":"equals(Effect)","u":"equals(org.checkerframework.checker.guieffect.Effect)"},{"p":"org.checkerframework.checker.guieffect","c":"Effect","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.analysis","c":"Store","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferInput","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprStore","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprValue","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayAccessNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayCreationNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayTypeNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssertionErrorNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssignmentNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BitwiseAndNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BitwiseComplementNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BitwiseOrNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BitwiseXorNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BooleanLiteralNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"CaseNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"CharacterLiteralNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ClassDeclarationNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ClassNameNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ConditionalAndNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ConditionalNotNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ConditionalOrNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"DoubleLiteralNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"EqualToNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ExpressionStatementNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FieldAccessNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FloatingDivisionNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FloatingRemainderNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FloatLiteralNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FunctionalInterfaceNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"GreaterThanNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"GreaterThanOrEqualNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"InstanceOfNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"IntegerDivisionNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"IntegerLiteralNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"IntegerRemainderNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LambdaResultExpressionNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LeftShiftNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LessThanNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LessThanOrEqualNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LocalVariableNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LongLiteralNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MarkerNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodAccessNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodInvocationNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NarrowingConversionNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NotEqualNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NullChkNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NullLiteralNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalAdditionNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalMinusNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalMultiplicationNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalPlusNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalSubtractionNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ObjectCreationNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"PackageNameNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ParameterizedTypeNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"PrimitiveTypeNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ReturnNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ShortLiteralNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SignedRightShiftNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringConcatenateAssignmentNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringConcatenateNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringConversionNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringLiteralNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SuperNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SwitchExpressionNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SynchronizedNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TernaryExpressionNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ThisNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ThrowNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TypeCastNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"UnsignedRightShiftNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ValueLiteralNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"VariableDeclarationNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"WideningConversionNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"Constant","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"ConstantPropagationStore","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayAccess","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayCreation","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.expression","c":"BinaryOperation","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.expression","c":"ClassName","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.expression","c":"FieldAccess","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.expression","c":"FormalParameter","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.expression","c":"LocalVariable","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.expression","c":"MethodCall","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.expression","c":"ThisReference","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.expression","c":"UnaryOperation","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.expression","c":"Unknown","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.expression","c":"ValueLiteral","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarStore","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.reachingdef","c":"ReachingDefinitionNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.dataflow.reachingdef","c":"ReachingDefinitionStore","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.framework.source","c":"DiagMessage","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnostic","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeParameterBounds","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.framework.util","c":"Contract.ConditionalPostcondition","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.framework.util","c":"Contract","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.framework.util.defaults","c":"Default","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesError","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"AFConstraint","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"TUConstraint","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorMap","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.javacutil","c":"Pair","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.checkerframework.common.value.util","c":"ByteMath","l":"equalTo(Number)","u":"equalTo(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"DoubleMath","l":"equalTo(Number)","u":"equalTo(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"FloatMath","l":"equalTo(Number)","u":"equalTo(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"IntegerMath","l":"equalTo(Number)","u":"equalTo(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"LongMath","l":"equalTo(Number)","u":"equalTo(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"NumberMath","l":"equalTo(Number)","u":"equalTo(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"ShortMath","l":"equalTo(Number)","u":"equalTo(java.lang.Number)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"EqualToNode","l":"EqualToNode(BinaryTree, Node, Node)","u":"%3Cinit%3E(com.sun.source.tree.BinaryTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.framework.type.visitor","c":"EquivalentAtmComboScanner","l":"EquivalentAtmComboScanner()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil.FormatCall","l":"errMissingFormatAnnotation()"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesError","l":"error"},{"p":"org.checkerframework.framework.test.diagnostics","c":"DiagnosticKind","l":"Error"},{"p":"org.checkerframework.framework.qual","c":"TypeKind","l":"ERROR"},{"p":"org.checkerframework.framework.util","c":"Contract.Kind","l":"errorKey"},{"p":"org.checkerframework.framework.util.element","c":"ElementAnnotationUtil.ErrorTypeKindException","l":"ErrorTypeKindException(String, Object...)","u":"%3Cinit%3E(java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"errsOnLastExit"},{"p":"org.checkerframework.common.value","c":"ReflectiveEvaluator","l":"evaluateMethodCall(List<List<?>>, List<?>, MethodInvocationTree)","u":"evaluateMethodCall(java.util.List,java.util.List,com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory","l":"evaluatePredicate(AnnotationMirror, String)","u":"evaluatePredicate(javax.lang.model.element.AnnotationMirror,java.lang.String)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory","l":"evaluatePredicate(List<String>, String)","u":"evaluatePredicate(java.util.List,java.lang.String)"},{"p":"org.checkerframework.common.value","c":"ReflectiveEvaluator","l":"evaluateStaticFieldAccess(String, String, ExpressionTree)","u":"evaluateStaticFieldAccess(java.lang.String,java.lang.String,com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"evaluator"},{"p":"org.checkerframework.common.value","c":"ReflectiveEvaluator","l":"evaluteConstructorCall(ArrayList<List<?>>, NewClassTree, TypeMirror)","u":"evaluteConstructorCall(java.util.ArrayList,com.sun.source.tree.NewClassTree,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"EVERYTHING"},{"p":"org.checkerframework.checker.units.qual","c":"Prefix","l":"exa"},{"p":"org.checkerframework.dataflow.cfg.block","c":"Block.BlockType","l":"EXCEPTION_BLOCK"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ExtendedNode.ExtendedNodeType","l":"EXCEPTION_NODE"},{"p":"org.checkerframework.framework.qual","c":"TypeUseLocation","l":"EXCEPTION_PARAMETER"},{"p":"org.checkerframework.dataflow.cfg.block","c":"SpecialBlock.SpecialBlockType","l":"EXCEPTIONAL_EXIT"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"exceptionalExitBlock"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"exceptionalExitStores"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferResult","l":"exceptionalStores"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ExceptionBlockImpl","l":"exceptionalSuccessors"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ExceptionBlockImpl","l":"ExceptionBlockImpl()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.analysis","c":"BackwardAnalysisImpl","l":"exceptionStores"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"exceptionToInvalidFormatAnnotation(IllegalArgumentException)","u":"exceptionToInvalidFormatAnnotation(java.lang.IllegalArgumentException)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil","l":"exceptionToInvalidFormatAnnotation(IllegalFormatException)","u":"exceptionToInvalidFormatAnnotation(java.util.IllegalFormatException)"},{"p":"org.checkerframework.checker.formatter.util","c":"FormatUtil.ExcessiveOrMissingFormatArgumentException","l":"ExcessiveOrMissingFormatArgumentException(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"org.checkerframework.common.util","c":"TypeVisualizer","l":"execDotToPng(File, File)","u":"execDotToPng(java.io.File,java.io.File)"},{"p":"org.checkerframework.framework.qual","c":"TypeKind","l":"EXECUTABLE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"EXECUTABLE_ARRAY"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"EXECUTABLE_DECLARED"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"EXECUTABLE_EXECUTABLE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"EXECUTABLE_INTERSECTION"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"EXECUTABLE_NONE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"EXECUTABLE_NULL"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"EXECUTABLE_PRIMITIVE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"EXECUTABLE_TYPEVAR"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"EXECUTABLE_UNION"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"EXECUTABLE_WILDCARD"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory.ParameterizedExecutableType","l":"executableType"},{"p":"org.checkerframework.framework.util","c":"ExecUtil","l":"execute(String[], OutputStream, OutputStream)","u":"execute(java.lang.String[],java.io.OutputStream,java.io.OutputStream)"},{"p":"org.checkerframework.framework.util","c":"ExecUtil","l":"ExecUtil()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"SpecialBlock.SpecialBlockType","l":"EXIT"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"expandArgFiles(List<File>)","u":"expandArgFiles(java.util.List)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"expandCFOptions(List<? extends Class<?>>, String[])","u":"expandCFOptions(java.util.List,java.lang.String[])"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"expandVarArgsParameters(AnnotatedTypeFactory, AnnotatedTypeMirror.AnnotatedExecutableType, List<? extends ExpressionTree>)","u":"expandVarArgsParameters(org.checkerframework.framework.type.AnnotatedTypeFactory,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,java.util.List)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"expandVarArgsParametersFromTypes(AnnotatedTypeMirror.AnnotatedExecutableType, List<AnnotatedTypeMirror>)","u":"expandVarArgsParametersFromTypes(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,java.util.List)"},{"p":"org.checkerframework.framework.ajava","c":"ExpectedTreesVisitor","l":"ExpectedTreesVisitor()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.qual","c":"TypeUseLocation","l":"EXPLICIT_LOWER_BOUND"},{"p":"org.checkerframework.framework.qual","c":"TypeUseLocation","l":"EXPLICIT_UPPER_BOUND"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ExplicitThisNode","l":"ExplicitThisNode(IdentifierTree)","u":"%3Cinit%3E(com.sun.source.tree.IdentifierTree)"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprStore","l":"exprContainsVariable(Node, Node)","u":"exprContainsVariable(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SynchronizedNode","l":"expression"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ThrowNode","l":"expression"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesError","l":"expression"},{"p":"org.checkerframework.checker.calledmethods.qual","c":"EnsuresCalledMethodsIf","l":"expression()"},{"p":"org.checkerframework.checker.index.qual","c":"EnsuresLTLengthOfIf","l":"expression()"},{"p":"org.checkerframework.checker.lock.qual","c":"EnsuresLockHeldIf","l":"expression()"},{"p":"org.checkerframework.checker.nullness.qual","c":"EnsuresKeyForIf","l":"expression()"},{"p":"org.checkerframework.checker.nullness.qual","c":"EnsuresNonNullIf","l":"expression()"},{"p":"org.checkerframework.common.value.qual","c":"EnsuresMinLenIf","l":"expression()"},{"p":"org.checkerframework.framework.qual","c":"EnsuresQualifier","l":"expression()"},{"p":"org.checkerframework.framework.qual","c":"EnsuresQualifierIf","l":"expression()"},{"p":"org.checkerframework.framework.qual","c":"RequiresQualifier","l":"expression()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ExpressionStatementNode","l":"ExpressionStatementNode(ExpressionTree)","u":"%3Cinit%3E(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.framework.util","c":"Contract","l":"expressionString"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ExtendedNode","l":"ExtendedNode(ExtendedNode.ExtendedNodeType)","u":"%3Cinit%3E(org.checkerframework.dataflow.cfg.builder.ExtendedNode.ExtendedNodeType)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGBuilder","l":"extendedNodeCollectionToStringDebug(Collection<? extends ExtendedNode>)","u":"extendedNodeCollectionToStringDebug(java.util.Collection)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"extendWithClassNameNode(ClassNameNode)","u":"extendWithClassNameNode(org.checkerframework.dataflow.cfg.node.ClassNameNode)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"extendWithExtendedNode(ExtendedNode)","u":"extendWithExtendedNode(org.checkerframework.dataflow.cfg.builder.ExtendedNode)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"extendWithNode(Node)","u":"extendWithNode(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"extendWithNodeWithException(Node, TypeMirror)","u":"extendWithNodeWithException(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"extendWithNodeWithExceptions(Node, Set<TypeMirror>)","u":"extendWithNodeWithExceptions(org.checkerframework.dataflow.cfg.node.Node,java.util.Set)"},{"p":"org.checkerframework.framework.util.element","c":"MethodApplier","l":"extractAndApply()"},{"p":"org.checkerframework.framework.util.element","c":"ParamApplier","l":"extractAndApply()"},{"p":"org.checkerframework.framework.util.element","c":"MethodTypeParamApplier","l":"extractAndApply()"},{"p":"org.checkerframework.framework.util.element","c":"TypeDeclarationApplier","l":"extractAndApply()"},{"p":"org.checkerframework.framework.util.element","c":"TypeVarUseApplier","l":"extractAndApply()"},{"p":"org.checkerframework.framework.util.element","c":"VariableApplier","l":"extractAndApply()"},{"p":"org.checkerframework.framework.type","c":"AbstractViewpointAdapter","l":"extractAnnotationMirror(AnnotatedTypeMirror)","u":"extractAnnotationMirror(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"extractArg(String, String, List<String>)","u":"extractArg(java.lang.String,java.lang.String,java.util.List)"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"extractBootClassPath(List<String>)","u":"extractBootClassPath(java.util.List)"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"extractCpOpts(List<String>)","u":"extractCpOpts(java.util.List)"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"extractFileArg(String, File, List<String>)","u":"extractFileArg(java.lang.String,java.io.File,java.util.List)"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"extractJvmOpts(List<String>)","u":"extractJvmOpts(java.util.List)"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"extractOptWithPattern(Pattern, boolean, List<String>)","u":"extractOptWithPattern(java.util.regex.Pattern,boolean,java.util.List)"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"extractPpOpts(List<String>)","u":"extractPpOpts(java.util.List)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"F2A","l":"F2A(AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"F2AReducer","l":"F2AReducer(AnnotatedTypeFactory)","u":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.flow","c":"CFCFGBuilder.CFCFGTranslationPhaseOne","l":"factory"},{"p":"org.checkerframework.framework.util","c":"ContractsFromMethod","l":"factory"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"factory"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil","l":"failure(FormatterTreeUtil.Result<?>, String, Object...)","u":"failure(org.checkerframework.checker.formatter.FormatterTreeUtil.Result,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"failure(FormatterTreeUtil.Result<?>, String, Object...)","u":"failure(org.checkerframework.checker.formatter.FormatterTreeUtil.Result,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileParser.AnnotationFileAnnotations","l":"fakeOverrides"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ConditionalJump","l":"falseFlowRule"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ConditionalJump","l":"falseSucc"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"FBCBOTTOM"},{"p":"org.checkerframework.checker.units.qual","c":"Prefix","l":"femto"},{"p":"org.checkerframework.checker.fenum","c":"FenumAnnotatedTypeFactory","l":"FENUM_BOTTOM"},{"p":"org.checkerframework.checker.fenum","c":"FenumAnnotatedTypeFactory","l":"FENUM_TOP"},{"p":"org.checkerframework.checker.fenum","c":"FenumAnnotatedTypeFactory","l":"FENUM_UNQUALIFIED"},{"p":"org.checkerframework.checker.fenum","c":"FenumAnnotatedTypeFactory","l":"FenumAnnotatedTypeFactory(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.fenum","c":"FenumChecker","l":"FenumChecker()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.fenum","c":"FenumAnnotatedTypeFactory.FenumQualifierHierarchy","l":"FenumQualifierHierarchy(Collection<Class<? extends Annotation>>, Elements)","u":"%3Cinit%3E(java.util.Collection,javax.lang.model.util.Elements)"},{"p":"org.checkerframework.checker.fenum","c":"FenumVisitor","l":"FenumVisitor(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FieldAccessNode","l":"field"},{"p":"org.checkerframework.dataflow.expression","c":"FieldAccess","l":"field"},{"p":"org.checkerframework.framework.qual","c":"TypeUseLocation","l":"FIELD"},{"p":"org.checkerframework.common.value.qual","c":"MinLenFieldInvariant","l":"field()"},{"p":"org.checkerframework.framework.qual","c":"FieldInvariant","l":"field()"},{"p":"org.checkerframework.dataflow.expression","c":"FieldAccess","l":"FieldAccess(JavaExpression, FieldAccessNode)","u":"%3Cinit%3E(org.checkerframework.dataflow.expression.JavaExpression,org.checkerframework.dataflow.cfg.node.FieldAccessNode)"},{"p":"org.checkerframework.dataflow.expression","c":"FieldAccess","l":"FieldAccess(JavaExpression, TypeMirror, VariableElement)","u":"%3Cinit%3E(org.checkerframework.dataflow.expression.JavaExpression,javax.lang.model.type.TypeMirror,javax.lang.model.element.VariableElement)"},{"p":"org.checkerframework.dataflow.expression","c":"FieldAccess","l":"FieldAccess(JavaExpression, VariableElement)","u":"%3Cinit%3E(org.checkerframework.dataflow.expression.JavaExpression,javax.lang.model.element.VariableElement)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FieldAccessNode","l":"FieldAccessNode(Tree, Node)","u":"%3Cinit%3E(com.sun.source.tree.Tree,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FieldAccessNode","l":"FieldAccessNode(Tree, VariableElement, Node)","u":"%3Cinit%3E(com.sun.source.tree.Tree,javax.lang.model.element.VariableElement,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis.FieldInitialValue","l":"fieldDecl"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis.FieldInitialValue","l":"FieldInitialValue(FieldAccess, V, V)","u":"%3Cinit%3E(org.checkerframework.dataflow.expression.FieldAccess,V,V)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"fieldInvariantFieldElement"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"fieldInvariantQualifierElement"},{"p":"org.checkerframework.framework.util","c":"FieldInvariants","l":"FieldInvariants(FieldInvariants, List<String>, List<AnnotationMirror>)","u":"%3Cinit%3E(org.checkerframework.framework.util.FieldInvariants,java.util.List,java.util.List)"},{"p":"org.checkerframework.framework.util","c":"FieldInvariants","l":"FieldInvariants(List<String>, List<AnnotationMirror>)","u":"%3Cinit%3E(java.util.List,java.util.List)"},{"p":"org.checkerframework.common.initializedfields.qual","c":"EnsuresInitializedFields","l":"fields()"},{"p":"org.checkerframework.javacutil","c":"TypeAnnotationUtils","l":"fieldTAPosition(int)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis","l":"fieldValues"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"fieldValues"},{"p":"org.checkerframework.framework.stub","c":"FileAnnotationFileResource","l":"FileAnnotationFileResource(File)","u":"%3Cinit%3E(java.io.File)"},{"p":"org.checkerframework.checker.nullness.util","c":"Opt","l":"filter(T, Predicate<? super T>)","u":"filter(T,java.util.function.Predicate)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"finalLocalValues"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"finalLocalValues"},{"p":"org.checkerframework.framework.type","c":"ElementQualifierHierarchy","l":"findAnnotationInHierarchy(Collection<? extends AnnotationMirror>, AnnotationMirror)","u":"findAnnotationInHierarchy(java.util.Collection,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"NoElementQualifierHierarchy","l":"findAnnotationInHierarchy(Collection<? extends AnnotationMirror>, AnnotationMirror)","u":"findAnnotationInHierarchy(java.util.Collection,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"findAnnotationInHierarchy(Collection<? extends AnnotationMirror>, AnnotationMirror)","u":"findAnnotationInHierarchy(java.util.Collection,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"ElementQualifierHierarchy","l":"findAnnotationInSameHierarchy(Collection<? extends AnnotationMirror>, AnnotationMirror)","u":"findAnnotationInSameHierarchy(java.util.Collection,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"NoElementQualifierHierarchy","l":"findAnnotationInSameHierarchy(Collection<? extends AnnotationMirror>, AnnotationMirror)","u":"findAnnotationInSameHierarchy(java.util.Collection,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"findAnnotationInSameHierarchy(Collection<? extends AnnotationMirror>, AnnotationMirror)","u":"findAnnotationInSameHierarchy(java.util.Collection,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"Resolver","l":"findClass(String, TreePath)","u":"findClass(java.lang.String,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.javacutil","c":"Resolver","l":"findClassInPackage(String, Symbol.PackageSymbol, TreePath)","u":"findClassInPackage(java.lang.String,com.sun.tools.javac.code.Symbol.PackageSymbol,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"findComparisonFile(File)","u":"findComparisonFile(java.io.File)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"findConcreteUpperBound(TypeMirror)","u":"findConcreteUpperBound(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"findEffectiveAnnotationInHierarchy(QualifierHierarchy, AnnotatedTypeMirror, AnnotationMirror)","u":"findEffectiveAnnotationInHierarchy(org.checkerframework.framework.type.QualifierHierarchy,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"findEffectiveAnnotationInHierarchy(QualifierHierarchy, AnnotatedTypeMirror, AnnotationMirror, boolean)","u":"findEffectiveAnnotationInHierarchy(org.checkerframework.framework.type.QualifierHierarchy,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror,boolean)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"findEffectiveAnnotations(QualifierHierarchy, AnnotatedTypeMirror)","u":"findEffectiveAnnotations(org.checkerframework.framework.type.QualifierHierarchy,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"findEffectiveLowerBoundAnnotations(QualifierHierarchy, AnnotatedTypeMirror)","u":"findEffectiveLowerBoundAnnotations(org.checkerframework.framework.type.QualifierHierarchy,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"findElement(CharSequence)","u":"findElement(java.lang.CharSequence)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"EqualitiesSolver","l":"findEqualTarget(TargetConstraints.Equalities, AnnotationMirrorSet)","u":"findEqualTarget(org.checkerframework.framework.util.typeinference.solver.TargetConstraints.Equalities,org.checkerframework.javacutil.AnnotationMirrorSet)"},{"p":"org.checkerframework.javacutil","c":"Resolver","l":"findField(String, TypeMirror, TreePath)","u":"findField(java.lang.String,javax.lang.model.type.TypeMirror,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"findFieldInType(TypeElement, String)","u":"findFieldInType(javax.lang.model.element.TypeElement,java.lang.String)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"findFieldsInType(TypeElement, Collection<String>)","u":"findFieldsInType(javax.lang.model.element.TypeElement,java.util.Collection)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"findFieldsInTypeOrSuperType(TypeMirror, Collection<String>)","u":"findFieldsInTypeOrSuperType(javax.lang.model.type.TypeMirror,java.util.Collection)"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"findFilesInParent(File, String...)","u":"findFilesInParent(java.io.File,java.lang.String...)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"findFunction(Tree, ProcessingEnvironment)","u":"findFunction(com.sun.source.tree.Tree,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy","l":"findHighestQualifiers(Set<QualifierKind>)","u":"findHighestQualifiers(java.util.Set)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"findInheritedEffectRange(TypeElement, ExecutableElement)","u":"findInheritedEffectRange(javax.lang.model.element.TypeElement,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"findInheritedEffectRange(TypeElement, ExecutableElement, boolean, Tree)","u":"findInheritedEffectRange(javax.lang.model.element.TypeElement,javax.lang.model.element.ExecutableElement,boolean,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"findJavaFilesPerDirectory(File, String...)","u":"findJavaFilesPerDirectory(java.io.File,java.lang.String...)"},{"p":"org.checkerframework.javacutil","c":"Resolver","l":"findLocalVariableOrParameter(String, TreePath)","u":"findLocalVariableOrParameter(java.lang.String,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy","l":"findLowestQualifiers(Set<QualifierKind>)","u":"findLowestQualifiers(java.util.Set)"},{"p":"org.checkerframework.javacutil","c":"Resolver","l":"findMethod(String, TypeMirror, TreePath, List<TypeMirror>)","u":"findMethod(java.lang.String,javax.lang.model.type.TypeMirror,com.sun.source.util.TreePath,java.util.List)"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"findNestedJavaTestFiles(String...)","u":"findNestedJavaTestFiles(java.lang.String...)"},{"p":"org.checkerframework.javacutil","c":"Resolver","l":"findPackage(String, TreePath)","u":"findPackage(java.lang.String,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"findPathTo(Class<?>, boolean)","u":"findPathTo(java.lang.Class,boolean)"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"findRelativeNestedJavaFiles(File, String...)","u":"findRelativeNestedJavaFiles(java.io.File,java.lang.String...)"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"findRelativeNestedJavaFiles(String, String...)","u":"findRelativeNestedJavaFiles(java.lang.String,java.lang.String...)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"findTypeArguments(ProcessingEnvironment, AnnotatedTypeFactory, ExpressionTree, ExecutableElement, AnnotatedTypeMirror.AnnotatedExecutableType)","u":"findTypeArguments(javax.annotation.processing.ProcessingEnvironment,org.checkerframework.framework.type.AnnotatedTypeFactory,com.sun.source.tree.ExpressionTree,javax.lang.model.element.ExecutableElement,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory.ScanState","l":"FINISHED"},{"p":"org.checkerframework.checker.nullness","c":"NullnessTransfer","l":"finishValue(NullnessValue, NullnessStore)","u":"finishValue(org.checkerframework.checker.nullness.NullnessValue,org.checkerframework.checker.nullness.NullnessStore)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessTransfer","l":"finishValue(NullnessValue, NullnessStore, NullnessStore)","u":"finishValue(org.checkerframework.checker.nullness.NullnessValue,org.checkerframework.checker.nullness.NullnessStore,org.checkerframework.checker.nullness.NullnessStore)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"finishValue(V, S)","u":"finishValue(V,S)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"finishValue(V, S, S)","u":"finishValue(V,S,S)"},{"p":"org.checkerframework.javacutil","c":"Pair","l":"first"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"first()"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"firstStatement(Tree)","u":"firstStatement(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"FIsA","l":"FIsA(AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"FIsAReducer","l":"FIsAReducer(AnnotatedTypeFactory)","u":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"flatOptions()"},{"p":"org.checkerframework.checker.formatter.qual","c":"ConversionCategory","l":"FLOAT"},{"p":"org.checkerframework.framework.qual","c":"LiteralKind","l":"FLOAT"},{"p":"org.checkerframework.framework.qual","c":"TypeKind","l":"FLOAT"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FloatingDivisionNode","l":"FloatingDivisionNode(BinaryTree, Node, Node)","u":"%3Cinit%3E(com.sun.source.tree.BinaryTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FloatingRemainderNode","l":"FloatingRemainderNode(BinaryTree, Node, Node)","u":"%3Cinit%3E(com.sun.source.tree.BinaryTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FloatLiteralNode","l":"FloatLiteralNode(LiteralTree)","u":"%3Cinit%3E(com.sun.source.tree.LiteralTree)"},{"p":"org.checkerframework.common.value.util","c":"FloatMath","l":"FloatMath(float)","u":"%3Cinit%3E(float)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"floor(AnnotationMirror)","u":"floor(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"flowByDefault"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"flowResult"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"flowResultAnalysisCaches"},{"p":"org.checkerframework.dataflow.cfg.block","c":"SingleSuccessorBlockImpl","l":"flowRule"},{"p":"org.checkerframework.common.returnsreceiver","c":"FluentAPIGenerator","l":"FluentAPIGenerator()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesError","l":"FORMAL_PARAM_NAME_STRING"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"AFConstraint","l":"formalParameter"},{"p":"org.checkerframework.dataflow.expression","c":"FormalParameter","l":"FormalParameter(int, VariableElement)","u":"%3Cinit%3E(int,javax.lang.model.element.VariableElement)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"formalParameterPattern"},{"p":"org.checkerframework.checker.formatter","c":"FormatterAnnotatedTypeFactory","l":"FORMAT_NAME"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesError","l":"format()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFormatter","l":"format(AnnotatedTypeMirror)","u":"format(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter","l":"format(AnnotatedTypeMirror)","u":"format(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFormatter","l":"format(AnnotatedTypeMirror, boolean)","u":"format(org.checkerframework.framework.type.AnnotatedTypeMirror,boolean)"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter","l":"format(AnnotatedTypeMirror, boolean)","u":"format(org.checkerframework.framework.type.AnnotatedTypeMirror,boolean)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer","l":"format(Object)","u":"format(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"format(Object)","u":"format(java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"StringCFGVisualizer","l":"format(Object)","u":"format(java.lang.Object)"},{"p":"org.checkerframework.framework.util","c":"AnnotationFormatter","l":"formatAnnotationMirror(AnnotationMirror)","u":"formatAnnotationMirror(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.util","c":"DefaultAnnotationFormatter","l":"formatAnnotationMirror(AnnotationMirror)","u":"formatAnnotationMirror(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFormatter.UnitsAnnotationFormatter","l":"formatAnnotationString(Collection<? extends AnnotationMirror>, boolean)","u":"formatAnnotationString(java.util.Collection,boolean)"},{"p":"org.checkerframework.framework.util","c":"AnnotationFormatter","l":"formatAnnotationString(Collection<? extends AnnotationMirror>, boolean)","u":"formatAnnotationString(java.util.Collection,boolean)"},{"p":"org.checkerframework.framework.util","c":"DefaultAnnotationFormatter","l":"formatAnnotationString(Collection<? extends AnnotationMirror>, boolean)","u":"formatAnnotationString(java.util.Collection,boolean)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil","l":"formatAnnotationToCategories(AnnotationMirror)","u":"formatAnnotationToCategories(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"formatAnnotationToCategories(AnnotationMirror)","u":"formatAnnotationToCategories(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterAnnotatedTypeFactory","l":"FORMATBOTTOM"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter.FormattingVisitor","l":"formatFlatType(AnnotatedTypeMirror)","u":"formatFlatType(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"formatJavaxToolString(String, boolean)","u":"formatJavaxToolString(java.lang.String,boolean)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterAnnotatedTypeFactory","l":"FORMATMETHOD"},{"p":"org.checkerframework.checker.formatter.util","c":"FormatUtil","l":"formatParameterCategories(String)","u":"formatParameterCategories(java.lang.String)"},{"p":"org.checkerframework.checker.i18nformatter.util","c":"I18nFormatUtil","l":"formatParameterCategories(String)","u":"formatParameterCategories(java.lang.String)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterVisitor","l":"formatStringIndex(ExecutableElement)","u":"formatStringIndex(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterAnnotatedTypeFactory","l":"FormatterAnnotatedTypeFactory(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterChecker","l":"FormatterChecker()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTransfer","l":"FormatterTransfer(CFAnalysis)","u":"%3Cinit%3E(org.checkerframework.framework.flow.CFAnalysis)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil","l":"FormatterTreeUtil(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterVisitor","l":"FormatterVisitor(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter","l":"formattingVisitor"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter.FormattingVisitor","l":"FormattingVisitor(AnnotationFormatter, boolean, boolean)","u":"%3Cinit%3E(org.checkerframework.framework.util.AnnotationFormatter,boolean,boolean)"},{"p":"org.checkerframework.checker.formatter.util","c":"FormatUtil","l":"FormatUtil()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil","l":"formatValueElement"},{"p":"org.checkerframework.dataflow.analysis","c":"Analysis.Direction","l":"FORWARD"},{"p":"org.checkerframework.dataflow.analysis","c":"ForwardAnalysisImpl","l":"ForwardAnalysisImpl(int)","u":"%3Cinit%3E(int)"},{"p":"org.checkerframework.dataflow.analysis","c":"ForwardAnalysisImpl","l":"ForwardAnalysisImpl(T)","u":"%3Cinit%3E(T)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis.Worklist.ForwardDFOComparator","l":"ForwardDFOComparator()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.util","c":"Contract.Kind","l":"frameworkContractClass"},{"p":"org.checkerframework.framework.util","c":"Contract.Kind","l":"frameworkContractListClass"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"freshTypeVariable(TypeMirror, ProcessingEnvironment)","u":"freshTypeVariable(javax.lang.model.type.TypeMirror,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.checker.index","c":"Subsequence","l":"from"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"from"},{"p":"org.checkerframework.checker.index.qual","c":"HasSubsequence","l":"from()"},{"p":"org.checkerframework.common.value.qual","c":"ArrayLenRange","l":"from()"},{"p":"org.checkerframework.common.value.qual","c":"IntRange","l":"from()"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"fromArrayAccess(ArrayAccessNode)","u":"fromArrayAccess(org.checkerframework.dataflow.cfg.node.ArrayAccessNode)"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"fromCelsiusToKelvin(int)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"fromClass(Elements, Class<? extends Annotation>)","u":"fromClass(javax.lang.model.util.Elements,java.lang.Class)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"fromClass(Elements, Class<? extends Annotation>, Map<String, AnnotationValue>)","u":"fromClass(javax.lang.model.util.Elements,java.lang.Class,java.util.Map)"},{"p":"org.checkerframework.framework.test","c":"TypecheckResult","l":"fromCompilationResults(TestConfiguration, CompilationResult, List<TestDiagnostic>)","u":"fromCompilationResults(org.checkerframework.framework.test.TestConfiguration,org.checkerframework.framework.test.CompilationResult,java.util.List)"},{"p":"org.checkerframework.checker.formatter.qual","c":"ConversionCategory","l":"fromConversionChar(char)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"fromDiagnosticFileLine(String)","u":"fromDiagnosticFileLine(java.lang.String)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"fromDiagnosticFileString(String)","u":"fromDiagnosticFileString(java.lang.String)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"fromElement(Element)","u":"fromElement(javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"fromElement(ExecutableElement)","u":"fromElement(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"fromElement(TypeElement)","u":"fromElement(javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"fromExpressionTreeCache"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"fromGramToKiloGram(int)"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"fromHourToMinute(int)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"fromJavaFileComment(String, long, String)","u":"fromJavaFileComment(java.lang.String,long,java.lang.String)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"fromJavaSourceLine(String, String, long)","u":"fromJavaSourceLine(java.lang.String,java.lang.String,long)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"fromJavaxDiagnosticList(List<Diagnostic<? extends JavaFileObject>>, boolean)","u":"fromJavaxDiagnosticList(java.util.List,boolean)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"fromJavaxToolsDiagnostic(String, boolean)","u":"fromJavaxToolsDiagnostic(java.lang.String,boolean)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"fromJSpecifyFileComment(String, long, String)","u":"fromJSpecifyFileComment(java.lang.String,long,java.lang.String)"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"fromKelvinToCelsius(int)"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"fromKiloGramToGram(int)"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"fromKiloGramToMetricTon(int)"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"fromKiloMeterPerHourToMeterPerSecond(double)"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"fromKiloMeterToMeter(int)"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"fromKiloNewtonToNewton(int)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"fromMemberTreeCache"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"fromMeterPerSecondToKiloMeterPerHour(double)"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"fromMeterToKiloMeter(int)"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"fromMeterToMilliMeter(int)"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"fromMetricTonToKiloGram(int)"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"fromMilliMeterToMeter(int)"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"fromMinuteToHour(int)"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"fromMinuteToSecond(int)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"fromName(Elements, CharSequence)","u":"fromName(javax.lang.model.util.Elements,java.lang.CharSequence)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"fromName(Elements, CharSequence, Map<String, AnnotationValue>)","u":"fromName(javax.lang.model.util.Elements,java.lang.CharSequence,java.util.Map)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"fromNewClass(NewClassTree)","u":"fromNewClass(com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"fromNewtonToKiloNewton(int)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"fromNode(Node)","u":"fromNode(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"fromNodeFieldAccess(FieldAccessNode)","u":"fromNodeFieldAccess(org.checkerframework.dataflow.cfg.node.FieldAccessNode)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"DiagnosticKind","l":"fromParseString(String)","u":"fromParseString(java.lang.String)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"fromPatternMatching(Pattern, Pattern, String, Long, String)","u":"fromPatternMatching(java.util.regex.Pattern,java.util.regex.Pattern,java.lang.String,java.lang.Long,java.lang.String)"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"fromSecondToMinute(int)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"fromTree(ExpressionTree)","u":"fromTree(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"fromTypeTreeCache"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"fromVariableTree(VariableTree)","u":"fromVariableTree(com.sun.source.tree.VariableTree)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"fullMessageOf(String, String)","u":"fullMessageOf(java.lang.String,java.lang.String)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FunctionalInterfaceNode","l":"FunctionalInterfaceNode(LambdaExpressionTree)","u":"%3Cinit%3E(com.sun.source.tree.LambdaExpressionTree)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FunctionalInterfaceNode","l":"FunctionalInterfaceNode(MemberReferenceTree)","u":"%3Cinit%3E(com.sun.source.tree.MemberReferenceTree)"},{"p":"org.checkerframework.javacutil","c":"SwitchExpressionScanner.FunctionalSwitchExpressionScanner","l":"FunctionalSwitchExpressionScanner(BiFunction<ExpressionTree, P1, R1>, BiFunction<R1, R1, R1>)","u":"%3Cinit%3E(java.util.function.BiFunction,java.util.function.BiFunction)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"g"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"g"},{"p":"org.checkerframework.checker.formatter.qual","c":"ConversionCategory","l":"GENERAL"},{"p":"org.checkerframework.checker.i18nformatter.qual","c":"I18nConversionCategory","l":"GENERAL"},{"p":"org.checkerframework.common.util.debug","c":"TypeOutputtingChecker.GeneralAnnotatedTypeFactory","l":"GeneralAnnotatedTypeFactory(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"generated"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizeLauncher","l":"generateDOTofCFG(String, String, String, String, boolean, boolean, Analysis<V, S, T>)","u":"generateDOTofCFG(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizeLauncher","l":"generateStringOfCFG(String, String, String, boolean, Analysis<V, S, T>)","u":"generateStringOfCFG(java.lang.String,java.lang.String,java.lang.String,boolean,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"GenericAnnotatedTypeFactory(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"GenericAnnotatedTypeFactory(BaseTypeChecker, boolean)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,boolean)"},{"p":"org.checkerframework.framework.type","c":"StructuralEqualityVisitHistory","l":"get(AnnotatedTypeMirror, AnnotatedTypeMirror, AnnotationMirror)","u":"get(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorMap","l":"get(Object)","u":"get(java.lang.Object)"},{"p":"org.checkerframework.checker.nullness.util","c":"Opt","l":"get(T)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory","l":"getAccumulatedValues(AnnotationMirror)","u":"getAccumulatedValues(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.test","c":"TypecheckResult","l":"getActualDiagnostics()"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"AutoValueSupport","l":"getAllAbstractMethods(TypeElement)","u":"getAllAbstractMethods(javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"getAllBlocks()"},{"p":"org.checkerframework.checker.initialization","c":"InitializationChecker","l":"getAllFields(ClassTree)","u":"getAllFields(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"getAllFieldsIn(TypeElement, Elements)","u":"getAllFieldsIn(javax.lang.model.element.TypeElement,javax.lang.model.util.Elements)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"getAllMethodsIn(TypeElement, Elements)","u":"getAllMethodsIn(javax.lang.model.element.TypeElement,javax.lang.model.util.Elements)"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"getAllNodes()"},{"p":"org.checkerframework.taglet","c":"ManualTaglet","l":"getAllowedLocations()"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"getAllSupertypes(TypeElement, ProcessingEnvironment)","u":"getAllSupertypes(javax.lang.model.element.TypeElement,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"getAllTypeElementsIn(TypeElement)","u":"getAllTypeElementsIn(javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedUnionType","l":"getAlternatives()"},{"p":"org.checkerframework.checker.initialization","c":"InitializationStore","l":"getAnalysis()"},{"p":"org.checkerframework.checker.guieffect","c":"Effect","l":"getAnnot()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getAnnotatedNullType(Set<? extends AnnotationMirror>)","u":"getAnnotatedNullType(java.util.Set)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getAnnotatedType(Class<?>)","u":"getAnnotatedType(java.lang.Class)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getAnnotatedType(ClassTree)","u":"getAnnotatedType(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getAnnotatedType(Element)","u":"getAnnotatedType(javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getAnnotatedType(ExecutableElement)","u":"getAnnotatedType(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getAnnotatedType(MethodTree)","u":"getAnnotatedType(com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getAnnotatedType(NewArrayTree)","u":"getAnnotatedType(com.sun.source.tree.NewArrayTree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getAnnotatedType(NewClassTree)","u":"getAnnotatedType(com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"getAnnotatedType(Tree)","u":"getAnnotatedType(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getAnnotatedType(Tree)","u":"getAnnotatedType(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getAnnotatedType(TypeElement)","u":"getAnnotatedType(javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getAnnotatedTypeFormatter()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getAnnotatedTypeFromTypeTree(Tree)","u":"getAnnotatedTypeFromTypeTree(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenAnnotatedTypeFactory","l":"getAnnotatedTypeLhs(Tree)","u":"getAnnotatedTypeLhs(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"getAnnotatedTypeLhs(Tree)","u":"getAnnotatedTypeLhs(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.signedness","c":"SignednessAnnotatedTypeFactory","l":"getAnnotatedTypeLhs(Tree)","u":"getAnnotatedTypeLhs(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getAnnotatedTypeLhs(Tree)","u":"getAnnotatedTypeLhs(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getAnnotatedTypeLhsNoTypeVarDefault(Tree)","u":"getAnnotatedTypeLhsNoTypeVarDefault(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileElementTypes","l":"getAnnotatedTypeMirror(Element)","u":"getAnnotatedTypeMirror(javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"getAnnotatedTypeMirrorOfParameter(AnnotatedTypeMirror.AnnotatedExecutableType, int)","u":"getAnnotatedTypeMirrorOfParameter(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,int)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getAnnotatedTypeRhsUnaryAssign(UnaryTree)","u":"getAnnotatedTypeRhsUnaryAssign(com.sun.source.tree.UnaryTree)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"getAnnotatedTypes(AnnotatedTypeFactory, List<AnnotatedTypeMirror>, List<? extends ExpressionTree>)","u":"getAnnotatedTypes(org.checkerframework.framework.type.AnnotatedTypeFactory,java.util.List,java.util.List)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getAnnotatedTypeVarargsArray(Tree)","u":"getAnnotatedTypeVarargsArray(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"getAnnotation(Class<? extends Annotation>)","u":"getAnnotation(java.lang.Class)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"getAnnotation(String)","u":"getAnnotation(java.lang.String)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getAnnotationByClass(Collection<? extends AnnotationMirror>, Class<? extends Annotation>)","u":"getAnnotationByClass(java.util.Collection,java.lang.Class)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getAnnotationByClass(Collection<? extends AnnotationMirror>, Class<? extends Annotation>)","u":"getAnnotationByClass(java.util.Collection,java.lang.Class)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getAnnotationByName(Collection<? extends AnnotationMirror>, String)","u":"getAnnotationByName(java.util.Collection,java.lang.String)"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy.DefaultQualifierKind","l":"getAnnotationClass()"},{"p":"org.checkerframework.framework.util","c":"QualifierKind","l":"getAnnotationClass()"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"getAnnotationElt()"},{"p":"org.checkerframework.framework.ajava","c":"AnnotationFileStore","l":"getAnnotationFileForType(String)","u":"getAnnotationFileForType(java.lang.String)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getAnnotationFormatter()"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"getAnnotationForRemainder(IntegerRemainderNode, TransferInput<CFValue, CFStore>)","u":"getAnnotationForRemainder(org.checkerframework.dataflow.cfg.node.IntegerRemainderNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.type","c":"QualifierUpperBounds","l":"getAnnotationFromElement(Element)","u":"getAnnotationFromElement(javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getAnnotationFromJavaExpression(JavaExpression, Tree, Class<? extends Annotation>)","u":"getAnnotationFromJavaExpression(org.checkerframework.dataflow.expression.JavaExpression,com.sun.source.tree.Tree,java.lang.Class)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getAnnotationFromJavaExpressionString(String, Tree, TreePath, Class<? extends Annotation>)","u":"getAnnotationFromJavaExpressionString(java.lang.String,com.sun.source.tree.Tree,com.sun.source.util.TreePath,java.lang.Class)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"getAnnotationInHierarchy(AnnotationMirror)","u":"getAnnotationInHierarchy(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getAnnotationMirror(Tree, Class<? extends Annotation>)","u":"getAnnotationMirror(com.sun.source.tree.Tree,java.lang.Class)"},{"p":"org.checkerframework.javacutil","c":"AnnotationProvider","l":"getAnnotationMirror(Tree, Class<? extends Annotation>)","u":"getAnnotationMirror(com.sun.source.tree.Tree,java.lang.Class)"},{"p":"org.checkerframework.javacutil","c":"BasicAnnotationProvider","l":"getAnnotationMirror(Tree, Class<? extends Annotation>)","u":"getAnnotationMirror(com.sun.source.tree.Tree,java.lang.Class)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getAnnotationMirrorFromJavaExpressionString(String, Tree, TreePath)","u":"getAnnotationMirrorFromJavaExpressionString(java.lang.String,com.sun.source.tree.Tree,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getAnnotationOrTypeDeclarationBound(TypeMirror, Set<? extends AnnotationMirror>)","u":"getAnnotationOrTypeDeclarationBound(javax.lang.model.type.TypeMirror,java.util.Set)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"getAnnotationProvider()"},{"p":"org.checkerframework.common.util.count","c":"AnnotationStatistics","l":"getAnnotationProvider()"},{"p":"org.checkerframework.common.util.count","c":"JavaCodeStatistics","l":"getAnnotationProvider()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getAnnotationProvider()"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue","l":"getAnnotations()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"getAnnotations()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"getAnnotationsField()"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileParser.RecordComponentStub","l":"getAnnotationsForTarget(ElementKind)","u":"getAnnotationsForTarget(javax.lang.model.element.ElementKind)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getAnnotationsFromJavaExpression(JavaExpression, Tree)","u":"getAnnotationsFromJavaExpression(org.checkerframework.dataflow.expression.JavaExpression,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.ajava","c":"AnnotationEqualityVisitor","l":"getAnnotationsMatch()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getAnnotationWithMetaAnnotation(Element, Class<? extends Annotation>)","u":"getAnnotationWithMetaAnnotation(javax.lang.model.element.Element,java.lang.Class)"},{"p":"org.checkerframework.framework.source","c":"DiagMessage","l":"getArgs()"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil.FormatCall","l":"getArgTypes()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodInvocationNode","l":"getArgument(int)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ObjectCreationNode","l":"getArgument(int)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodInvocationNode","l":"getArguments()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ObjectCreationNode","l":"getArguments()"},{"p":"org.checkerframework.dataflow.expression","c":"MethodCall","l":"getArguments()"},{"p":"org.checkerframework.framework.util.typeinference","c":"TypeArgInferenceUtil","l":"getArgumentTypes(ExpressionTree, AnnotatedTypeFactory)","u":"getArgumentTypes(com.sun.source.tree.ExpressionTree,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayAccessNode","l":"getArray()"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayAccess","l":"getArray()"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"getArrayDepth(AnnotatedTypeMirror.AnnotatedArrayType)","u":"getArrayDepth(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"getArrayDepth(TypeMirror)","u":"getArrayDepth(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayAccessNode","l":"getArrayExpression()"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getArrayLength(AnnotationMirror)","u":"getArrayLength(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getArrayLenRangeFromValue(AnnotationMirror)","u":"getArrayLenRangeFromValue(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getArrayLenRangeToValue(AnnotationMirror)","u":"getArrayLenRangeToValue(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"getAssertionsEnabledVariable()"},{"p":"org.checkerframework.javacutil","c":"TreePathUtil","l":"getAssignmentContext(TreePath)","u":"getAssignmentContext(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"getBinaryName(TypeElement)","u":"getBinaryName(javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"InstanceOfNode","l":"getBindingVariable()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseThree.PredecessorHolder","l":"getBlock()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ExtendedNode","l":"getBlock()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"Node","l":"getBlock()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getBooleanOption(String)","u":"getBooleanOption(java.lang.String)"},{"p":"org.checkerframework.framework.util","c":"OptionConfiguration","l":"getBooleanOption(String)","u":"getBooleanOption(java.lang.String)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getBooleanOption(String, boolean)","u":"getBooleanOption(java.lang.String,boolean)"},{"p":"org.checkerframework.framework.util","c":"OptionConfiguration","l":"getBooleanOption(String, boolean)","u":"getBooleanOption(java.lang.String,boolean)"},{"p":"org.checkerframework.javacutil","c":"SystemUtil","l":"getBooleanSystemProperty(String)","u":"getBooleanSystemProperty(java.lang.String)"},{"p":"org.checkerframework.javacutil","c":"SystemUtil","l":"getBooleanSystemProperty(String, boolean)","u":"getBooleanSystemProperty(java.lang.String,boolean)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getBooleanValue(AnnotationMirror)","u":"getBooleanValue(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getBooleanValues(AnnotationMirror)","u":"getBooleanValues(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy.DefaultQualifierKind","l":"getBottom()"},{"p":"org.checkerframework.framework.util","c":"QualifierKind","l":"getBottom()"},{"p":"org.checkerframework.framework.type","c":"ElementQualifierHierarchy","l":"getBottomAnnotation(AnnotationMirror)","u":"getBottomAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"NoElementQualifierHierarchy","l":"getBottomAnnotation(AnnotationMirror)","u":"getBottomAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"getBottomAnnotation(AnnotationMirror)","u":"getBottomAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"ElementQualifierHierarchy","l":"getBottomAnnotations()"},{"p":"org.checkerframework.framework.type","c":"NoElementQualifierHierarchy","l":"getBottomAnnotations()"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"getBottomAnnotations()"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy","l":"getBottoms()"},{"p":"org.checkerframework.framework.util","c":"QualifierKindHierarchy","l":"getBottoms()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedTypeVariable","l":"getBoundFields()"},{"p":"org.checkerframework.framework.type","c":"QualifierUpperBounds","l":"getBoundQualifiers(TypeMirror)","u":"getBoundQualifiers(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedIntersectionType","l":"getBounds()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedTypeVariable","l":"getBounds()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getBoxedType(AnnotatedTypeMirror.AnnotatedPrimitiveType)","u":"getBoxedType(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType)"},{"p":"org.checkerframework.framework.type","c":"AnnotationClassLoader","l":"getBundledAnnotationClasses()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getBundledTypeQualifiers(Class<? extends Annotation>...)","u":"getBundledTypeQualifiers(java.lang.Class...)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getCacheSize()"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"getCapturedWildcard(TypeVariable)","u":"getCapturedWildcard(javax.lang.model.type.TypeVariable)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"CaseNode","l":"getCaseOperands()"},{"p":"org.checkerframework.dataflow.cfg","c":"CFGProcessor.CFGProcessResult","l":"getCFG()"},{"p":"org.checkerframework.dataflow.cfg","c":"CFGProcessor","l":"getCFGProcessResult()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getCFGVisualizer()"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getCharValues(AnnotationMirror)","u":"getCharValues(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getChecker()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getCheckerNames()"},{"p":"org.checkerframework.framework.test","c":"PerDirectorySuite","l":"getChildren()"},{"p":"org.checkerframework.framework.test","c":"PerFileSuite","l":"getChildren()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ObjectCreationNode","l":"getClassBody()"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"getClassFromType(TypeMirror)","u":"getClassFromType(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.javacutil","c":"InternalUtils","l":"getClassLoaderForClass(Class<? extends Object>)","u":"getClassLoaderForClass(java.lang.Class)"},{"p":"org.checkerframework.common.reflection","c":"ClassValAnnotatedTypeFactory","l":"getClassNamesFromAnnotation(AnnotationMirror)","u":"getClassNamesFromAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGLambda","l":"getClassTree()"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGMethod","l":"getClassTree()"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGStatement","l":"getClassTree()"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGLambda","l":"getCode()"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGMethod","l":"getCode()"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGStatement","l":"getCode()"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST","l":"getCode()"},{"p":"org.checkerframework.framework.test","c":"TypecheckResult","l":"getCompilationResult()"},{"p":"org.checkerframework.javacutil","c":"AbstractTypeProcessor","l":"getCompilerLog()"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileParser.RecordStub","l":"getComponentsInCanonicalConstructor()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedArrayType","l":"getComponentType()"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"getComputedEffectAtCallsite(MethodInvocationTree, AnnotatedTypeMirror.AnnotatedDeclaredType, ExecutableElement)","u":"getComputedEffectAtCallsite(com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssertionErrorNode","l":"getCondition()"},{"p":"org.checkerframework.framework.util","c":"ContractsFromMethod","l":"getConditionalPostconditions(ExecutableElement)","u":"getConditionalPostconditions(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TernaryExpressionNode","l":"getConditionOperand()"},{"p":"org.checkerframework.framework.test","c":"TypecheckResult","l":"getConfiguration()"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"ConstraintMap","l":"getConstraints(TypeVariable)","u":"getConstraints(javax.lang.model.type.TypeVariable)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ObjectCreationNode","l":"getConstructor()"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"getContainingClass(Tree)","u":"getContainingClass(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"getContainingClass(Tree)","u":"getContainingClass(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"getContainingMethod(Tree)","u":"getContainingMethod(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"getContainingMethod(Tree)","u":"getContainingMethod(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getContractExpressions(AnnotationMirror)","u":"getContractExpressions(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getContractExpressions(Contract.Kind, AnnotationMirror)","u":"getContractExpressions(org.checkerframework.framework.util.Contract.Kind,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getContractListValues(AnnotationMirror)","u":"getContractListValues(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.util","c":"ContractsFromMethod","l":"getContracts(ExecutableElement)","u":"getContracts(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.common.initializedfields","c":"InitializedFieldsAnnotatedTypeFactory","l":"getContractsFromMethod()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getContractsFromMethod()"},{"p":"org.checkerframework.checker.mustcall","c":"CreatesMustCallForToJavaExpression","l":"getCreatesMustCallForExpressionsAtInvocation(MethodInvocationNode, GenericAnnotatedTypeFactory<?, ?, ?, ?>, CreatesMustCallForElementSupplier)","u":"getCreatesMustCallForExpressionsAtInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.framework.type.GenericAnnotatedTypeFactory,org.checkerframework.checker.mustcall.CreatesMustCallForElementSupplier)"},{"p":"org.checkerframework.checker.mustcall","c":"CreatesMustCallForToJavaExpression","l":"getCreatesMustCallForExpressionsAtMethodDeclaration(MethodTree, GenericAnnotatedTypeFactory<?, ?, ?, ?>, CreatesMustCallForElementSupplier)","u":"getCreatesMustCallForExpressionsAtMethodDeclaration(com.sun.source.tree.MethodTree,org.checkerframework.framework.type.GenericAnnotatedTypeFactory,org.checkerframework.checker.mustcall.CreatesMustCallForElementSupplier)"},{"p":"org.checkerframework.checker.mustcall","c":"CreatesMustCallForElementSupplier","l":"getCreatesMustCallForListValueElement()"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"getCreatesMustCallForListValueElement()"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakAnnotatedTypeFactory","l":"getCreatesMustCallForListValueElement()"},{"p":"org.checkerframework.checker.mustcall","c":"CreatesMustCallForElementSupplier","l":"getCreatesMustCallForValueElement()"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"getCreatesMustCallForValueElement()"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakAnnotatedTypeFactory","l":"getCreatesMustCallForValueElement()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getCurrentClassTree(Tree)","u":"getCurrentClassTree(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getCurrentMethodReceiver(Tree)","u":"getCurrentMethodReceiver(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"getCurrentPath()"},{"p":"org.checkerframework.framework.util","c":"JavaParserUtil","l":"getCurrentSourceVersion(ProcessingEnvironment)","u":"getCurrentSourceVersion(javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"getCurrentTree()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getDeclAnnotation(Element, Class<? extends Annotation>)","u":"getDeclAnnotation(javax.lang.model.element.Element,java.lang.Class)"},{"p":"org.checkerframework.javacutil","c":"AnnotationProvider","l":"getDeclAnnotation(Element, Class<? extends Annotation>)","u":"getDeclAnnotation(javax.lang.model.element.Element,java.lang.Class)"},{"p":"org.checkerframework.javacutil","c":"BasicAnnotationProvider","l":"getDeclAnnotation(Element, Class<? extends Annotation>)","u":"getDeclAnnotation(javax.lang.model.element.Element,java.lang.Class)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getDeclAnnotationNoAliases(Element, Class<? extends Annotation>)","u":"getDeclAnnotationNoAliases(javax.lang.model.element.Element,java.lang.Class)"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileElementTypes","l":"getDeclAnnotations(Element)","u":"getDeclAnnotations(javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getDeclAnnotations(Element)","u":"getDeclAnnotations(javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getDeclAnnotationWithMetaAnnotation(Element, Class<? extends Annotation>)","u":"getDeclAnnotationWithMetaAnnotation(javax.lang.model.element.Element,java.lang.Class)"},{"p":"org.checkerframework.javacutil.trees","c":"DetachedVarSymbol","l":"getDeclaration()"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"getDeclaredClasses()"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"getDeclaredEffect(ExecutableElement)","u":"getDeclaredEffect(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"getDeclaredLambdas()"},{"p":"org.checkerframework.framework.type.typeannotator","c":"DefaultQualifierForUseTypeAnnotator","l":"getDefaultAnnosForUses(Element)","u":"getDefaultAnnosForUses(javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getDefaultAnnotations(Tree, AnnotatedTypeMirror)","u":"getDefaultAnnotations(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"getDefaultClassPath()"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"getDefaultConfigurationBuilder(String, File, String, Iterable<File>, Iterable<String>, List<String>, boolean)","u":"getDefaultConfigurationBuilder(java.lang.String,java.io.File,java.lang.String,java.lang.Iterable,java.lang.Iterable,java.util.List,boolean)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getDefaultForTypeAnnotator()"},{"p":"org.checkerframework.framework.type.typeannotator","c":"DefaultQualifierForUseTypeAnnotator","l":"getDefaultQualifierForUses(Element)","u":"getDefaultQualifierForUses(javax.lang.model.element.Element)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"getDefaultTypeDeclarationBounds()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getDefaultTypeDeclarationBounds()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"getDefaultValueAnnotatedType(TypeMirror)","u":"getDefaultValueAnnotatedType(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getDefaultValueAnnotatedType(TypeMirror)","u":"getDefaultValueAnnotatedType(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"getDefaultValueTree(TypeMirror, ProcessingEnvironment)","u":"getDefaultValueTree(javax.lang.model.type.TypeMirror,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getDependentTypesHelper()"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"getDepthFirstOrderedBlocks()"},{"p":"org.checkerframework.checker.regex.util","c":"RegexUtil.CheckedPatternSyntaxException","l":"getDescription()"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileResource","l":"getDescription()"},{"p":"org.checkerframework.framework.stub","c":"FileAnnotationFileResource","l":"getDescription()"},{"p":"org.checkerframework.framework.stub","c":"JarEntryAnnotationFileResource","l":"getDescription()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssertionErrorNode","l":"getDetail()"},{"p":"org.checkerframework.framework.util","c":"JavaExpressionParseUtil.JavaExpressionParseException","l":"getDiagMessage()"},{"p":"org.checkerframework.framework.test","c":"ImmutableTestConfiguration","l":"getDiagnosticFiles()"},{"p":"org.checkerframework.framework.test","c":"TestConfiguration","l":"getDiagnosticFiles()"},{"p":"org.checkerframework.framework.test","c":"CompilationResult","l":"getDiagnostics()"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticLine","l":"getDiagnostics()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayCreationNode","l":"getDimension(int)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayCreationNode","l":"getDimensions()"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayCreation","l":"getDimensions()"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"getDirection()"},{"p":"org.checkerframework.dataflow.analysis","c":"Analysis","l":"getDirection()"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"getDirectSuperTypeElements(TypeElement, Elements)","u":"getDirectSuperTypeElements(javax.lang.model.element.TypeElement,javax.lang.model.util.Elements)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getDoesNotMatchRegexValues(AnnotationMirror)","u":"getDoesNotMatchRegexValues(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getDoubleValues(AnnotationMirror)","u":"getDoubleValues(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsAnnotatedTypeFactory","l":"getDummyAssignedTo(ExpressionTree)","u":"getDummyAssignedTo(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getDummyAssignedTo(ExpressionTree)","u":"getDummyAssignedTo(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getDummyAssignedTo(ExpressionTree)","u":"getDummyAssignedTo(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"getEffectiveAnnotation(Class<? extends Annotation>)","u":"getEffectiveAnnotation(java.lang.Class)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"getEffectiveAnnotationInHierarchy(AnnotationMirror)","u":"getEffectiveAnnotationInHierarchy(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"getEffectiveAnnotations()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ClassNameNode","l":"getElement()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FieldAccessNode","l":"getElement()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LocalVariableNode","l":"getElement()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"PackageNameNode","l":"getElement()"},{"p":"org.checkerframework.dataflow.expression","c":"FormalParameter","l":"getElement()"},{"p":"org.checkerframework.dataflow.expression","c":"LocalVariable","l":"getElement()"},{"p":"org.checkerframework.dataflow.expression","c":"MethodCall","l":"getElement()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedExecutableType","l":"getElement()"},{"p":"org.checkerframework.framework.util.element","c":"ClassTypeParamApplier","l":"getElementIndex()"},{"p":"org.checkerframework.framework.util.element","c":"MethodTypeParamApplier","l":"getElementIndex()"},{"p":"org.checkerframework.framework.util.element","c":"ParamApplier","l":"getElementIndex()"},{"p":"org.checkerframework.framework.util.element","c":"SuperTypeApplier","l":"getElementIndex()"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getElementKindsForElementType(ElementType)","u":"getElementKindsForElementType(java.lang.annotation.ElementType)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getElementKindsForTarget(Target)","u":"getElementKindsForTarget(java.lang.annotation.Target)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getElementUtils()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getElementUtils()"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getElementValue(AnnotationMirror, CharSequence, Class<T>, boolean)","u":"getElementValue(javax.lang.model.element.AnnotationMirror,java.lang.CharSequence,java.lang.Class,boolean)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getElementValue(AnnotationMirror, ExecutableElement, Class<T>)","u":"getElementValue(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.ExecutableElement,java.lang.Class)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getElementValue(AnnotationMirror, ExecutableElement, Class<T>, T)","u":"getElementValue(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.ExecutableElement,java.lang.Class,T)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getElementValueArray(AnnotationMirror, CharSequence, Class<T>, boolean)","u":"getElementValueArray(javax.lang.model.element.AnnotationMirror,java.lang.CharSequence,java.lang.Class,boolean)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getElementValueArray(AnnotationMirror, ExecutableElement, Class<T>)","u":"getElementValueArray(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.ExecutableElement,java.lang.Class)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getElementValueArray(AnnotationMirror, ExecutableElement, Class<T>, List<T>)","u":"getElementValueArray(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.ExecutableElement,java.lang.Class,java.util.List)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getElementValueArrayOrNull(AnnotationMirror, CharSequence, Class<T>, boolean)","u":"getElementValueArrayOrNull(javax.lang.model.element.AnnotationMirror,java.lang.CharSequence,java.lang.Class,boolean)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getElementValueBoolean(AnnotationMirror, ExecutableElement, boolean)","u":"getElementValueBoolean(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.ExecutableElement,boolean)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getElementValueClassName(AnnotationMirror, CharSequence, boolean)","u":"getElementValueClassName(javax.lang.model.element.AnnotationMirror,java.lang.CharSequence,boolean)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getElementValueClassName(AnnotationMirror, ExecutableElement)","u":"getElementValueClassName(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getElementValueClassNames(AnnotationMirror, CharSequence, boolean)","u":"getElementValueClassNames(javax.lang.model.element.AnnotationMirror,java.lang.CharSequence,boolean)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getElementValueClassNames(AnnotationMirror, ExecutableElement)","u":"getElementValueClassNames(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getElementValueEnum(AnnotationMirror, CharSequence, Class<T>, boolean)","u":"getElementValueEnum(javax.lang.model.element.AnnotationMirror,java.lang.CharSequence,java.lang.Class,boolean)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getElementValueEnum(AnnotationMirror, ExecutableElement, Class<T>)","u":"getElementValueEnum(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.ExecutableElement,java.lang.Class)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getElementValueEnum(AnnotationMirror, ExecutableElement, Class<T>, T)","u":"getElementValueEnum(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.ExecutableElement,java.lang.Class,T)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getElementValueEnumArray(AnnotationMirror, CharSequence, Class<T>, boolean)","u":"getElementValueEnumArray(javax.lang.model.element.AnnotationMirror,java.lang.CharSequence,java.lang.Class,boolean)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getElementValueEnumArray(AnnotationMirror, ExecutableElement, Class<T>)","u":"getElementValueEnumArray(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.ExecutableElement,java.lang.Class)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getElementValueEnumArray(AnnotationMirror, ExecutableElement, Class<T>, T[])","u":"getElementValueEnumArray(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.ExecutableElement,java.lang.Class,T[])"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getElementValueInt(AnnotationMirror, ExecutableElement)","u":"getElementValueInt(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getElementValueInt(AnnotationMirror, ExecutableElement, int)","u":"getElementValueInt(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.ExecutableElement,int)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getElementValueLong(AnnotationMirror, ExecutableElement, long)","u":"getElementValueLong(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.ExecutableElement,long)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getElementValueOrNull(AnnotationMirror, CharSequence, Class<T>, boolean)","u":"getElementValueOrNull(javax.lang.model.element.AnnotationMirror,java.lang.CharSequence,java.lang.Class,boolean)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getElementValuesWithDefaults(AnnotationMirror)","u":"getElementValuesWithDefaults(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ConditionalBlock","l":"getElseFlowRule()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ConditionalBlockImpl","l":"getElseFlowRule()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ConditionalJump","l":"getElseLabel()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TernaryExpressionNode","l":"getElseOperand()"},{"p":"org.checkerframework.dataflow.analysis","c":"ConditionalTransferResult","l":"getElseStore()"},{"p":"org.checkerframework.dataflow.analysis","c":"RegularTransferResult","l":"getElseStore()"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferInput","l":"getElseStore()"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferResult","l":"getElseStore()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ConditionalBlock","l":"getElseSuccessor()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ConditionalBlockImpl","l":"getElseSuccessor()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getEmptyStore()"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"getEnclosingClassName(ExecutableElement)","u":"getEnclosingClassName(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"getEnclosingClassName(VariableElement)","u":"getEnclosingClassName(javax.lang.model.element.VariableElement)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getEnclosingClassOrMethod(Tree)","u":"getEnclosingClassOrMethod(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ObjectCreationNode","l":"getEnclosingExpression()"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGLambda","l":"getEnclosingMethod()"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGLambda","l":"getEnclosingMethodName()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedDeclaredType","l":"getEnclosingType()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getEnclosingType(TypeElement, Tree)","u":"getEnclosingType(javax.lang.model.element.TypeElement,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getEnsuresQualifierIfResult(Contract.Kind, AnnotationMirror)","u":"getEnsuresQualifierIfResult(org.checkerframework.framework.util.Contract.Kind,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"getEntryBlock()"},{"p":"org.checkerframework.dataflow.analysis","c":"BackwardAnalysis","l":"getEntryStore()"},{"p":"org.checkerframework.dataflow.analysis","c":"BackwardAnalysisImpl","l":"getEntryStore()"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"getEnumConstants(TypeElement)","u":"getEnumConstants(javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis","l":"getEnv()"},{"p":"org.checkerframework.javacutil","c":"Resolver","l":"getEnvForPath(TreePath)","u":"getEnvForPath(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedArrayType","l":"getErased()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedDeclaredType","l":"getErased()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedExecutableType","l":"getErased()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedTypeVariable","l":"getErased()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedWildcardType","l":"getErased()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"getErased()"},{"p":"org.checkerframework.dataflow.cfg","c":"CFGProcessor.CFGProcessResult","l":"getErrMsg()"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"getError()"},{"p":"org.checkerframework.framework.test","c":"TypecheckResult","l":"getErrorHeaders()"},{"p":"org.checkerframework.common.value","c":"ValueCheckerUtils","l":"getExactStringValue(Tree, ValueAnnotatedTypeFactory)","u":"getExactStringValue(com.sun.source.tree.Tree,org.checkerframework.common.value.ValueAnnotatedTypeFactory)"},{"p":"org.checkerframework.common.value","c":"ValueCheckerUtils","l":"getExactValue(Element, ValueAnnotatedTypeFactory)","u":"getExactValue(javax.lang.model.element.Element,org.checkerframework.common.value.ValueAnnotatedTypeFactory)"},{"p":"org.checkerframework.common.value","c":"ValueCheckerUtils","l":"getExactValue(Tree, ValueAnnotatedTypeFactory)","u":"getExactValue(com.sun.source.tree.Tree,org.checkerframework.common.value.ValueAnnotatedTypeFactory)"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"getExceptionalExitBlock()"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"getExceptionalExitStore()"},{"p":"org.checkerframework.dataflow.analysis","c":"Analysis","l":"getExceptionalExitStore()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getExceptionalExitStore(Tree)","u":"getExceptionalExitStore(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferResult","l":"getExceptionalStore(TypeMirror)","u":"getExceptionalStore(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferResult","l":"getExceptionalStores()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ExceptionBlock","l":"getExceptionalSuccessors()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ExceptionBlockImpl","l":"getExceptionalSuccessors()"},{"p":"org.checkerframework.checker.fenum","c":"FenumVisitor","l":"getExceptionParameterLowerBoundAnnotations()"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"getExceptionParameterLowerBoundAnnotations()"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"getExceptionParameterLowerBoundAnnotations()"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallVisitor","l":"getExceptionParameterLowerBoundAnnotations()"},{"p":"org.checkerframework.checker.signedness","c":"SignednessVisitor","l":"getExceptionParameterLowerBoundAnnotations()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"getExceptionParameterLowerBoundAnnotations()"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"getExecArguments()"},{"p":"org.checkerframework.checker.formatter.util","c":"FormatUtil.ExcessiveOrMissingFormatArgumentException","l":"getExpected()"},{"p":"org.checkerframework.checker.formatter.util","c":"FormatUtil.IllegalFormatConversionCategoryException","l":"getExpected()"},{"p":"org.checkerframework.framework.test","c":"TypecheckResult","l":"getExpectedDiagnostics()"},{"p":"org.checkerframework.framework.type.typeannotator","c":"DefaultQualifierForUseTypeAnnotator","l":"getExplicitAnnos(Element)","u":"getExplicitAnnos(javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"getExplicitAnnotations()"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getExplicitAnnotationsOnConstructorResult(MethodTree)","u":"getExplicitAnnotationsOnConstructorResult(com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"getExplicitAnnotationTrees(List<? extends AnnotationTree>, Tree)","u":"getExplicitAnnotationTrees(java.util.List,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getExplicitNewClassAnnos(NewClassTree)","u":"getExplicitNewClassAnnos(com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getExplicitNewClassAnnos(NewClassTree)","u":"getExplicitNewClassAnnos(com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getExplicitNewClassClassTypeArgs(NewClassTree)","u":"getExplicitNewClassClassTypeArgs(com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getExplicitNewClassClassTypeArgs(NewClassTree)","u":"getExplicitNewClassClassTypeArgs(com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssignmentNode","l":"getExpression()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SynchronizedNode","l":"getExpression()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ThrowNode","l":"getExpression()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getExpressionAndOffset(String)","u":"getExpressionAndOffset(java.lang.String)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getExpressionAndOffsetFromJavaExpressionString(String, TreePath)","u":"getExpressionAndOffsetFromJavaExpressionString(java.lang.String,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedWildcardType","l":"getExtendsBound()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedWildcardType","l":"getExtendsBoundField()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"getExtraStubFiles()"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileElementTypes","l":"getFakeOverride(Element, AnnotatedTypeMirror)","u":"getFakeOverride(javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ConditionalJump","l":"getFalseFlowRule()"},{"p":"org.checkerframework.dataflow.expression","c":"FieldAccess","l":"getField()"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"getField(String, String, ProcessingEnvironment)","u":"getField(java.lang.String,java.lang.String,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis","l":"getFieldInitialValues()"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"getFieldInvariantAnnotation()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"getFieldInvariantAnnotation()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getFieldInvariantAnnotationTree(List<? extends AnnotationTree>)","u":"getFieldInvariantAnnotationTree(java.util.List)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getFieldInvariantDeclarationAnnotations()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getFieldInvariantDeclarationAnnotations()"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getFieldInvariants(TypeElement)","u":"getFieldInvariants(javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getFieldInvariants(TypeElement)","u":"getFieldInvariants(javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FieldAccessNode","l":"getFieldName()"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"getFieldName(Tree)","u":"getFieldName(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.util","c":"FieldInvariants","l":"getFields()"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"getFieldValue(FieldAccess)","u":"getFieldValue(org.checkerframework.dataflow.expression.FieldAccess)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"getFieldValues()"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnostic","l":"getFilename()"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticLine","l":"getFilename()"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"getFinalLocalValues()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getFinalLocalValues()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getFirstNodeOfKindForTree(Tree, Class<T>)","u":"getFirstNodeOfKindForTree(com.sun.source.tree.Tree,java.lang.Class)"},{"p":"org.checkerframework.framework.test","c":"ImmutableTestConfiguration","l":"getFlatOptions()"},{"p":"org.checkerframework.framework.test","c":"TestConfiguration","l":"getFlatOptions()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"SingleSuccessorBlock","l":"getFlowRule()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"SingleSuccessorBlockImpl","l":"getFlowRule()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getFnInterfaceFromTree(Tree)","u":"getFnInterfaceFromTree(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"getFormalParameters(ExecutableElement)","u":"getFormalParameters(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil.FormatCall","l":"getFormatCategories()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil.I18nFormatCall","l":"getFormatCategories()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil.I18nFormatCall","l":"getFormatType()"},{"p":"org.checkerframework.checker.formatter.util","c":"FormatUtil.ExcessiveOrMissingFormatArgumentException","l":"getFound()"},{"p":"org.checkerframework.checker.formatter.util","c":"FormatUtil.IllegalFormatConversionCategoryException","l":"getFound()"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getFromValueFromIntRange(AnnotatedTypeMirror)","u":"getFromValueFromIntRange(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util","c":"JavaParserUtil","l":"getFullyQualifiedName(TypeDeclaration<?>, CompilationUnit)","u":"getFullyQualifiedName(com.github.javaparser.ast.body.TypeDeclaration,com.github.javaparser.ast.CompilationUnit)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getFunctionTypeFromTree(LambdaExpressionTree)","u":"getFunctionTypeFromTree(com.sun.source.tree.LambdaExpressionTree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getFunctionTypeFromTree(MemberReferenceTree)","u":"getFunctionTypeFromTree(com.sun.source.tree.MemberReferenceTree)"},{"p":"org.checkerframework.checker.regex","c":"RegexAnnotatedTypeFactory","l":"getGroupCount(AnnotationMirror)","u":"getGroupCount(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.regex","c":"RegexAnnotatedTypeFactory","l":"getGroupCount(String)","u":"getGroupCount(java.lang.String)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"getHasFormatCallCategories(MethodInvocationNode)","u":"getHasFormatCallCategories(org.checkerframework.dataflow.cfg.node.MethodInvocationNode)"},{"p":"org.checkerframework.framework.type.typeannotator","c":"DefaultQualifierForUseTypeAnnotator","l":"getHierarchiesNoDefault(Element)","u":"getHierarchiesNoDefault(javax.lang.model.element.Element)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsChecker","l":"getImmediateSubcheckerClasses()"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanChecker","l":"getImmediateSubcheckerClasses()"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundChecker","l":"getImmediateSubcheckerClasses()"},{"p":"org.checkerframework.checker.index.searchindex","c":"SearchIndexChecker","l":"getImmediateSubcheckerClasses()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundChecker","l":"getImmediateSubcheckerClasses()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessChecker","l":"getImmediateSubcheckerClasses()"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakChecker","l":"getImmediateSubcheckerClasses()"},{"p":"org.checkerframework.checker.signedness","c":"SignednessChecker","l":"getImmediateSubcheckerClasses()"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationChecker","l":"getImmediateSubcheckerClasses()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"getImmediateSubcheckerClasses()"},{"p":"org.checkerframework.common.reflection","c":"ClassValChecker","l":"getImmediateSubcheckerClasses()"},{"p":"org.checkerframework.common.reflection","c":"MethodValChecker","l":"getImmediateSubcheckerClasses()"},{"p":"org.checkerframework.common.value","c":"ValueChecker","l":"getImmediateSubcheckerClasses()"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"getImplicitReceiver(Element)","u":"getImplicitReceiver(javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getImplicitReceiverType(ExpressionTree)","u":"getImplicitReceiverType(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.checker.regex.util","c":"RegexUtil.CheckedPatternSyntaxException","l":"getIndex()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayAccessNode","l":"getIndex()"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayAccess","l":"getIndex()"},{"p":"org.checkerframework.dataflow.expression","c":"FormalParameter","l":"getIndex()"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"getInferedEffectForLambdaExpression(LambdaExpressionTree)","u":"getInferedEffectForLambdaExpression(com.sun.source.tree.LambdaExpressionTree)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getInferredValueFor(Tree)","u":"getInferredValueFor(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"ConstantPropagationStore","l":"getInformation(Node)","u":"getInformation(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"getInitializationAnnotations()"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"getInitializedInvariantFields(Store, TreePath)","u":"getInitializedInvariantFields(Store,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayCreationNode","l":"getInitializer(int)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayCreationNode","l":"getInitializers()"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayCreation","l":"getInitializers()"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"getInnermostComponentType(ArrayType)","u":"getInnermostComponentType(javax.lang.model.type.ArrayType)"},{"p":"org.checkerframework.dataflow.analysis","c":"Analysis","l":"getInput(Block)","u":"getInput(org.checkerframework.dataflow.cfg.block.Block)"},{"p":"org.checkerframework.dataflow.analysis","c":"BackwardAnalysisImpl","l":"getInput(Block)","u":"getInput(org.checkerframework.dataflow.cfg.block.Block)"},{"p":"org.checkerframework.dataflow.analysis","c":"ForwardAnalysisImpl","l":"getInput(Block)","u":"getInput(org.checkerframework.dataflow.cfg.block.Block)"},{"p":"org.checkerframework.dataflow.analysis","c":"ForwardAnalysisImpl","l":"getInputBefore(Block)","u":"getInputBefore(org.checkerframework.dataflow.cfg.block.Block)"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileResource","l":"getInputStream()"},{"p":"org.checkerframework.framework.stub","c":"FileAnnotationFileResource","l":"getInputStream()"},{"p":"org.checkerframework.framework.stub","c":"JarEntryAnnotationFileResource","l":"getInputStream()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"Node","l":"getInSource()"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"getInt()"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"getIntOffsetEquation(Set<OffsetEquation>)","u":"getIntOffsetEquation(java.util.Set)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getIntRangeFromValue(AnnotationMirror)","u":"getIntRangeFromValue(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getIntRangeFromValue(AnnotationMirror, long)","u":"getIntRangeFromValue(javax.lang.model.element.AnnotationMirror,long)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getIntRangeToValue(AnnotationMirror)","u":"getIntRangeToValue(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getIntRangeToValue(AnnotationMirror, long)","u":"getIntRangeToValue(javax.lang.model.element.AnnotationMirror,long)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getIntValues(AnnotationMirror)","u":"getIntValues(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"getInvalidConstructorReturnTypeAnnotations()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil.I18nFormatCall","l":"getInvalidError()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil.I18nFormatCall","l":"getInvalidInvocationType()"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil.FormatCall","l":"getInvocationType()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil.I18nFormatCall","l":"getInvocationType()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SynchronizedNode","l":"getIsStartOfBlock()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getIterableElementType(ExpressionTree)","u":"getIterableElementType(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getIterableElementType(ExpressionTree, AnnotatedTypeMirror)","u":"getIterableElementType(com.sun.source.tree.ExpressionTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodInvocationNode","l":"getIterableExpression()"},{"p":"org.checkerframework.javacutil","c":"InternalUtils","l":"getJavacContext(ProcessingEnvironment)","u":"getJavacContext(javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.framework.test","c":"CompilationResult","l":"getJavacOutput()"},{"p":"org.checkerframework.framework.test","c":"CompilationResult","l":"getJavaFileObjects()"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"getJavaFilesAsArgumentList(File...)","u":"getJavaFilesAsArgumentList(java.io.File...)"},{"p":"org.checkerframework.javacutil","c":"SystemUtil","l":"getJreVersion()"},{"p":"org.checkerframework.checker.nullness","c":"KeyForValue","l":"getKeyForMaps()"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST","l":"getKind()"},{"p":"org.checkerframework.framework.source","c":"DiagMessage","l":"getKind()"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnostic","l":"getKind()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"getKind()"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"getKindRecordAsClass(Element)","u":"getKindRecordAsClass(javax.lang.model.element.Element)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"getKindRecordAsClass(Tree)","u":"getKindRecordAsClass(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker.PurityResult","l":"getKinds()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ExtendedNode","l":"getLabel()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"getLabel(TreePath)","u":"getLabel(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGLambda","l":"getLambdaTree()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"Block","l":"getLastNode()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ConditionalBlockImpl","l":"getLastNode()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ExceptionBlockImpl","l":"getLastNode()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"RegularBlockImpl","l":"getLastNode()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"SpecialBlockImpl","l":"getLastNode()"},{"p":"org.checkerframework.dataflow.expression","c":"BinaryOperation","l":"getLeft()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BinaryOperationNode","l":"getLeftOperand()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringConcatenateAssignmentNode","l":"getLeftOperand()"},{"p":"org.checkerframework.checker.index","c":"IndexUtil","l":"getLengthSequenceTree(Tree, IndexMethodIdentifier, ProcessingEnvironment)","u":"getLengthSequenceTree(com.sun.source.tree.Tree,org.checkerframework.checker.index.IndexMethodIdentifier,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.common.value","c":"ValueCheckerUtils","l":"getLengthsForStringValues(List<String>)","u":"getLengthsForStringValues(java.util.List)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundAnnotatedTypeFactory","l":"getLessThanAnnotatedTypeFactory()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"getLessThanAnnotatedTypeFactory()"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanAnnotatedTypeFactory","l":"getLessThanExpressions(AnnotationMirror)","u":"getLessThanExpressions(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanAnnotatedTypeFactory","l":"getLessThanExpressions(ExpressionTree)","u":"getLessThanExpressions(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnostic","l":"getLineNumber()"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticLine","l":"getLineNumber()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getLintOption(String)","u":"getLintOption(java.lang.String)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getLintOption(String, boolean)","u":"getLintOption(java.lang.String,boolean)"},{"p":"org.checkerframework.checker.propkey","c":"PropertyKeyAnnotatedTypeFactory","l":"getLookupKeys()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedTypeVariable","l":"getLowerBound()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeParameterBounds","l":"getLowerBound()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedTypeVariable","l":"getLowerBoundField()"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getMatchesRegexValues(AnnotationMirror)","u":"getMatchesRegexValues(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getMaxLenValue(AnnotationMirror)","u":"getMaxLenValue(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.value","c":"ValueCheckerUtils","l":"getMaxValue(Tree, ValueAnnotatedTypeFactory)","u":"getMaxValue(com.sun.source.tree.Tree,org.checkerframework.common.value.ValueAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.formatter.util","c":"FormatUtil.ExcessiveOrMissingFormatArgumentException","l":"getMessage()"},{"p":"org.checkerframework.checker.formatter.util","c":"FormatUtil.IllegalFormatConversionCategoryException","l":"getMessage()"},{"p":"org.checkerframework.checker.regex.util","c":"RegexUtil.CheckedPatternSyntaxException","l":"getMessage()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MarkerNode","l":"getMessage()"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnostic","l":"getMessage()"},{"p":"org.checkerframework.framework.util","c":"JavaExpressionParseUtil.JavaExpressionParseException","l":"getMessage()"},{"p":"org.checkerframework.framework.source","c":"DiagMessage","l":"getMessageKey()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getMessagesProperties()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodAccessNode","l":"getMethod()"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGLambda","l":"getMethod()"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGMethod","l":"getMethod()"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"getMethod(Class<?>, String, int, ProcessingEnvironment)","u":"getMethod(java.lang.Class,java.lang.String,int,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"getMethod(Class<?>, String, ProcessingEnvironment, String...)","u":"getMethod(java.lang.Class,java.lang.String,javax.annotation.processing.ProcessingEnvironment,java.lang.String...)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"getMethod(String, String, int, ProcessingEnvironment)","u":"getMethod(java.lang.String,java.lang.String,int,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"getMethod(String, String, ProcessingEnvironment, String...)","u":"getMethod(java.lang.String,java.lang.String,javax.annotation.processing.ProcessingEnvironment,java.lang.String...)"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGLambda","l":"getMethodName()"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGMethod","l":"getMethodName()"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"getMethodName(Tree)","u":"getMethodName(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"getMethodOrNull(String, String, int, ProcessingEnvironment)","u":"getMethodOrNull(java.lang.String,java.lang.String,int,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getMethodReturnType(MethodTree)","u":"getMethodReturnType(com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getMethodReturnType(MethodTree)","u":"getMethodReturnType(com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"getMethodReturnType(MethodTree, ReturnTree)","u":"getMethodReturnType(com.sun.source.tree.MethodTree,com.sun.source.tree.ReturnTree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getMethodReturnType(MethodTree, ReturnTree)","u":"getMethodReturnType(com.sun.source.tree.MethodTree,com.sun.source.tree.ReturnTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"getMethods(String, String, int, ProcessingEnvironment)","u":"getMethods(java.lang.String,java.lang.String,int,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getMinimumIntegralValue(AnnotatedTypeMirror)","u":"getMinimumIntegralValue(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.value","c":"ValueCheckerUtils","l":"getMinLen(Tree, ValueAnnotatedTypeFactory)","u":"getMinLen(com.sun.source.tree.Tree,org.checkerframework.common.value.ValueAnnotatedTypeFactory)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getMinLenFromString(String, Tree, TreePath)","u":"getMinLenFromString(java.lang.String,com.sun.source.tree.Tree,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.common.value","c":"ValueCheckerUtils","l":"getMinLenFromTree(Tree, ValueAnnotatedTypeFactory)","u":"getMinLenFromTree(com.sun.source.tree.Tree,org.checkerframework.common.value.ValueAnnotatedTypeFactory)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getMinLenValue(AnnotatedTypeMirror)","u":"getMinLenValue(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getMinLenValue(AnnotationMirror)","u":"getMinLenValue(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getMinLenValue(AnnotationMirrorSet)","u":"getMinLenValue(org.checkerframework.javacutil.AnnotationMirrorSet)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getMinLenValueValue(AnnotationMirror)","u":"getMinLenValueValue(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.value","c":"ValueCheckerUtils","l":"getMinValue(Tree, ValueAnnotatedTypeFactory)","u":"getMinValue(com.sun.source.tree.Tree,org.checkerframework.common.value.ValueAnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.ajava","c":"AnnotationEqualityVisitor","l":"getMismatchedNode1()"},{"p":"org.checkerframework.framework.ajava","c":"AnnotationEqualityVisitor","l":"getMismatchedNode2()"},{"p":"org.checkerframework.framework.test","c":"TypecheckResult","l":"getMissingDiagnostics()"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"getMustCallValueElement()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LocalVariableNode","l":"getName()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"VariableDeclarationNode","l":"getName()"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy.DefaultQualifierKind","l":"getName()"},{"p":"org.checkerframework.framework.util","c":"QualifierKind","l":"getName()"},{"p":"org.checkerframework.taglet","c":"ManualTaglet","l":"getName()"},{"p":"org.checkerframework.checker.signedness","c":"SignednessAnnotatedTypeFactory","l":"getNarrowedAnnotations(AnnotationMirrorSet, TypeKind, TypeKind)","u":"getNarrowedAnnotations(org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeKind,javax.lang.model.type.TypeKind)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getNarrowedAnnotations(AnnotationMirrorSet, TypeKind, TypeKind)","u":"getNarrowedAnnotations(org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeKind,javax.lang.model.type.TypeKind)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getNarrowedPrimitive(AnnotatedTypeMirror.AnnotatedPrimitiveType, TypeMirror)","u":"getNarrowedPrimitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"getNarrowedValue(TypeMirror, V)","u":"getNarrowedValue(javax.lang.model.type.TypeMirror,V)"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferInput","l":"getNode()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ExceptionBlock","l":"getNode()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ExceptionBlockImpl","l":"getNode()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ExtendedNode","l":"getNode()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"Block","l":"getNodes()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ConditionalBlockImpl","l":"getNodes()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ExceptionBlockImpl","l":"getNodes()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"RegularBlockImpl","l":"getNodes()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"SpecialBlockImpl","l":"getNodes()"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"getNodesCorrespondingToTree(Tree)","u":"getNodesCorrespondingToTree(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"getNodesForTree(Tree)","u":"getNodesForTree(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"getNodesForTree(Tree)","u":"getNodesForTree(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getNodesForTree(Tree)","u":"getNodesForTree(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer","l":"getNodeSimpleName(Node)","u":"getNodeSimpleName(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"getNodeValues()"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker.PurityResult","l":"getNotBothReasons()"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker.PurityResult","l":"getNotDetReasons()"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker.PurityResult","l":"getNotSEFreeReasons()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"getNullnessAnnotations()"},{"p":"org.checkerframework.common.value.util","c":"NumberMath","l":"getNumberMath(Number)","u":"getNumberMath(java.lang.Number)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"getObjectTypeMirror(ProcessingEnvironment)","u":"getObjectTypeMirror(javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"InstanceOfNode","l":"getOperand()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NarrowingConversionNode","l":"getOperand()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NullChkNode","l":"getOperand()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringConversionNode","l":"getOperand()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TypeCastNode","l":"getOperand()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"UnaryOperationNode","l":"getOperand()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"WideningConversionNode","l":"getOperand()"},{"p":"org.checkerframework.dataflow.expression","c":"UnaryOperation","l":"getOperand()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayAccessNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayCreationNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayTypeNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssertionErrorNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssignmentNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BinaryOperationNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BooleanLiteralNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"CaseNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"CharacterLiteralNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ClassDeclarationNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ClassNameNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"DoubleLiteralNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ExpressionStatementNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FieldAccessNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FloatLiteralNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FunctionalInterfaceNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"InstanceOfNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"IntegerLiteralNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LambdaResultExpressionNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LocalVariableNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LongLiteralNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MarkerNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodAccessNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodInvocationNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NarrowingConversionNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"Node","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NullChkNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NullLiteralNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ObjectCreationNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"PackageNameNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ParameterizedTypeNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"PrimitiveTypeNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ReturnNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ShortLiteralNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringConcatenateAssignmentNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringConversionNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringLiteralNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SuperNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SwitchExpressionNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SynchronizedNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TernaryExpressionNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ThisNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ThrowNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TypeCastNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"UnaryOperationNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ValueLiteralNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"VariableDeclarationNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"WideningConversionNode","l":"getOperands()"},{"p":"org.checkerframework.dataflow.expression","c":"BinaryOperation","l":"getOperationKind()"},{"p":"org.checkerframework.dataflow.expression","c":"UnaryOperation","l":"getOperationKind()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getOption(String)","u":"getOption(java.lang.String)"},{"p":"org.checkerframework.framework.util","c":"OptionConfiguration","l":"getOption(String)","u":"getOption(java.lang.String)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getOption(String, String)","u":"getOption(java.lang.String,java.lang.String)"},{"p":"org.checkerframework.framework.util","c":"OptionConfiguration","l":"getOption(String, String)","u":"getOption(java.lang.String,java.lang.String)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getOptionConfiguration()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"getOptions()"},{"p":"org.checkerframework.framework.source","c":"AggregateChecker","l":"getOptions()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getOptions()"},{"p":"org.checkerframework.framework.test","c":"ImmutableTestConfiguration","l":"getOptions()"},{"p":"org.checkerframework.framework.test","c":"SimpleOptionMap","l":"getOptions()"},{"p":"org.checkerframework.framework.test","c":"TestConfiguration","l":"getOptions()"},{"p":"org.checkerframework.framework.util","c":"OptionConfiguration","l":"getOptions()"},{"p":"org.checkerframework.framework.test","c":"SimpleOptionMap","l":"getOptionsAsList()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"getOptionsNoSubcheckers()"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticLine","l":"getOriginalLine()"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"getOutputDirFromProperty()"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"getOverriddenMethods(ExecutableElement, Types)","u":"getOverriddenMethods(javax.lang.model.element.ExecutableElement,javax.lang.model.util.Types)"},{"p":"org.checkerframework.framework.type","c":"ElementAnnotationApplier","l":"getParamAndLambdaTree(VariableElement, AnnotatedTypeFactory)","u":"getParamAndLambdaTree(javax.lang.model.element.VariableElement,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"getParametersAsLocalVariables(ExecutableElement)","u":"getParametersAsLocalVariables(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedExecutableType","l":"getParameterTypes()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil.I18nFormatCall","l":"getParamTypes()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ClassNameNode","l":"getParent()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"PackageNameNode","l":"getParent()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getParentChecker()"},{"p":"org.checkerframework.framework.util.element","c":"ParamApplier","l":"getParentMethod(Element)","u":"getParentMethod(javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.util","c":"TreePathCacher","l":"getPath(CompilationUnitTree, Tree)","u":"getPath(com.sun.source.tree.CompilationUnitTree,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getPath(Tree)","u":"getPath(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getPathToCompilationUnit()"},{"p":"org.checkerframework.checker.regex.util","c":"RegexUtil.CheckedPatternSyntaxException","l":"getPattern()"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy.DefaultQualifierKind","l":"getPolymorphic()"},{"p":"org.checkerframework.framework.util","c":"QualifierKind","l":"getPolymorphic()"},{"p":"org.checkerframework.framework.type","c":"ElementQualifierHierarchy","l":"getPolymorphicAnnotation(AnnotationMirror)","u":"getPolymorphicAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"NoElementQualifierHierarchy","l":"getPolymorphicAnnotation(AnnotationMirror)","u":"getPolymorphicAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"getPolymorphicAnnotation(AnnotationMirror)","u":"getPolymorphicAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.value","c":"ValueCheckerUtils","l":"getPossibleValues(AnnotatedTypeMirror, ValueAnnotatedTypeFactory)","u":"getPossibleValues(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.common.value.ValueAnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util","c":"ContractsFromMethod","l":"getPostconditions(ExecutableElement)","u":"getPostconditions(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"getPostfixBinaryTree(UnaryTree)","u":"getPostfixBinaryTree(com.sun.source.tree.UnaryTree)"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"getPostfixNodeLookup()"},{"p":"org.checkerframework.framework.util","c":"ContractsFromMethod","l":"getPreconditions(ExecutableElement)","u":"getPreconditions(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseThree","l":"getPredecessorHolder(BlockImpl, BlockImpl)","u":"getPredecessorHolder(org.checkerframework.dataflow.cfg.block.BlockImpl,org.checkerframework.dataflow.cfg.block.BlockImpl)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"Block","l":"getPredecessors()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"BlockImpl","l":"getPredecessors()"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsTools","l":"getPrefix(AnnotatedTypeMirror)","u":"getPrefix(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsTools","l":"getPrefix(AnnotationMirror)","u":"getPrefix(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"getPrimitiveConversionKind(PrimitiveType, PrimitiveType)","u":"getPrimitiveConversionKind(javax.lang.model.type.PrimitiveType,javax.lang.model.type.PrimitiveType)"},{"p":"org.checkerframework.javacutil","c":"TypeKindUtils","l":"getPrimitiveConversionKind(TypeKind, TypeKind)","u":"getPrimitiveConversionKind(javax.lang.model.type.TypeKind,javax.lang.model.type.TypeKind)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"getPrimitiveKind()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getProcessingEnv()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getProcessingEnvironment()"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer","l":"getProcessOrder(ControlFlowGraph)","u":"getProcessOrder(org.checkerframework.dataflow.cfg.ControlFlowGraph)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer","l":"getProcessOrderSimpleString(List<Integer>)","u":"getProcessOrderSimpleString(java.util.List)"},{"p":"org.checkerframework.framework.test","c":"ImmutableTestConfiguration","l":"getProcessors()"},{"p":"org.checkerframework.framework.test","c":"TestConfiguration","l":"getProcessors()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getProperties(Class<?>, String, boolean)","u":"getProperties(java.lang.Class,java.lang.String,boolean)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"getPseudoReceiver(TreePath, TypeMirror)","u":"getPseudoReceiver(com.sun.source.util.TreePath,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.dataflow.util","c":"PurityUtils","l":"getPurityKinds(AnnotationProvider, ExecutableElement)","u":"getPurityKinds(org.checkerframework.javacutil.AnnotationProvider,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.dataflow.util","c":"PurityUtils","l":"getPurityKinds(AnnotationProvider, MethodTree)","u":"getPurityKinds(org.checkerframework.javacutil.AnnotationProvider,com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"getQualifiedClassName(Element)","u":"getQualifiedClassName(javax.lang.model.element.Element)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"getQualifiedName(DeclaredType)","u":"getQualifiedName(javax.lang.model.type.DeclaredType)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"getQualifiedName(Element)","u":"getQualifiedName(javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getQualifierHierarchy()"},{"p":"org.checkerframework.framework.type","c":"ElementQualifierHierarchy","l":"getQualifierKind(AnnotationMirror)","u":"getQualifierKind(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"NoElementQualifierHierarchy","l":"getQualifierKind(AnnotationMirror)","u":"getQualifierKind(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"ElementQualifierHierarchy","l":"getQualifierKind(String)","u":"getQualifierKind(java.lang.String)"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy","l":"getQualifierKind(String)","u":"getQualifierKind(java.lang.String)"},{"p":"org.checkerframework.framework.util","c":"QualifierKindHierarchy","l":"getQualifierKind(String)","u":"getQualifierKind(java.lang.String)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getQualifierParameterHierarchies(AnnotatedTypeMirror)","u":"getQualifierParameterHierarchies(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getQualifierParameterHierarchies(Element)","u":"getQualifierParameterHierarchies(javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getQualifierPolymorphism()"},{"p":"org.checkerframework.framework.util","c":"FieldInvariants","l":"getQualifiersFor(CharSequence)","u":"getQualifiersFor(java.lang.CharSequence)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getQualifierUpperBounds()"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getRange(AnnotationMirror)","u":"getRange(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.value","c":"ValueCheckerUtils","l":"getRangeFromValues(List<? extends Number>)","u":"getRangeFromValues(java.util.List)"},{"p":"org.checkerframework.framework.util.element","c":"ClassTypeParamApplier","l":"getRawTypeAttributes()"},{"p":"org.checkerframework.framework.util.element","c":"MethodApplier","l":"getRawTypeAttributes()"},{"p":"org.checkerframework.framework.util.element","c":"MethodTypeParamApplier","l":"getRawTypeAttributes()"},{"p":"org.checkerframework.framework.util.element","c":"ParamApplier","l":"getRawTypeAttributes()"},{"p":"org.checkerframework.framework.util.element","c":"SuperTypeApplier","l":"getRawTypeAttributes()"},{"p":"org.checkerframework.framework.util.element","c":"TypeDeclarationApplier","l":"getRawTypeAttributes()"},{"p":"org.checkerframework.framework.util.element","c":"VariableApplier","l":"getRawTypeAttributes()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FieldAccessNode","l":"getReceiver()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LocalVariableNode","l":"getReceiver()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodAccessNode","l":"getReceiver()"},{"p":"org.checkerframework.dataflow.expression","c":"FieldAccess","l":"getReceiver()"},{"p":"org.checkerframework.dataflow.expression","c":"MethodCall","l":"getReceiver()"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"getReceiver(ExpressionTree)","u":"getReceiver(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"getReceiverTree(ExpressionTree)","u":"getReceiverTree(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedExecutableType","l":"getReceiverType()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getReceiverType(ExpressionTree)","u":"getReceiverType(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"getRecordComponents(TypeElement)","u":"getRecordComponents(javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"InstanceOfNode","l":"getRefType()"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"getRegularExitBlock()"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"getRegularExitStore()"},{"p":"org.checkerframework.dataflow.analysis","c":"Analysis","l":"getRegularExitStore()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getRegularExitStore(Tree)","u":"getRegularExitStore(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.analysis","c":"ConditionalTransferResult","l":"getRegularStore()"},{"p":"org.checkerframework.dataflow.analysis","c":"RegularTransferResult","l":"getRegularStore()"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferInput","l":"getRegularStore()"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferResult","l":"getRegularStore()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"RegularBlock","l":"getRegularSuccessor()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"RegularBlockImpl","l":"getRegularSuccessor()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"getRelatedClassName(Class<?>, String)","u":"getRelatedClassName(java.lang.Class,java.lang.String)"},{"p":"org.checkerframework.javacutil","c":"SystemUtil","l":"getReleaseValue(ProcessingEnvironment)","u":"getReleaseValue(javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"InferenceResult","l":"getRemainingTargets(Set<TypeVariable>, boolean)","u":"getRemainingTargets(java.util.Set,boolean)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"getResult()"},{"p":"org.checkerframework.dataflow.analysis","c":"Analysis","l":"getResult()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LambdaResultExpressionNode","l":"getResult()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ReturnNode","l":"getResult()"},{"p":"org.checkerframework.framework.type.visitor","c":"EquivalentAtmComboScanner.Visited","l":"getResult(AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"getResult(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getResultingTypeOfConstructorMemberReference(MemberReferenceTree, AnnotatedTypeMirror.AnnotatedExecutableType)","u":"getResultingTypeOfConstructorMemberReference(com.sun.source.tree.MemberReferenceTree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferResult","l":"getResultValue()"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"getReturnNodes()"},{"p":"org.checkerframework.dataflow.analysis","c":"ForwardAnalysis","l":"getReturnStatementStores()"},{"p":"org.checkerframework.dataflow.analysis","c":"ForwardAnalysisImpl","l":"getReturnStatementStores()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getReturnStatementStores(MethodTree)","u":"getReturnStatementStores(com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedExecutableType","l":"getReturnType()"},{"p":"org.checkerframework.dataflow.expression","c":"BinaryOperation","l":"getRight()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BinaryOperationNode","l":"getRightOperand()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringConcatenateAssignmentNode","l":"getRightOperand()"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getSame(Collection<? extends AnnotationMirror>, AnnotationMirror)","u":"getSame(java.util.Collection,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"getSameByName(Collection<? extends AnnotationMirror>, AnnotationMirror)","u":"getSameByName(java.util.Collection,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenAnnotatedTypeFactory","l":"getSameLensFromString(String, Tree, TreePath)","u":"getSameLensFromString(java.lang.String,com.sun.source.tree.Tree,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundAnnotatedTypeFactory","l":"getSearchIndexAnnotatedTypeFactory()"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"getSelfType(Tree)","u":"getSelfType(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getSelfType(Tree)","u":"getSelfType(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizer","l":"getSeparator()"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"getSeparator()"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"StringCFGVisualizer","l":"getSeparator()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"getSequences()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getSharedCFGForTree(Tree)","u":"getSharedCFGForTree(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getShouldDefaultTypeVarLocals()"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"getShouldEmitDebugInfo()"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGLambda","l":"getSimpleClassName()"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGMethod","l":"getSimpleClassName()"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGStatement","l":"getSimpleClassName()"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"getSimpleNameOrDescription(ExecutableElement)","u":"getSimpleNameOrDescription(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"getSimpleSignature(ExecutableElement)","u":"getSimpleSignature(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getSortedQualifierNames()"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"getSourceFilePath(TypeElement)","u":"getSourceFilePath(javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"SpecialBlock","l":"getSpecialType()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"SpecialBlockImpl","l":"getSpecialType()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getStandardSuppressWarningsPrefixes()"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"getStoreAfter(Block)","u":"getStoreAfter(org.checkerframework.dataflow.cfg.block.Block)"},{"p":"org.checkerframework.dataflow.analysis","c":"BackwardAnalysisImpl","l":"getStoreAfter(Block)","u":"getStoreAfter(org.checkerframework.dataflow.cfg.block.Block)"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"getStoreAfter(Node)","u":"getStoreAfter(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getStoreAfter(Node)","u":"getStoreAfter(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getStoreAfter(Set<Node>)","u":"getStoreAfter(java.util.Set)"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"getStoreAfter(Tree)","u":"getStoreAfter(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getStoreAfter(Tree)","u":"getStoreAfter(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"getStoreBefore(Block)","u":"getStoreBefore(org.checkerframework.dataflow.cfg.block.Block)"},{"p":"org.checkerframework.dataflow.analysis","c":"ForwardAnalysisImpl","l":"getStoreBefore(Block, Store.Kind)","u":"getStoreBefore(org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.analysis.Store.Kind)"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"getStoreBefore(Node)","u":"getStoreBefore(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getStoreBefore(Node)","u":"getStoreBefore(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getStoreBefore(Set<Node>)","u":"getStoreBefore(java.util.Set)"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"getStoreBefore(Tree)","u":"getStoreBefore(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getStoreBefore(Tree)","u":"getStoreBefore(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"getStoreForBlock(boolean, Block, Block)","u":"getStoreForBlock(boolean,org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.cfg.block.Block)"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy.DefaultQualifierKind","l":"getStrictSuperTypes()"},{"p":"org.checkerframework.framework.util","c":"QualifierKind","l":"getStrictSuperTypes()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getStringType(AnnotatedTypeMirror)","u":"getStringType(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getStringValues(AnnotationMirror)","u":"getStringValues(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"getSubchecker(Class<T>)","u":"getSubchecker(java.lang.Class)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"getSubcheckers()"},{"p":"org.checkerframework.checker.index","c":"Subsequence","l":"getSubsequenceFromReceiver(JavaExpression, BaseAnnotatedTypeFactoryForIndexChecker)","u":"getSubsequenceFromReceiver(org.checkerframework.dataflow.expression.JavaExpression,org.checkerframework.checker.index.BaseAnnotatedTypeFactoryForIndexChecker)"},{"p":"org.checkerframework.checker.index","c":"Subsequence","l":"getSubsequenceFromTree(Tree, BaseAnnotatedTypeFactoryForIndexChecker)","u":"getSubsequenceFromTree(com.sun.source.tree.Tree,org.checkerframework.checker.index.BaseAnnotatedTypeFactoryForIndexChecker)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"SingleSuccessorBlock","l":"getSuccessor()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"SingleSuccessorBlockImpl","l":"getSuccessor()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"Block","l":"getSuccessors()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ConditionalBlockImpl","l":"getSuccessors()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ExceptionBlockImpl","l":"getSuccessors()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"SingleSuccessorBlockImpl","l":"getSuccessors()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedWildcardType","l":"getSuperBound()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedWildcardType","l":"getSuperBoundField()"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"getSuperClass(TypeElement)","u":"getSuperClass(javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"getSuperclass(TypeMirror, Types)","u":"getSuperclass(javax.lang.model.type.TypeMirror,javax.lang.model.util.Types)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"getSuperClassOrInterface(TypeMirror, Types)","u":"getSuperClassOrInterface(javax.lang.model.type.TypeMirror,javax.lang.model.util.Types)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"getSuperConstructor(NewClassTree)","u":"getSuperConstructor(com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"getSuperTypes(AnnotatedTypeMirror.AnnotatedDeclaredType)","u":"getSuperTypes(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"getSuperTypes(TypeElement, Elements)","u":"getSuperTypes(javax.lang.model.element.TypeElement,javax.lang.model.util.Elements)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getSupportedAnnotationTypes()"},{"p":"org.checkerframework.checker.i18n","c":"I18nChecker","l":"getSupportedCheckers()"},{"p":"org.checkerframework.framework.source","c":"AggregateChecker","l":"getSupportedCheckers()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"getSupportedLintOptions()"},{"p":"org.checkerframework.framework.source","c":"AggregateChecker","l":"getSupportedLintOptions()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getSupportedLintOptions()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getSupportedMonotonicTypeQualifiers()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"getSupportedOptions()"},{"p":"org.checkerframework.framework.source","c":"AggregateChecker","l":"getSupportedOptions()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getSupportedOptions()"},{"p":"org.checkerframework.framework.util","c":"OptionConfiguration","l":"getSupportedOptions()"},{"p":"org.checkerframework.common.util.debug","c":"EmptyProcessor","l":"getSupportedSourceVersion()"},{"p":"org.checkerframework.dataflow.cfg","c":"CFGProcessor","l":"getSupportedSourceVersion()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getSupportedSourceVersion()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getSupportedTypeQualifierNames()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getSupportedTypeQualifiers()"},{"p":"org.checkerframework.checker.fenum","c":"FenumChecker","l":"getSuppressWarningsPrefixes()"},{"p":"org.checkerframework.checker.initialization","c":"InitializationChecker","l":"getSuppressWarningsPrefixes()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessChecker","l":"getSuppressWarningsPrefixes()"},{"p":"org.checkerframework.checker.units","c":"UnitsChecker","l":"getSuppressWarningsPrefixes()"},{"p":"org.checkerframework.common.subtyping","c":"SubtypingChecker","l":"getSuppressWarningsPrefixes()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getSuppressWarningsPrefixes()"},{"p":"org.checkerframework.common.subtyping","c":"SubtypingChecker","l":"getSuppressWarningsPrefixes(SourceVisitor<?, ?>, NavigableSet<String>)","u":"getSuppressWarningsPrefixes(org.checkerframework.framework.source.SourceVisitor,java.util.NavigableSet)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"getSuppressWarningsPrefixesOfSubcheckers()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SwitchExpressionNode","l":"getSwitchExpressionVar()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"CaseNode","l":"getSwitchOperand()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssignmentNode","l":"getTarget()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodInvocationNode","l":"getTarget()"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"ConstraintMap","l":"getTargets()"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"getTempVar(Node)","u":"getTempVar(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ExtendedNode","l":"getTerminatesExecution()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TernaryExpressionNode","l":"getTernaryExpressionVar()"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"getTestFile(String)","u":"getTestFile(java.lang.String)"},{"p":"org.checkerframework.framework.test","c":"ImmutableTestConfiguration","l":"getTestSourceFiles()"},{"p":"org.checkerframework.framework.test","c":"TestConfiguration","l":"getTestSourceFiles()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ConditionalBlock","l":"getThenFlowRule()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ConditionalBlockImpl","l":"getThenFlowRule()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ConditionalJump","l":"getThenLabel()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TernaryExpressionNode","l":"getThenOperand()"},{"p":"org.checkerframework.dataflow.analysis","c":"ConditionalTransferResult","l":"getThenStore()"},{"p":"org.checkerframework.dataflow.analysis","c":"RegularTransferResult","l":"getThenStore()"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferInput","l":"getThenStore()"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferResult","l":"getThenStore()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ConditionalBlock","l":"getThenSuccessor()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ConditionalBlockImpl","l":"getThenSuccessor()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedExecutableType","l":"getThrownTypes()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"getThrowUpperBoundAnnotations()"},{"p":"org.checkerframework.javacutil","c":"SystemUtil","l":"getToolsJar()"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy.DefaultQualifierKind","l":"getTop()"},{"p":"org.checkerframework.framework.util","c":"QualifierKind","l":"getTop()"},{"p":"org.checkerframework.framework.type","c":"ElementQualifierHierarchy","l":"getTopAnnotation(AnnotationMirror)","u":"getTopAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"NoElementQualifierHierarchy","l":"getTopAnnotation(AnnotationMirror)","u":"getTopAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"getTopAnnotation(AnnotationMirror)","u":"getTopAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"ElementQualifierHierarchy","l":"getTopAnnotations()"},{"p":"org.checkerframework.framework.type","c":"NoElementQualifierHierarchy","l":"getTopAnnotations()"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"getTopAnnotations()"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy","l":"getTops()"},{"p":"org.checkerframework.framework.util","c":"QualifierKindHierarchy","l":"getTops()"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"getToValueFromIntRange(AnnotatedTypeMirror)","u":"getToValueFromIntRange(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"getTransferFunction()"},{"p":"org.checkerframework.dataflow.analysis","c":"Analysis","l":"getTransferFunction()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"Node","l":"getTransitiveOperands()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil.I18nFormatCall","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayAccessNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayCreationNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayTypeNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssertionErrorNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssignmentNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BinaryOperationNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"CaseNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ClassDeclarationNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ClassNameNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ExplicitThisNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ExpressionStatementNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FieldAccessNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FunctionalInterfaceNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ImplicitThisNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"InstanceOfNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LambdaResultExpressionNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LocalVariableNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MarkerNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodAccessNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodInvocationNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NarrowingConversionNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"Node","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NullChkNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ObjectCreationNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"PackageNameNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ParameterizedTypeNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"PrimitiveTypeNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ReturnNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringConcatenateAssignmentNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringConversionNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SuperNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SwitchExpressionNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SynchronizedNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TernaryExpressionNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ThrowNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TypeCastNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"UnaryOperationNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ValueLiteralNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"VariableDeclarationNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"WideningConversionNode","l":"getTree()"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"getTreeLookup()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodInvocationNode","l":"getTreePath()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getTreePathCacher()"},{"p":"org.checkerframework.framework.ajava","c":"ExpectedTreesVisitor","l":"getTrees()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getTreeUtils()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getTreeUtils()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ConditionalJump","l":"getTrueFlowRule()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"Block","l":"getType()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"BlockImpl","l":"getType()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ExtendedNode","l":"getType()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"Node","l":"getType()"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"getType()"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"getType(Element)","u":"getType(javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getTypeArgumentInference()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedDeclaredType","l":"getTypeArguments()"},{"p":"org.checkerframework.framework.util.element","c":"ParamApplier","l":"getTypeCompoundIndex(Attribute.TypeCompound)","u":"getTypeCompoundIndex(com.sun.tools.javac.code.Attribute.TypeCompound)"},{"p":"org.checkerframework.framework.util.element","c":"SuperTypeApplier","l":"getTypeCompoundIndex(Attribute.TypeCompound)","u":"getTypeCompoundIndex(com.sun.tools.javac.code.Attribute.TypeCompound)"},{"p":"org.checkerframework.framework.util.element","c":"MethodTypeParamApplier","l":"getTypeCompoundIndex(Attribute.TypeCompound)","u":"getTypeCompoundIndex(com.sun.tools.javac.code.Attribute.TypeCompound)"},{"p":"org.checkerframework.checker.interning","c":"InterningAnnotatedTypeFactory","l":"getTypeDeclarationBounds(TypeMirror)","u":"getTypeDeclarationBounds(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getTypeDeclarationBounds(TypeMirror)","u":"getTypeDeclarationBounds(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.util","c":"JavaParserUtil","l":"getTypeDeclarationByName(CompilationUnit, String)","u":"getTypeDeclarationByName(com.github.javaparser.ast.CompilationUnit,java.lang.String)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"getTypeElement(ProcessingEnvironment, Class<?>)","u":"getTypeElement(javax.annotation.processing.ProcessingEnvironment,java.lang.Class)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"getTypeElement(TypeMirror)","u":"getTypeElement(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"getTypeFactory()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"getTypeFactory()"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis","l":"getTypeFactory()"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakAnnotatedTypeFactory","l":"getTypeFactoryOfSubchecker(Class<? extends BaseTypeChecker>)","u":"getTypeFactoryOfSubchecker(java.lang.Class)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"getTypeFactoryOfSubchecker(Class<? extends BaseTypeChecker>)","u":"getTypeFactoryOfSubchecker(java.lang.Class)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"getTypeFactoryOfSubchecker(Class<? extends BaseTypeChecker>)","u":"getTypeFactoryOfSubchecker(java.lang.Class)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"getTypeFrameFromAnnotation(AnnotationMirror)","u":"getTypeFrameFromAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis","l":"getTypeHierarchy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getTypeHierarchy()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"getTypeMirror(Class<?>)","u":"getTypeMirror(java.lang.Class)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getTypeOfExtendsImplements(Tree)","u":"getTypeOfExtendsImplements(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis","l":"getTypes()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getTypeUtils()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedWildcardType","l":"getTypeVariable()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedExecutableType","l":"getTypeVariables()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getTypeVarSubstitutor()"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"getUid()"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferInput","l":"getUid()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"BlockImpl","l":"getUid()"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"getUid()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"Node","l":"getUid()"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST","l":"getUid()"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"getUid()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"getUltimateParentChecker()"},{"p":"org.checkerframework.checker.interning","c":"InterningAnnotatedTypeFactory","l":"getUnboxedType(AnnotatedTypeMirror.AnnotatedDeclaredType)","u":"getUnboxedType(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getUnboxedType(AnnotatedTypeMirror.AnnotatedDeclaredType)","u":"getUnboxedType(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"getUnderInitializationAnnotationOfSuperType(TypeMirror)","u":"getUnderInitializationAnnotationOfSuperType(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"getUnderlyingAST()"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue","l":"getUnderlyingType()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedArrayType","l":"getUnderlyingType()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedDeclaredType","l":"getUnderlyingType()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedExecutableType","l":"getUnderlyingType()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedIntersectionType","l":"getUnderlyingType()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedNoType","l":"getUnderlyingType()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedNullType","l":"getUnderlyingType()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedPrimitiveType","l":"getUnderlyingType()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedTypeVariable","l":"getUnderlyingType()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedWildcardType","l":"getUnderlyingType()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"getUnderlyingType()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"getUnderlyingTypeHashCode()"},{"p":"org.checkerframework.framework.test","c":"TypecheckResult","l":"getUnexpectedDiagnostics()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getUninferredWildcardType(AnnotatedTypeMirror.AnnotatedTypeVariable)","u":"getUninferredWildcardType(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"getUninitializedFields(NullnessStore, TreePath, boolean, Collection<? extends AnnotationMirror>)","u":"getUninitializedFields(org.checkerframework.checker.nullness.NullnessStore,com.sun.source.util.TreePath,boolean,java.util.Collection)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"getUninitializedFields(Store, TreePath, boolean, Collection<? extends AnnotationMirror>)","u":"getUninitializedFields(Store,com.sun.source.util.TreePath,boolean,java.util.Collection)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"getUninitializedInvariantFields(Store, TreePath, boolean, List<? extends AnnotationMirror>)","u":"getUninitializedInvariantFields(Store,com.sun.source.util.TreePath,boolean,java.util.List)"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory","l":"getUnitsRel()"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"getUnsigned(ByteBuffer)","u":"getUnsigned(java.nio.ByteBuffer)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"getUnsigned(ByteBuffer, byte[])","u":"getUnsigned(java.nio.ByteBuffer,byte[])"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"getUnsigned(ByteBuffer, byte[], int, int)","u":"getUnsigned(java.nio.ByteBuffer,byte[],int,int)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"getUnsigned(ByteBuffer, int)","u":"getUnsigned(java.nio.ByteBuffer,int)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"getUnsigned(IntBuffer, int)","u":"getUnsigned(java.nio.IntBuffer,int)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"getUnsignedInt(ByteBuffer)","u":"getUnsignedInt(java.nio.ByteBuffer)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtilExtra","l":"getUnsignedRGB(BufferedImage, int, int, int, int, int[], int, int)","u":"getUnsignedRGB(java.awt.image.BufferedImage,int,int,int,int,int[],int,int)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"getUnsignedShort(ByteBuffer)","u":"getUnsignedShort(java.nio.ByteBuffer)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedTypeVariable","l":"getUpperBound()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeParameterBounds","l":"getUpperBound()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedTypeVariable","l":"getUpperBoundField()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getUpstreamCheckerNames()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.UpperBoundLiteralQualifier","l":"getValue()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BooleanLiteralNode","l":"getValue()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"CharacterLiteralNode","l":"getValue()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"DoubleLiteralNode","l":"getValue()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FloatLiteralNode","l":"getValue()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"IntegerLiteralNode","l":"getValue()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LongLiteralNode","l":"getValue()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NullLiteralNode","l":"getValue()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ShortLiteralNode","l":"getValue()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringLiteralNode","l":"getValue()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ValueLiteralNode","l":"getValue()"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"Constant","l":"getValue()"},{"p":"org.checkerframework.dataflow.expression","c":"ValueLiteral","l":"getValue()"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"getValue(ArrayAccessNode)","u":"getValue(org.checkerframework.dataflow.cfg.node.ArrayAccessNode)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"getValue(FieldAccessNode)","u":"getValue(org.checkerframework.dataflow.cfg.node.FieldAccessNode)"},{"p":"org.checkerframework.checker.lock","c":"LockStore","l":"getValue(JavaExpression)","u":"getValue(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"getValue(JavaExpression)","u":"getValue(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"getValue(LocalVariableNode)","u":"getValue(org.checkerframework.dataflow.cfg.node.LocalVariableNode)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"getValue(MethodInvocationNode)","u":"getValue(org.checkerframework.dataflow.cfg.node.MethodInvocationNode)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"getValue(Node)","u":"getValue(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.analysis","c":"Analysis","l":"getValue(Node)","u":"getValue(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"getValue(Node)","u":"getValue(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"getValue(ThisNode)","u":"getValue(org.checkerframework.dataflow.cfg.node.ThisNode)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"getValue(Tree)","u":"getValue(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.analysis","c":"Analysis","l":"getValue(Tree)","u":"getValue(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"getValue(Tree)","u":"getValue(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanAnnotatedTypeFactory","l":"getValueAnnotatedTypeFactory()"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundAnnotatedTypeFactory","l":"getValueAnnotatedTypeFactory()"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"getValueFromFactory(Tree, Node)","u":"getValueFromFactory(com.sun.source.tree.Tree,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"getValueOfMethod(ProcessingEnvironment, TypeMirror)","u":"getValueOfMethod(javax.annotation.processing.ProcessingEnvironment,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferInput","l":"getValueOfSubNode(Node)","u":"getValueOfSubNode(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.common.value","c":"ValueCheckerUtils","l":"getValuesCastedToType(AnnotationMirror, TypeMirror, ValueAnnotatedTypeFactory)","u":"getValuesCastedToType(javax.lang.model.element.AnnotationMirror,javax.lang.model.type.TypeMirror,org.checkerframework.common.value.ValueAnnotatedTypeFactory)"},{"p":"org.checkerframework.common.value","c":"ValueCheckerUtils","l":"getValuesFromRange(Range, Class<T>)","u":"getValuesFromRange(org.checkerframework.common.value.util.Range,java.lang.Class)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedExecutableType","l":"getVarargType()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"getVisitor()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"getVisitor()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getVisitorTreePath()"},{"p":"org.checkerframework.checker.regex","c":"RegexAnnotatedTypeFactory","l":"getWidenedAnnotations(AnnotationMirrorSet, TypeKind, TypeKind)","u":"getWidenedAnnotations(org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeKind,javax.lang.model.type.TypeKind)"},{"p":"org.checkerframework.checker.signedness","c":"SignednessAnnotatedTypeFactory","l":"getWidenedAnnotations(AnnotationMirrorSet, TypeKind, TypeKind)","u":"getWidenedAnnotations(org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeKind,javax.lang.model.type.TypeKind)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getWidenedAnnotations(AnnotationMirrorSet, TypeKind, TypeKind)","u":"getWidenedAnnotations(org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeKind,javax.lang.model.type.TypeKind)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getWidenedType(AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"getWidenedType(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"getWidenedType(AnnotationMirrorSet, TypeMirror, AnnotatedTypeMirror)","u":"getWidenedType(org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"getWidenedValue(TypeMirror, V)","u":"getWidenedValue(javax.lang.model.type.TypeMirror,V)"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"getWidth()"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"getWildcardBoundType(AnnotatedTypeMirror.AnnotatedWildcardType)","u":"getWildcardBoundType(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType)"},{"p":"org.checkerframework.checker.units.qual","c":"Prefix","l":"giga"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"glb(UBQualifier)","u":"glb(org.checkerframework.checker.index.upperbound.UBQualifier)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"glb(UBQualifier)","u":"glb(org.checkerframework.checker.index.upperbound.UBQualifier)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.UpperBoundLiteralQualifier","l":"glb(UBQualifier)","u":"glb(org.checkerframework.checker.index.upperbound.UBQualifier)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.UpperBoundUnknownQualifier","l":"glb(UBQualifier)","u":"glb(org.checkerframework.checker.index.upperbound.UBQualifier)"},{"p":"org.checkerframework.framework.util.typeinference","c":"GlbUtil","l":"glbAll(Map<AnnotatedTypeMirror, AnnotationMirrorSet>, AnnotatedTypeFactory)","u":"glbAll(java.util.Map,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"glbOfBounds(AnnotatedTypeMirror.AnnotatedIntersectionType, QualifierHierarchy)","u":"glbOfBounds(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.QualifierHierarchy)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"SubtypesSolver","l":"glbSubtypes(Set<TypeVariable>, ConstraintMap, AnnotatedTypeFactory)","u":"glbSubtypes(java.util.Set,org.checkerframework.framework.util.typeinference.solver.ConstraintMap,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util.typeinference","c":"GlbUtil","l":"GlbUtil()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.common.value.util","c":"ByteMath","l":"greaterThan(Number)","u":"greaterThan(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"DoubleMath","l":"greaterThan(Number)","u":"greaterThan(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"FloatMath","l":"greaterThan(Number)","u":"greaterThan(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"IntegerMath","l":"greaterThan(Number)","u":"greaterThan(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"LongMath","l":"greaterThan(Number)","u":"greaterThan(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"NumberMath","l":"greaterThan(Number)","u":"greaterThan(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"ShortMath","l":"greaterThan(Number)","u":"greaterThan(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"ByteMath","l":"greaterThanEq(Number)","u":"greaterThanEq(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"DoubleMath","l":"greaterThanEq(Number)","u":"greaterThanEq(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"FloatMath","l":"greaterThanEq(Number)","u":"greaterThanEq(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"IntegerMath","l":"greaterThanEq(Number)","u":"greaterThanEq(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"LongMath","l":"greaterThanEq(Number)","u":"greaterThanEq(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"NumberMath","l":"greaterThanEq(Number)","u":"greaterThanEq(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"ShortMath","l":"greaterThanEq(Number)","u":"greaterThanEq(java.lang.Number)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"GreaterThanNode","l":"GreaterThanNode(BinaryTree, Node, Node)","u":"%3Cinit%3E(com.sun.source.tree.BinaryTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"GreaterThanOrEqualNode","l":"GreaterThanOrEqualNode(BinaryTree, Node, Node)","u":"%3Cinit%3E(com.sun.source.tree.BinaryTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory.UpperBoundQualifierHierarchy","l":"greatestLowerBound(AnnotationMirror, AnnotationMirror)","u":"greatestLowerBound(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory.AccumulationQualifierHierarchy","l":"greatestLowerBound(AnnotationMirror, AnnotationMirror)","u":"greatestLowerBound(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.reflection","c":"ClassValAnnotatedTypeFactory.ClassValQualifierHierarchy","l":"greatestLowerBound(AnnotationMirror, AnnotationMirror)","u":"greatestLowerBound(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.reflection","c":"MethodValAnnotatedTypeFactory.MethodValQualifierHierarchy","l":"greatestLowerBound(AnnotationMirror, AnnotationMirror)","u":"greatestLowerBound(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"MostlyNoElementQualifierHierarchy","l":"greatestLowerBound(AnnotationMirror, AnnotationMirror)","u":"greatestLowerBound(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"NoElementQualifierHierarchy","l":"greatestLowerBound(AnnotationMirror, AnnotationMirror)","u":"greatestLowerBound(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"greatestLowerBound(AnnotationMirror, AnnotationMirror)","u":"greatestLowerBound(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy","l":"greatestLowerBound(QualifierKind, QualifierKind)","u":"greatestLowerBound(org.checkerframework.framework.util.QualifierKind,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.framework.util","c":"QualifierKindHierarchy","l":"greatestLowerBound(QualifierKind, QualifierKind)","u":"greatestLowerBound(org.checkerframework.framework.util.QualifierKind,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"greatestLowerBound(TypeMirror, TypeMirror, ProcessingEnvironment)","u":"greatestLowerBound(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue","l":"greatestLowerBound(V)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory.InitializationQualifierHierarchy","l":"greatestLowerBoundInitialization(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind)","u":"greatestLowerBoundInitialization(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"greatestLowerBounds(Collection<? extends AnnotationMirror>, Collection<? extends AnnotationMirror>)","u":"greatestLowerBounds(java.util.Collection,java.util.Collection)"},{"p":"org.checkerframework.checker.fenum","c":"FenumAnnotatedTypeFactory.FenumQualifierHierarchy","l":"greatestLowerBoundWithElements(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind, QualifierKind)","u":"greatestLowerBoundWithElements(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory.NullnessQualifierHierarchy","l":"greatestLowerBoundWithElements(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind, QualifierKind)","u":"greatestLowerBoundWithElements(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory.UnitsQualifierHierarchy","l":"greatestLowerBoundWithElements(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind, QualifierKind)","u":"greatestLowerBoundWithElements(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.framework.type","c":"MostlyNoElementQualifierHierarchy","l":"greatestLowerBoundWithElements(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind, QualifierKind)","u":"greatestLowerBoundWithElements(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.framework.type","c":"SubtypeIsSubsetQualifierHierarchy","l":"greatestLowerBoundWithElements(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind, QualifierKind)","u":"greatestLowerBoundWithElements(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.framework.type","c":"SubtypeIsSupersetQualifierHierarchy","l":"greatestLowerBoundWithElements(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind, QualifierKind)","u":"greatestLowerBoundWithElements(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"SupertypesSolver","l":"groundMissingHierarchies(Map.Entry<AnnotatedTypeMirror, AnnotationMirrorSet>, AnnotationMirrorMap<AnnotationMirror>)","u":"groundMissingHierarchies(java.util.Map.Entry,org.checkerframework.javacutil.AnnotationMirrorMap)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundAnnotatedTypeFactory","l":"GTEN1"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"GTEN1"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"GUARDEDBY"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"GUARDEDBYBOTTOM"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"GUARDEDBYUNKNOWN"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"guardedByValueElement"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"GUARDSATISFIED"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"guardSatisfiedValueElement"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectChecker","l":"GuiEffectChecker()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor.GuiEffectOverrideChecker","l":"GuiEffectOverrideChecker(Tree, AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror, AnnotatedTypeMirror, AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror)","u":"%3Cinit%3E(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"GuiEffectTypeFactory(BaseTypeChecker, boolean)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,boolean)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"GuiEffectVisitor(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"h"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"h"},{"p":"org.checkerframework.checker.nullness","c":"CollectionToArrayHeuristics","l":"handle(MethodInvocationTree, AnnotatedTypeMirror.AnnotatedExecutableType)","u":"handle(com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.checker.nullness","c":"SystemGetPropertyHandler","l":"handle(MethodInvocationTree, AnnotatedTypeMirror.AnnotatedExecutableType)","u":"handle(com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"handleArtificialTree(Tree)","u":"handleArtificialTree(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.flow","c":"CFCFGBuilder.CFCFGTranslationPhaseOne","l":"handleArtificialTree(Tree)","u":"handleArtificialTree(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"AutoValueSupport","l":"handleBuilderBuildMethod(AnnotatedTypeMirror.AnnotatedExecutableType)","u":"handleBuilderBuildMethod(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"BuilderFrameworkSupport","l":"handleBuilderBuildMethod(AnnotatedTypeMirror.AnnotatedExecutableType)","u":"handleBuilderBuildMethod(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"LombokSupport","l":"handleBuilderBuildMethod(AnnotatedTypeMirror.AnnotatedExecutableType)","u":"handleBuilderBuildMethod(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"handleCFGViz(ControlFlowGraph)","u":"handleCFGViz(org.checkerframework.dataflow.cfg.ControlFlowGraph)"},{"p":"org.checkerframework.checker.optional","c":"OptionalVisitor","l":"handleConditionalStatementIsPresentGet(IfTree)","u":"handleConditionalStatementIsPresentGet(com.sun.source.tree.IfTree)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"AutoValueSupport","l":"handleConstructor(NewClassTree, AnnotatedTypeMirror)","u":"handleConstructor(com.sun.source.tree.NewClassTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"BuilderFrameworkSupport","l":"handleConstructor(NewClassTree, AnnotatedTypeMirror)","u":"handleConstructor(com.sun.source.tree.NewClassTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"LombokSupport","l":"handleConstructor(NewClassTree, AnnotatedTypeMirror)","u":"handleConstructor(com.sun.source.tree.NewClassTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.optional","c":"OptionalVisitor","l":"handleCreationElimination(MethodInvocationTree)","u":"handleCreationElimination(com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"handleEndOfLineJavaDiagnostic(String)","u":"handleEndOfLineJavaDiagnostic(java.lang.String)"},{"p":"org.checkerframework.framework.util.element","c":"MethodTypeParamApplier","l":"handleInvalid(List<Attribute.TypeCompound>)","u":"handleInvalid(java.util.List)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer","l":"handleSuccessorsHelper(Block, Set<Block>, Queue<Block>, StringBuilder)","u":"handleSuccessorsHelper(org.checkerframework.dataflow.cfg.block.Block,java.util.Set,java.util.Queue,java.lang.StringBuilder)"},{"p":"org.checkerframework.framework.util.element","c":"MethodApplier","l":"handleTargeted(List<Attribute.TypeCompound>)","u":"handleTargeted(java.util.List)"},{"p":"org.checkerframework.framework.util.element","c":"ParamApplier","l":"handleTargeted(List<Attribute.TypeCompound>)","u":"handleTargeted(java.util.List)"},{"p":"org.checkerframework.framework.util.element","c":"SuperTypeApplier","l":"handleTargeted(List<Attribute.TypeCompound>)","u":"handleTargeted(java.util.List)"},{"p":"org.checkerframework.framework.util.element","c":"TypeDeclarationApplier","l":"handleTargeted(List<Attribute.TypeCompound>)","u":"handleTargeted(java.util.List)"},{"p":"org.checkerframework.framework.util.element","c":"MethodTypeParamApplier","l":"handleTargeted(List<Attribute.TypeCompound>)","u":"handleTargeted(java.util.List)"},{"p":"org.checkerframework.framework.util.element","c":"VariableApplier","l":"handleTargeted(List<Attribute.TypeCompound>)","u":"handleTargeted(java.util.List)"},{"p":"org.checkerframework.checker.optional","c":"OptionalVisitor","l":"handleTernaryIsPresentGet(ConditionalExpressionTree)","u":"handleTernaryIsPresentGet(com.sun.source.tree.ConditionalExpressionTree)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"AutoValueSupport","l":"handleToBuilderMethod(AnnotatedTypeMirror.AnnotatedExecutableType)","u":"handleToBuilderMethod(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"BuilderFrameworkSupport","l":"handleToBuilderMethod(AnnotatedTypeMirror.AnnotatedExecutableType)","u":"handleToBuilderMethod(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"LombokSupport","l":"handleToBuilderMethod(AnnotatedTypeMirror.AnnotatedExecutableType)","u":"handleToBuilderMethod(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.framework.util.element","c":"MethodTypeParamApplier","l":"handleValid(List<Attribute.TypeCompound>)","u":"handleValid(java.util.List)"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileParser.RecordComponentStub","l":"hasAccessorInStubs()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"hasAnnotation(AnnotationMirror)","u":"hasAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"hasAnnotation(Class<? extends Annotation>)","u":"hasAnnotation(java.lang.Class)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"hasAnnotation(Element, String)","u":"hasAnnotation(javax.lang.model.element.Element,java.lang.String)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"hasAnnotationRelaxed(AnnotationMirror)","u":"hasAnnotationRelaxed(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakAnnotatedTypeFactory","l":"hasCreatesMustCallFor(MethodInvocationNode)","u":"hasCreatesMustCallFor(org.checkerframework.dataflow.cfg.node.MethodInvocationNode)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"hasDefaultsForCheckedCode()"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"hasDependentAnnotations()"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticLine","l":"hasDiagnostics()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"hasEffectiveAnnotation(AnnotationMirror)","u":"hasEffectiveAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"hasEffectiveAnnotation(Class<? extends Annotation>)","u":"hasEffectiveAnnotation(java.lang.Class)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"hasEffectiveAnnotationRelaxed(AnnotationMirror)","u":"hasEffectiveAnnotationRelaxed(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy.DefaultQualifierKind","l":"hasElements()"},{"p":"org.checkerframework.framework.util","c":"QualifierKind","l":"hasElements()"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"hasElementValue(AnnotationMirror, CharSequence)","u":"hasElementValue(javax.lang.model.element.AnnotationMirror,java.lang.CharSequence)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"hasEnclosingType(TypeMirror)","u":"hasEnclosingType(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"hasError()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"hasExplicitAnnotation(AnnotationMirror)","u":"hasExplicitAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"hasExplicitAnnotation(Class<? extends Annotation>)","u":"hasExplicitAnnotation(java.lang.Class)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"hasExplicitAnnotationRelaxed(AnnotationMirror)","u":"hasExplicitAnnotationRelaxed(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"hasExplicitConstructor(ClassTree)","u":"hasExplicitConstructor(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"hasExplicitExtendsBound(AnnotatedTypeMirror)","u":"hasExplicitExtendsBound(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"hasExplicitNoQualifierParameterInHierarchy(Element, AnnotationMirror)","u":"hasExplicitNoQualifierParameterInHierarchy(javax.lang.model.element.Element,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"hasExplicitQualifierParameterInHierarchy(Element, AnnotationMirror)","u":"hasExplicitQualifierParameterInHierarchy(javax.lang.model.element.Element,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"hasExplicitSuperBound(AnnotatedTypeMirror)","u":"hasExplicitSuperBound(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"hasFieldInvariantAnnotation(AnnotatedTypeMirror, VariableElement)","u":"hasFieldInvariantAnnotation(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.VariableElement)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"hasFieldInvariantAnnotation(AnnotatedTypeMirror, VariableElement)","u":"hasFieldInvariantAnnotation(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.VariableElement)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"hasFieldInvariantAnnotation(VariableTree)","u":"hasFieldInvariantAnnotation(com.sun.source.tree.VariableTree)"},{"p":"org.checkerframework.checker.i18nformatter.util","c":"I18nFormatUtil","l":"hasFormat(String, I18nConversionCategory...)","u":"hasFormat(java.lang.String,org.checkerframework.checker.i18nformatter.qual.I18nConversionCategory...)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"HASHCODE_VISITOR"},{"p":"org.checkerframework.checker.guieffect","c":"Effect","l":"hashCode()"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"hashCode()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"hashCode()"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"hashCode()"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferInput","l":"hashCode()"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprStore","l":"hashCode()"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprValue","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayAccessNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayCreationNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayTypeNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssertionErrorNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssignmentNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BitwiseAndNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BitwiseComplementNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BitwiseOrNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BitwiseXorNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"CaseNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ClassDeclarationNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ClassNameNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ConditionalAndNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ConditionalNotNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ConditionalOrNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"EqualToNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ExpressionStatementNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FieldAccessNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FloatingDivisionNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FloatingRemainderNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FunctionalInterfaceNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"GreaterThanNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"GreaterThanOrEqualNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"InstanceOfNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"IntegerDivisionNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"IntegerRemainderNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LambdaResultExpressionNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LeftShiftNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LessThanNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LessThanOrEqualNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LocalVariableNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MarkerNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodAccessNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodInvocationNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NarrowingConversionNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NotEqualNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NullChkNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalAdditionNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalMinusNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalMultiplicationNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalPlusNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalSubtractionNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ObjectCreationNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"PackageNameNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ParameterizedTypeNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"PrimitiveTypeNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ReturnNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SignedRightShiftNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringConcatenateAssignmentNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringConcatenateNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringConversionNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SuperNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SwitchExpressionNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SynchronizedNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TernaryExpressionNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ThisNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ThrowNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TypeCastNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"UnsignedRightShiftNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ValueLiteralNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"VariableDeclarationNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"WideningConversionNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"Constant","l":"hashCode()"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"ConstantPropagationStore","l":"hashCode()"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayAccess","l":"hashCode()"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayCreation","l":"hashCode()"},{"p":"org.checkerframework.dataflow.expression","c":"BinaryOperation","l":"hashCode()"},{"p":"org.checkerframework.dataflow.expression","c":"ClassName","l":"hashCode()"},{"p":"org.checkerframework.dataflow.expression","c":"FieldAccess","l":"hashCode()"},{"p":"org.checkerframework.dataflow.expression","c":"FormalParameter","l":"hashCode()"},{"p":"org.checkerframework.dataflow.expression","c":"LocalVariable","l":"hashCode()"},{"p":"org.checkerframework.dataflow.expression","c":"MethodCall","l":"hashCode()"},{"p":"org.checkerframework.dataflow.expression","c":"ThisReference","l":"hashCode()"},{"p":"org.checkerframework.dataflow.expression","c":"UnaryOperation","l":"hashCode()"},{"p":"org.checkerframework.dataflow.expression","c":"Unknown","l":"hashCode()"},{"p":"org.checkerframework.dataflow.expression","c":"ValueLiteral","l":"hashCode()"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarStore","l":"hashCode()"},{"p":"org.checkerframework.dataflow.reachingdef","c":"ReachingDefinitionNode","l":"hashCode()"},{"p":"org.checkerframework.dataflow.reachingdef","c":"ReachingDefinitionStore","l":"hashCode()"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"hashCode()"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue","l":"hashCode()"},{"p":"org.checkerframework.framework.source","c":"DiagMessage","l":"hashCode()"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnostic","l":"hashCode()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"hashCode()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeParameterBounds","l":"hashCode()"},{"p":"org.checkerframework.framework.util","c":"Contract.ConditionalPostcondition","l":"hashCode()"},{"p":"org.checkerframework.framework.util","c":"Contract","l":"hashCode()"},{"p":"org.checkerframework.framework.util.defaults","c":"Default","l":"hashCode()"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesError","l":"hashCode()"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"AFConstraint","l":"hashCode()"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"TUConstraint","l":"hashCode()"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorMap","l":"hashCode()"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"hashCode()"},{"p":"org.checkerframework.javacutil","c":"Pair","l":"hashCode()"},{"p":"org.checkerframework.framework.type","c":"HashcodeAtmVisitor","l":"HashcodeAtmVisitor()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"hasInheritedMeta(AnnotationMirror)","u":"hasInheritedMeta(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"hasLowerBoundTypeByClass(Node, Class<? extends Annotation>)","u":"hasLowerBoundTypeByClass(org.checkerframework.dataflow.cfg.node.Node,java.lang.Class)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"JavaDiagnosticReader","l":"hasNext()"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"hasNoExplicitBound(AnnotatedTypeMirror)","u":"hasNoExplicitBound(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsTools","l":"hasNoPrefix(AnnotatedTypeMirror)","u":"hasNoPrefix(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsTools","l":"hasNoPrefix(AnnotationMirror)","u":"hasNoPrefix(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakAnnotatedTypeFactory","l":"hasNotOwning(Element)","u":"hasNotOwning(javax.lang.model.element.Element)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsTools","l":"hasNoUnits(AnnotatedTypeMirror)","u":"hasNoUnits(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"hasOption(String)","u":"hasOption(java.lang.String)"},{"p":"org.checkerframework.framework.util","c":"OptionConfiguration","l":"hasOption(String)","u":"hasOption(java.lang.String)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"hasOptionNoSubcheckers(String)","u":"hasOptionNoSubcheckers(java.lang.String)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"hasOrIsSubchecker"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakAnnotatedTypeFactory","l":"hasOwning(Element)","u":"hasOwning(javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.type.poly","c":"AbstractQualifierPolymorphism","l":"hasPolymorphicQualifiers(AnnotatedTypeMirror)","u":"hasPolymorphicQualifiers(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.dataflow.util","c":"PurityUtils","l":"hasPurityAnnotation(AnnotationProvider, ExecutableElement)","u":"hasPurityAnnotation(org.checkerframework.javacutil.AnnotationProvider,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.dataflow.util","c":"PurityUtils","l":"hasPurityAnnotation(AnnotationProvider, MethodTree)","u":"hasPurityAnnotation(org.checkerframework.javacutil.AnnotationProvider,com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"hasQualifierParameterInHierarchy(AnnotatedTypeMirror, AnnotationMirror)","u":"hasQualifierParameterInHierarchy(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"hasQualifierParameterInHierarchy(Element, AnnotationMirror)","u":"hasQualifierParameterInHierarchy(javax.lang.model.element.Element,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"hasQualifierParameterValueElement"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"hasReceiver(Element)","u":"hasReceiver(javax.lang.model.element.Element)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"hasSequenceWithOffset(String, int)","u":"hasSequenceWithOffset(java.lang.String,int)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"hasSequenceWithOffset(String, int)","u":"hasSequenceWithOffset(java.lang.String,int)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"hasSequenceWithOffset(String, String)","u":"hasSequenceWithOffset(java.lang.String,java.lang.String)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"hasSequenceWithOffset(String, String)","u":"hasSequenceWithOffset(java.lang.String,java.lang.String)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsTools","l":"hasSpecificUnit(AnnotatedTypeMirror, AnnotationMirror)","u":"hasSpecificUnit(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsTools","l":"hasSpecificUnitIgnoringPrefix(AnnotatedTypeMirror, AnnotationMirror)","u":"hasSpecificUnitIgnoringPrefix(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.index","c":"BaseAnnotatedTypeFactoryForIndexChecker","l":"hasSubsequenceFromElement"},{"p":"org.checkerframework.checker.index","c":"BaseAnnotatedTypeFactoryForIndexChecker","l":"hasSubsequenceFromValue(AnnotationMirror)","u":"hasSubsequenceFromValue(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.index","c":"BaseAnnotatedTypeFactoryForIndexChecker","l":"hasSubsequenceSubsequenceElement"},{"p":"org.checkerframework.checker.index","c":"BaseAnnotatedTypeFactoryForIndexChecker","l":"hasSubsequenceSubsequenceValue(AnnotationMirror)","u":"hasSubsequenceSubsequenceValue(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.index","c":"BaseAnnotatedTypeFactoryForIndexChecker","l":"hasSubsequenceToElement"},{"p":"org.checkerframework.checker.index","c":"BaseAnnotatedTypeFactoryForIndexChecker","l":"hasSubsequenceToValue(AnnotationMirror)","u":"hasSubsequenceToValue(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"hasSyntheticArgument(NewClassTree)","u":"hasSyntheticArgument(com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"hasTypeQualifierElementTypes(ElementType[], Class<?>)","u":"hasTypeQualifierElementTypes(java.lang.annotation.ElementType[],java.lang.Class)"},{"p":"org.checkerframework.common.subtyping","c":"SubtypingAnnotationClassLoader","l":"hasWellDefinedTargetMetaAnnotation(Class<? extends Annotation>)","u":"hasWellDefinedTargetMetaAnnotation(java.lang.Class)"},{"p":"org.checkerframework.framework.type","c":"AnnotationClassLoader","l":"hasWellDefinedTargetMetaAnnotation(Class<? extends Annotation>)","u":"hasWellDefinedTargetMetaAnnotation(java.lang.Class)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"havePairOfUnits(AnnotatedTypeMirror, AnnotationMirror, AnnotatedTypeMirror, AnnotationMirror)","u":"havePairOfUnits(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"havePairOfUnitsIgnoringOrder(AnnotatedTypeMirror, AnnotationMirror, AnnotatedTypeMirror, AnnotationMirror)","u":"havePairOfUnitsIgnoringOrder(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"haveSameDeclaration(Types, AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedTypeVariable)","u":"haveSameDeclaration(javax.lang.model.util.Types,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"headSet(AnnotationMirror)","u":"headSet(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"headSet(AnnotationMirror, boolean)","u":"headSet(javax.lang.model.element.AnnotationMirror,boolean)"},{"p":"org.checkerframework.checker.units.qual","c":"Prefix","l":"hecto"},{"p":"org.checkerframework.framework.util","c":"Heuristics","l":"Heuristics()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"hierarchy"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"higher(AnnotationMirror)","u":"higher(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.i18n","c":"I18nAnnotatedTypeFactory","l":"I18nAnnotatedTypeFactory(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.i18n","c":"I18nChecker","l":"I18nChecker()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil.FormatType","l":"I18NFORMAT"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterAnnotatedTypeFactory","l":"I18NFORMAT_NAME"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterAnnotatedTypeFactory","l":"I18NFORMATBOTTOM"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil.I18nFormatCall","l":"I18nFormatCall(MethodInvocationTree, AnnotatedTypeFactory)","u":"%3Cinit%3E(com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil.FormatType","l":"I18NFORMATFOR"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterAnnotatedTypeFactory","l":"I18NFORMATFOR_NAME"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"i18nFormatForValueElement"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterAnnotatedTypeFactory","l":"I18nFormatterAnnotatedTypeFactory(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterChecker","l":"I18nFormatterChecker()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTransfer","l":"I18nFormatterTransfer(CFAnalysis)","u":"%3Cinit%3E(org.checkerframework.framework.flow.CFAnalysis)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"I18nFormatterTreeUtil(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterVisitor","l":"I18nFormatterVisitor(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.i18nformatter.util","c":"I18nFormatUtil","l":"I18nFormatUtil()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"i18nFormatValueElement"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil.FormatType","l":"I18NINVALID"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterAnnotatedTypeFactory","l":"I18NINVALIDFORMAT_NAME"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"i18nInvalidFormatValueElement"},{"p":"org.checkerframework.checker.i18n","c":"I18nSubchecker","l":"I18nSubchecker()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterAnnotatedTypeFactory","l":"I18NUNKNOWNFORMAT"},{"p":"org.checkerframework.checker.nullness.util","c":"Opt","l":"ifPresent(T, Consumer<? super T>)","u":"ifPresent(T,java.util.function.Consumer)"},{"p":"org.checkerframework.common.value","c":"ValueChecker","l":"IGNORE_RANGE_OVERFLOW"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsAnalysis","l":"ignoredExceptionTypes"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"ignoreOverflow"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"ignoreRawTypes"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"ignoreUninferredTypeArguments"},{"p":"org.checkerframework.checker.formatter.util","c":"FormatUtil.IllegalFormatConversionCategoryException","l":"IllegalFormatConversionCategoryException(ConversionCategory, ConversionCategory)","u":"%3Cinit%3E(org.checkerframework.checker.formatter.qual.ConversionCategory,org.checkerframework.checker.formatter.qual.ConversionCategory)"},{"p":"org.checkerframework.framework.test","c":"ImmutableTestConfiguration","l":"ImmutableTestConfiguration(List<File>, List<File>, List<String>, Map<String, String>, boolean)","u":"%3Cinit%3E(java.util.List,java.util.List,java.util.List,java.util.Map,boolean)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults.DefaultApplierElement","l":"impl"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"implementsAnnotation(AnnotatedTypeMirror)","u":"implementsAnnotation(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.qual","c":"TypeUseLocation","l":"IMPLICIT_LOWER_BOUND"},{"p":"org.checkerframework.framework.qual","c":"TypeUseLocation","l":"IMPLICIT_UPPER_BOUND"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ImplicitThisNode","l":"ImplicitThisNode(TypeMirror)","u":"%3Cinit%3E(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory.ScanState","l":"IN_PROGRESS"},{"p":"org.checkerframework.javacutil","c":"TreePathUtil","l":"inConstructor(TreePath)","u":"inConstructor(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.checker.lock","c":"LockStore","l":"inConstructorOrInitializer"},{"p":"org.checkerframework.common.util.count","c":"AnnotationStatistics","l":"incrementCount(Name)","u":"incrementCount(javax.lang.model.element.Name)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayAccessNode","l":"index"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayAccess","l":"index"},{"p":"org.checkerframework.dataflow.expression","c":"FormalParameter","l":"index"},{"p":"org.checkerframework.checker.index","c":"IndexAbstractTransfer","l":"IndexAbstractTransfer(CFAnalysis)","u":"%3Cinit%3E(org.checkerframework.framework.flow.CFAnalysis)"},{"p":"org.checkerframework.checker.index","c":"IndexChecker","l":"IndexChecker()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.index","c":"IndexMethodIdentifier","l":"IndexMethodIdentifier(AnnotatedTypeFactory)","u":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.index","c":"IndexRefinementInfo","l":"IndexRefinementInfo(TransferResult<CFValue, CFStore>, CFAbstractAnalysis<?, ?, ?>, BinaryOperationNode)","u":"%3Cinit%3E(org.checkerframework.dataflow.analysis.TransferResult,org.checkerframework.framework.flow.CFAbstractAnalysis,org.checkerframework.dataflow.cfg.node.BinaryOperationNode)"},{"p":"org.checkerframework.checker.index","c":"IndexRefinementInfo","l":"IndexRefinementInfo(TransferResult<CFValue, CFStore>, CFAbstractAnalysis<?, ?, ?>, Node, Node)","u":"%3Cinit%3E(org.checkerframework.dataflow.analysis.TransferResult,org.checkerframework.framework.flow.CFAbstractAnalysis,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.checker.index","c":"IndexUtil","l":"IndexUtil()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"InferenceResult","l":"InferenceResult()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"InferredValue.InferredTarget","l":"InferredTarget(TypeVariable, Collection<? extends AnnotationMirror>)","u":"%3Cinit%3E(javax.lang.model.type.TypeVariable,java.util.Collection)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"InferredValue.InferredType","l":"InferredType(AnnotatedTypeMirror)","u":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"InferredValue","l":"InferredValue()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.util.typeinference","c":"DefaultTypeArgumentInference","l":"inferTypeArgs(AnnotatedTypeFactory, ExpressionTree, ExecutableElement, AnnotatedTypeMirror.AnnotatedExecutableType)","u":"inferTypeArgs(org.checkerframework.framework.type.AnnotatedTypeFactory,com.sun.source.tree.ExpressionTree,javax.lang.model.element.ExecutableElement,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.framework.util.typeinference","c":"TypeArgumentInference","l":"inferTypeArgs(AnnotatedTypeFactory, ExpressionTree, ExecutableElement, AnnotatedTypeMirror.AnnotatedExecutableType)","u":"inferTypeArgs(org.checkerframework.framework.type.AnnotatedTypeFactory,com.sun.source.tree.ExpressionTree,javax.lang.model.element.ExecutableElement,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.common.reflection","c":"ReflectionResolver","l":"INIT"},{"p":"org.checkerframework.common.reflection","c":"ReflectionResolver","l":"INIT_LIST"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"init(ControlFlowGraph)","u":"init(org.checkerframework.dataflow.cfg.ControlFlowGraph)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer","l":"init(Map<String, Object>)","u":"init(java.util.Map)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizer","l":"init(Map<String, Object>)","u":"init(java.util.Map)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"init(Map<String, Object>)","u":"init(java.util.Map)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"StringCFGVisualizer","l":"init(Map<String, Object>)","u":"init(java.util.Map)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelations","l":"init(ProcessingEnvironment)","u":"init(javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"init(ProcessingEnvironment)","u":"init(javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"init(ProcessingEnvironment)","u":"init(javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.javacutil","c":"AbstractTypeProcessor","l":"init(ProcessingEnvironment)","u":"init(javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"initAnnoNames"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"initAnnos"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundChecker","l":"initChecker()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"initChecker()"},{"p":"org.checkerframework.framework.source","c":"AggregateChecker","l":"initChecker()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"initChecker()"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"initFields(ControlFlowGraph)","u":"initFields(org.checkerframework.dataflow.cfg.ControlFlowGraph)"},{"p":"org.checkerframework.dataflow.analysis","c":"BackwardAnalysisImpl","l":"initFields(ControlFlowGraph)","u":"initFields(org.checkerframework.dataflow.cfg.ControlFlowGraph)"},{"p":"org.checkerframework.dataflow.analysis","c":"ForwardAnalysisImpl","l":"initFields(ControlFlowGraph)","u":"initFields(org.checkerframework.dataflow.cfg.ControlFlowGraph)"},{"p":"org.checkerframework.dataflow.analysis","c":"BackwardTransferFunction","l":"initialExceptionalExitStore(UnderlyingAST)","u":"initialExceptionalExitStore(org.checkerframework.dataflow.cfg.UnderlyingAST)"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprTransfer","l":"initialExceptionalExitStore(UnderlyingAST)","u":"initialExceptionalExitStore(org.checkerframework.dataflow.cfg.UnderlyingAST)"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarTransfer","l":"initialExceptionalExitStore(UnderlyingAST)","u":"initialExceptionalExitStore(org.checkerframework.dataflow.cfg.UnderlyingAST)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"InitializationAnnotatedTypeFactory(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationChecker","l":"InitializationChecker()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory.InitializationQualifierHierarchy","l":"InitializationQualifierHierarchy()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"initializationStaticStore"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"initializationStore"},{"p":"org.checkerframework.checker.initialization","c":"InitializationStore","l":"InitializationStore(CFAbstractAnalysis<V, S, ?>, boolean)","u":"%3Cinit%3E(org.checkerframework.framework.flow.CFAbstractAnalysis,boolean)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationStore","l":"InitializationStore(S)","u":"%3Cinit%3E(S)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationTransfer","l":"InitializationTransfer(CFAbstractAnalysis<V, S, T>)","u":"%3Cinit%3E(org.checkerframework.framework.flow.CFAbstractAnalysis)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationVisitor","l":"InitializationVisitor(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.framework.type","c":"BoundsInitializer","l":"initializeBounds(AnnotatedTypeMirror.AnnotatedTypeVariable)","u":"initializeBounds(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"INITIALIZED"},{"p":"org.checkerframework.checker.initialization","c":"InitializationStore","l":"initializedFields"},{"p":"org.checkerframework.checker.initialization","c":"InitializationVisitor","l":"initializedFields"},{"p":"org.checkerframework.checker.initialization","c":"InitializationTransfer","l":"initializedFieldsAfterCall(MethodInvocationNode)","u":"initializedFieldsAfterCall(org.checkerframework.dataflow.cfg.node.MethodInvocationNode)"},{"p":"org.checkerframework.common.initializedfields","c":"InitializedFieldsAnnotatedTypeFactory","l":"InitializedFieldsAnnotatedTypeFactory(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.common.initializedfields","c":"InitializedFieldsChecker","l":"InitializedFieldsChecker()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.common.initializedfields","c":"InitializedFieldsTransfer","l":"InitializedFieldsTransfer(CFAnalysis)","u":"%3Cinit%3E(org.checkerframework.framework.flow.CFAnalysis)"},{"p":"org.checkerframework.framework.type","c":"BoundsInitializer","l":"initializeExtendsBound(AnnotatedTypeMirror.AnnotatedWildcardType)","u":"initializeExtendsBound(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"initializeMethodParameter(LocalVariableNode, V)","u":"initializeMethodParameter(org.checkerframework.dataflow.cfg.node.LocalVariableNode,V)"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy","l":"initializePolymorphicQualifiers()"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy","l":"initializeQualifierKindFields(Map<DefaultQualifierKindHierarchy.DefaultQualifierKind, Set<DefaultQualifierKindHierarchy.DefaultQualifierKind>>)","u":"initializeQualifierKindFields(java.util.Map)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis.FieldInitialValue","l":"initializer"},{"p":"org.checkerframework.common.reflection","c":"MethodValAnnotatedTypeFactory","l":"initializeReflectionResolution()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"initializeReflectionResolution()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayCreationNode","l":"initializers"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayCreation","l":"initializers"},{"p":"org.checkerframework.framework.type","c":"BoundsInitializer","l":"initializeSuperBound(AnnotatedTypeMirror.AnnotatedWildcardType)","u":"initializeSuperBound(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"initializeThisValue(AnnotationMirror, TypeMirror)","u":"initializeThisValue(javax.lang.model.element.AnnotationMirror,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.type","c":"BoundsInitializer","l":"initializeTypeArgs(AnnotatedTypeMirror.AnnotatedDeclaredType)","u":"initializeTypeArgs(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType)"},{"p":"org.checkerframework.dataflow.analysis","c":"BackwardTransferFunction","l":"initialNormalExitStore(UnderlyingAST, List<ReturnNode>)","u":"initialNormalExitStore(org.checkerframework.dataflow.cfg.UnderlyingAST,java.util.List)"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprTransfer","l":"initialNormalExitStore(UnderlyingAST, List<ReturnNode>)","u":"initialNormalExitStore(org.checkerframework.dataflow.cfg.UnderlyingAST,java.util.List)"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarTransfer","l":"initialNormalExitStore(UnderlyingAST, List<ReturnNode>)","u":"initialNormalExitStore(org.checkerframework.dataflow.cfg.UnderlyingAST,java.util.List)"},{"p":"org.checkerframework.dataflow.reachingdef","c":"ReachingDefinitionTransfer","l":"initialStore(UnderlyingAST, List<LocalVariableNode>)","u":"initialStore(org.checkerframework.dataflow.cfg.UnderlyingAST,java.util.List)"},{"p":"org.checkerframework.checker.lock","c":"LockTransfer","l":"initialStore(UnderlyingAST, List<LocalVariableNode>)","u":"initialStore(org.checkerframework.dataflow.cfg.UnderlyingAST,java.util.List)"},{"p":"org.checkerframework.dataflow.analysis","c":"ForwardTransferFunction","l":"initialStore(UnderlyingAST, List<LocalVariableNode>)","u":"initialStore(org.checkerframework.dataflow.cfg.UnderlyingAST,java.util.List)"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"ConstantPropagationTransfer","l":"initialStore(UnderlyingAST, List<LocalVariableNode>)","u":"initialStore(org.checkerframework.dataflow.cfg.UnderlyingAST,java.util.List)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"initialStore(UnderlyingAST, List<LocalVariableNode>)","u":"initialStore(org.checkerframework.dataflow.cfg.UnderlyingAST,java.util.List)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"initInitialInputs()"},{"p":"org.checkerframework.dataflow.analysis","c":"BackwardAnalysisImpl","l":"initInitialInputs()"},{"p":"org.checkerframework.dataflow.analysis","c":"ForwardAnalysisImpl","l":"initInitialInputs()"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileElementTypes","l":"injectRecordComponentType(Types, Element, AnnotatedTypeMirror.AnnotatedExecutableType)","u":"injectRecordComponentType(javax.lang.model.util.Types,javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"innerMostType(AnnotatedTypeMirror)","u":"innerMostType(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"inputs"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"inSameClass(Element, Element)","u":"inSameClass(javax.lang.model.element.Element,javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.ajava","c":"InsertAjavaAnnotations","l":"InsertAjavaAnnotations(Elements)","u":"%3Cinit%3E(javax.lang.model.util.Elements)"},{"p":"org.checkerframework.framework.ajava","c":"InsertAjavaAnnotations","l":"insertAnnotations(InputStream, String, String)","u":"insertAnnotations(java.io.InputStream,java.lang.String,java.lang.String)"},{"p":"org.checkerframework.framework.ajava","c":"InsertAjavaAnnotations","l":"insertAnnotations(String, String)","u":"insertAnnotations(java.lang.String,java.lang.String)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"insertExtendedNodeAfter(ExtendedNode, Node)","u":"insertExtendedNodeAfter(org.checkerframework.dataflow.cfg.builder.ExtendedNode,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"insertIntoStores(TransferResult<CFValue, CFStore>, JavaExpression, AnnotationMirror)","u":"insertIntoStores(org.checkerframework.dataflow.analysis.TransferResult,org.checkerframework.dataflow.expression.JavaExpression,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.lock","c":"LockStore","l":"insertLockPossiblyHeld(JavaExpression)","u":"insertLockPossiblyHeld(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"insertNodeAfter(T, Node)","u":"insertNodeAfter(T,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"insertNodeWithExceptionsAfter(Node, Set<TypeMirror>, Node)","u":"insertNodeWithExceptionsAfter(org.checkerframework.dataflow.cfg.node.Node,java.util.Set,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"insertOrRefine(JavaExpression, AnnotationMirror)","u":"insertOrRefine(org.checkerframework.dataflow.expression.JavaExpression,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"insertOrRefine(JavaExpression, AnnotationMirror, boolean)","u":"insertOrRefine(org.checkerframework.dataflow.expression.JavaExpression,javax.lang.model.element.AnnotationMirror,boolean)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"insertOrRefinePermitNondeterministic(JavaExpression, AnnotationMirror)","u":"insertOrRefinePermitNondeterministic(org.checkerframework.dataflow.expression.JavaExpression,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"insertThisValue(AnnotationMirror, TypeMirror)","u":"insertThisValue(javax.lang.model.element.AnnotationMirror,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"insertValue(JavaExpression, AnnotationMirror)","u":"insertValue(org.checkerframework.dataflow.expression.JavaExpression,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.lock","c":"LockStore","l":"insertValue(JavaExpression, CFValue, boolean)","u":"insertValue(org.checkerframework.dataflow.expression.JavaExpression,org.checkerframework.framework.flow.CFValue,boolean)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"insertValue(JavaExpression, V)","u":"insertValue(org.checkerframework.dataflow.expression.JavaExpression,V)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"insertValue(JavaExpression, V, boolean)","u":"insertValue(org.checkerframework.dataflow.expression.JavaExpression,V,boolean)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationStore","l":"insertValue(JavaExpression, V, boolean)","u":"insertValue(org.checkerframework.dataflow.expression.JavaExpression,V,boolean)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"insertValuePermitNondeterministic(JavaExpression, AnnotationMirror)","u":"insertValuePermitNondeterministic(org.checkerframework.dataflow.expression.JavaExpression,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"insertValuePermitNondeterministic(JavaExpression, V)","u":"insertValuePermitNondeterministic(org.checkerframework.dataflow.expression.JavaExpression,V)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"Node","l":"inSource"},{"p":"org.checkerframework.dataflow.cfg.node","c":"InstanceOfNode","l":"InstanceOfNode(InstanceOfTree, Node, LocalVariableNode, TypeMirror, Types)","u":"%3Cinit%3E(com.sun.source.tree.InstanceOfTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.LocalVariableNode,javax.lang.model.type.TypeMirror,javax.lang.model.util.Types)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"InstanceOfNode","l":"InstanceOfNode(InstanceOfTree, Node, TypeMirror, Types)","u":"%3Cinit%3E(com.sun.source.tree.InstanceOfTree,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.type.TypeMirror,javax.lang.model.util.Types)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"instanceOfTreeGetPattern(InstanceOfTree)","u":"instanceOfTreeGetPattern(com.sun.source.tree.InstanceOfTree)"},{"p":"org.checkerframework.checker.formatter.qual","c":"ConversionCategory","l":"INT"},{"p":"org.checkerframework.framework.qual","c":"LiteralKind","l":"INT"},{"p":"org.checkerframework.framework.qual","c":"TypeKind","l":"INT"},{"p":"org.checkerframework.checker.formatter.qual","c":"ConversionCategory","l":"INT_AND_TIME"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"INT_EVERYTHING"},{"p":"org.checkerframework.dataflow.cfg.node","c":"IntegerDivisionNode","l":"IntegerDivisionNode(BinaryTree, Node, Node)","u":"%3Cinit%3E(com.sun.source.tree.BinaryTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"IntegerLiteralNode","l":"IntegerLiteralNode(LiteralTree)","u":"%3Cinit%3E(com.sun.source.tree.LiteralTree)"},{"p":"org.checkerframework.common.value.util","c":"IntegerMath","l":"IntegerMath(int)","u":"%3Cinit%3E(int)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"IntegerRemainderNode","l":"IntegerRemainderNode(BinaryTree, Node, Node)","u":"%3Cinit%3E(com.sun.source.tree.BinaryTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.checker.signature","c":"SignatureAnnotatedTypeFactory","l":"INTERNAL_FORM"},{"p":"org.checkerframework.checker.lock","c":"LockStore","l":"internalVisualize(CFGVisualizer<CFValue, LockStore, ?>)","u":"internalVisualize(org.checkerframework.dataflow.cfg.visualize.CFGVisualizer)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessStore","l":"internalVisualize(CFGVisualizer<NullnessValue, NullnessStore, ?>)","u":"internalVisualize(org.checkerframework.dataflow.cfg.visualize.CFGVisualizer)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationStore","l":"internalVisualize(CFGVisualizer<V, S, ?>)","u":"internalVisualize(org.checkerframework.dataflow.cfg.visualize.CFGVisualizer)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"internalVisualize(CFGVisualizer<V, S, ?>)","u":"internalVisualize(org.checkerframework.dataflow.cfg.visualize.CFGVisualizer)"},{"p":"org.checkerframework.checker.interning","c":"InterningAnnotatedTypeFactory","l":"InterningAnnotatedTypeFactory(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.interning","c":"InterningChecker","l":"InterningChecker()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.interning","c":"InterningVisitor","l":"InterningVisitor(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.framework.test","c":"TypecheckExecutor","l":"interpretResults(TestConfiguration, CompilationResult)","u":"interpretResults(org.checkerframework.framework.test.TestConfiguration,org.checkerframework.framework.test.CompilationResult)"},{"p":"org.checkerframework.checker.formatter.qual","c":"ConversionCategory","l":"intersect(ConversionCategory, ConversionCategory)","u":"intersect(org.checkerframework.checker.formatter.qual.ConversionCategory,org.checkerframework.checker.formatter.qual.ConversionCategory)"},{"p":"org.checkerframework.checker.i18nformatter.qual","c":"I18nConversionCategory","l":"intersect(I18nConversionCategory, I18nConversionCategory)","u":"intersect(org.checkerframework.checker.i18nformatter.qual.I18nConversionCategory,org.checkerframework.checker.i18nformatter.qual.I18nConversionCategory)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"intersect(Range)","u":"intersect(org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.framework.qual","c":"TypeKind","l":"INTERSECTION"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"INTERSECTION_ARRAY"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"INTERSECTION_DECLARED"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"INTERSECTION_EXECUTABLE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"INTERSECTION_INTERSECTION"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"INTERSECTION_NONE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"INTERSECTION_NULL"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"INTERSECTION_PRIMITIVE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"INTERSECTION_TYPEVAR"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"INTERSECTION_UNION"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"INTERSECTION_WILDCARD"},{"p":"org.checkerframework.javacutil","c":"SystemUtil","l":"intersection(List<? extends T>, List<? extends T>)","u":"intersection(java.util.List,java.util.List)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"intFromDouble(double)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"intFromFloat(float)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"INTRANGE_FROMGTENEGONE_NAME"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"INTRANGE_FROMNONNEG_NAME"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"INTRANGE_FROMPOS_NAME"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"INTRANGE_NAME"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"intRange()"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"intRangeFromElement"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"intRangeToElement"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"INTVAL_NAME"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"intValValueElement"},{"p":"org.checkerframework.checker.formatter","c":"FormatterAnnotatedTypeFactory","l":"INVALIDFORMAT_NAME"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil","l":"invalidFormatAnnotationToErrorMessage(AnnotationMirror)","u":"invalidFormatAnnotationToErrorMessage(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"invalidFormatAnnotationToErrorMessage(AnnotationMirror)","u":"invalidFormatAnnotationToErrorMessage(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil","l":"invalidFormatValueElement"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"invariantArrayComponents"},{"p":"org.checkerframework.checker.initialization","c":"InitializationStore","l":"invariantFields"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"invokeCompiler()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"invokeConstructorFor(String, Class<?>[], Object[])","u":"invokeConstructorFor(java.lang.String,java.lang.Class[],java.lang.Object[])"},{"p":"org.checkerframework.framework.type.typeannotator","c":"IrrelevantTypeAnnotator","l":"IrrelevantTypeAnnotator(GenericAnnotatedTypeFactory, Set<? extends AnnotationMirror>)","u":"%3Cinit%3E(org.checkerframework.framework.type.GenericAnnotatedTypeFactory,java.util.Set)"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"IS_AT_LEAST_11_JVM"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"IS_AT_LEAST_14_JVM"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"IS_AT_LEAST_16_JVM"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"IS_AT_LEAST_17_JVM"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"IS_AT_LEAST_18_JVM"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"IS_AT_LEAST_9_JVM"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"IS_AT_MOST_11_JVM"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"IS_AT_MOST_14_JVM"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"IS_AT_MOST_16_JVM"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"IS_AT_MOST_17_JVM"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"IS_AT_MOST_18_JVM"},{"p":"org.checkerframework.framework.util.element","c":"ClassTypeParamApplier","l":"isAccepted()"},{"p":"org.checkerframework.framework.util.element","c":"MethodApplier","l":"isAccepted()"},{"p":"org.checkerframework.framework.util.element","c":"MethodTypeParamApplier","l":"isAccepted()"},{"p":"org.checkerframework.framework.util.element","c":"ParamApplier","l":"isAccepted()"},{"p":"org.checkerframework.framework.util.element","c":"SuperTypeApplier","l":"isAccepted()"},{"p":"org.checkerframework.framework.util.element","c":"TypeDeclarationApplier","l":"isAccepted()"},{"p":"org.checkerframework.framework.util.element","c":"VariableApplier","l":"isAccepted()"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory","l":"isAccumulatorAnnotation(AnnotationMirror)","u":"isAccumulatorAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"isAnnotatedInHierarchy(AnnotationMirror)","u":"isAnnotatedInHierarchy(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isAnonymous(TypeMirror)","u":"isAnonymous(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isAnonymousConstructor(MethodTree)","u":"isAnonymousConstructor(com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil.FormatCall","l":"isArgumentNull(TypeMirror)","u":"isArgumentNull(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.type","c":"SyntheticArrays","l":"isArrayClone(AnnotatedTypeMirror, Element)","u":"isArrayClone(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.Element)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isArrayLengthAccess(Tree)","u":"isArrayLengthAccess(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.util","c":"NodeUtils","l":"isArrayLengthFieldAccess(Node)","u":"isArrayLengthFieldAccess(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil","l":"isAsFormatCall(MethodInvocationNode, AnnotatedTypeFactory)","u":"isAsFormatCall(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.formatter.qual","c":"ConversionCategory","l":"isAssignableFrom(Class<?>)","u":"isAssignableFrom(java.lang.Class)"},{"p":"org.checkerframework.checker.i18nformatter.qual","c":"I18nConversionCategory","l":"isAssignableFrom(Class<?>)","u":"isAssignableFrom(java.lang.Class)"},{"p":"org.checkerframework.framework.util.typeinference","c":"TypeArgInferenceUtil","l":"isATarget(AnnotatedTypeMirror, Set<TypeVariable>)","u":"isATarget(org.checkerframework.framework.type.AnnotatedTypeMirror,java.util.Set)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"isAutoGeneratedRecordMember(Element)","u":"isAutoGeneratedRecordMember(javax.lang.model.element.Element)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isAutoGeneratedRecordMember(Tree)","u":"isAutoGeneratedRecordMember(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isBinaryComparison(BinaryTree)","u":"isBinaryComparison(com.sun.source.tree.BinaryTree)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"isBindingVariable(Element)","u":"isBindingVariable(javax.lang.model.element.Element)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isBooleanType(TypeMirror)","u":"isBooleanType(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.dataflow.util","c":"NodeUtils","l":"isBooleanTypeNode(Node)","u":"isBooleanTypeNode(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"isBottom()"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"Constant","l":"isBottom()"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy.DefaultQualifierKind","l":"isBottom()"},{"p":"org.checkerframework.framework.util","c":"QualifierKind","l":"isBottom()"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isBoxedFloating(TypeMirror)","u":"isBoxedFloating(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isBoxedPrimitive(TypeMirror)","u":"isBoxedPrimitive(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isBoxOf(TypeMirror, TypeMirror)","u":"isBoxOf(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"AutoValueSupport","l":"isBuilderBuildMethod(ExecutableElement)","u":"isBuilderBuildMethod(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"BuilderFrameworkSupport","l":"isBuilderBuildMethod(ExecutableElement)","u":"isBuilderBuildMethod(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"LombokSupport","l":"isBuilderBuildMethod(ExecutableElement)","u":"isBuilderBuildMethod(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileUtil.AnnotationFileType","l":"isBuiltIn()"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"isByteEverything()"},{"p":"org.checkerframework.framework.util","c":"TreePathCacher","l":"isCached(Tree)","u":"isCached(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForPropagationTreeAnnotator","l":"isCallToKeyset(ExpressionTree)","u":"isCallToKeyset(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileUtil","l":"isCanonicalConstructor(ExecutableElement, Types)","u":"isCanonicalConstructor(javax.lang.model.element.ExecutableElement,javax.lang.model.util.Types)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isCaptured(TypeMirror)","u":"isCaptured(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isCapturedTypeVariable(TypeMirror)","u":"isCapturedTypeVariable(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isCaseRule(CaseTree)","u":"isCaseRule(com.sun.source.tree.CaseTree)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"isCharEverything()"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isCharType(TypeMirror)","u":"isCharType(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isClass(TypeMirror)","u":"isClass(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"isClassElement(Element)","u":"isClassElement(javax.lang.model.element.Element)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isClassLiteral(Tree)","u":"isClassLiteral(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isClassTree(Tree)","u":"isClassTree(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isClassType(TypeMirror)","u":"isClassType(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileUtil.AnnotationFileType","l":"isCommandLine()"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"isCompactCanonicalRecordConstructor(Element)","u":"isCompactCanonicalRecordConstructor(javax.lang.model.element.Element)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isCompactCanonicalRecordConstructor(MethodTree)","u":"isCompactCanonicalRecordConstructor(com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"isCompileTimeConstant(Element)","u":"isCompileTimeConstant(javax.lang.model.element.Element)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isCompileTimeString(ExpressionTree)","u":"isCompileTimeString(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"InferenceResult","l":"isComplete(Set<TypeVariable>)","u":"isComplete(java.util.Set)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"isConstant()"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"Constant","l":"isConstant()"},{"p":"org.checkerframework.dataflow.util","c":"NodeUtils","l":"isConstantBoolean(Node, boolean)","u":"isConstantBoolean(org.checkerframework.dataflow.cfg.node.Node,boolean)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isConstructor(MethodTree)","u":"isConstructor(com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"isContainedBy(AnnotatedTypeMirror, AnnotatedTypeMirror, boolean)","u":"isContainedBy(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,boolean)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"isContainedMany(List<? extends AnnotatedTypeMirror>, List<? extends AnnotatedTypeMirror>, List<Integer>)","u":"isContainedMany(java.util.List,java.util.List,java.util.List)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"isContainedWithinBounds(AnnotatedTypeMirror, AnnotatedTypeMirror, AnnotatedTypeMirror, boolean)","u":"isContainedWithinBounds(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedDeclaredType","l":"isDeclaration()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedTypeVariable","l":"isDeclaration()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"isDeclaration()"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"isDeclarationAnnotation(AnnotationMirror)","u":"isDeclarationAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"isDeclarationOfJavaLangEnum(Types, Elements, AnnotatedTypeMirror)","u":"isDeclarationOfJavaLangEnum(javax.lang.model.util.Types,javax.lang.model.util.Elements,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isDeclarationTree(Tree)","u":"isDeclarationTree(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isDeclaredOfName(TypeMirror, CharSequence)","u":"isDeclaredOfName(javax.lang.model.type.TypeMirror,java.lang.CharSequence)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isDefaultCaseTree(CaseTree)","u":"isDefaultCaseTree(com.sun.source.tree.CaseTree)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"isDefaultSuperConstructorCall(StatementTree)","u":"isDefaultSuperConstructorCall(com.sun.source.tree.StatementTree)"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayAccess","l":"isDeterministic(AnnotationProvider)","u":"isDeterministic(org.checkerframework.javacutil.AnnotationProvider)"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayCreation","l":"isDeterministic(AnnotationProvider)","u":"isDeterministic(org.checkerframework.javacutil.AnnotationProvider)"},{"p":"org.checkerframework.dataflow.expression","c":"BinaryOperation","l":"isDeterministic(AnnotationProvider)","u":"isDeterministic(org.checkerframework.javacutil.AnnotationProvider)"},{"p":"org.checkerframework.dataflow.expression","c":"ClassName","l":"isDeterministic(AnnotationProvider)","u":"isDeterministic(org.checkerframework.javacutil.AnnotationProvider)"},{"p":"org.checkerframework.dataflow.expression","c":"FieldAccess","l":"isDeterministic(AnnotationProvider)","u":"isDeterministic(org.checkerframework.javacutil.AnnotationProvider)"},{"p":"org.checkerframework.dataflow.expression","c":"FormalParameter","l":"isDeterministic(AnnotationProvider)","u":"isDeterministic(org.checkerframework.javacutil.AnnotationProvider)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"isDeterministic(AnnotationProvider)","u":"isDeterministic(org.checkerframework.javacutil.AnnotationProvider)"},{"p":"org.checkerframework.dataflow.expression","c":"LocalVariable","l":"isDeterministic(AnnotationProvider)","u":"isDeterministic(org.checkerframework.javacutil.AnnotationProvider)"},{"p":"org.checkerframework.dataflow.expression","c":"MethodCall","l":"isDeterministic(AnnotationProvider)","u":"isDeterministic(org.checkerframework.javacutil.AnnotationProvider)"},{"p":"org.checkerframework.dataflow.expression","c":"ThisReference","l":"isDeterministic(AnnotationProvider)","u":"isDeterministic(org.checkerframework.javacutil.AnnotationProvider)"},{"p":"org.checkerframework.dataflow.expression","c":"UnaryOperation","l":"isDeterministic(AnnotationProvider)","u":"isDeterministic(org.checkerframework.javacutil.AnnotationProvider)"},{"p":"org.checkerframework.dataflow.expression","c":"Unknown","l":"isDeterministic(AnnotationProvider)","u":"isDeterministic(org.checkerframework.javacutil.AnnotationProvider)"},{"p":"org.checkerframework.dataflow.expression","c":"ValueLiteral","l":"isDeterministic(AnnotationProvider)","u":"isDeterministic(org.checkerframework.javacutil.AnnotationProvider)"},{"p":"org.checkerframework.dataflow.util","c":"PurityUtils","l":"isDeterministic(AnnotationProvider, ExecutableElement)","u":"isDeterministic(org.checkerframework.javacutil.AnnotationProvider,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.dataflow.util","c":"PurityUtils","l":"isDeterministic(AnnotationProvider, MethodTree)","u":"isDeterministic(org.checkerframework.javacutil.AnnotationProvider,com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isDiamondTree(Tree)","u":"isDiamondTree(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"isDirectlyMarkedUIThroughInference(Tree)","u":"isDirectlyMarkedUIThroughInference(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"isEffectivelyFinal(Element)","u":"isEffectivelyFinal(javax.lang.model.element.Element)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"isElementFromByteCode(Element)","u":"isElementFromByteCode(javax.lang.model.element.Element)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"isElementFromSourceCode(Element)","u":"isElementFromSourceCode(javax.lang.model.element.Element)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis.Worklist","l":"isEmpty()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"RegularBlock","l":"isEmpty()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"RegularBlockImpl","l":"isEmpty()"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorMap","l":"isEmpty()"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"isEmpty()"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsChecker","l":"isEnabled(AccumulationChecker.AliasAnalysis)","u":"isEnabled(org.checkerframework.common.accumulation.AccumulationChecker.AliasAnalysis)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationChecker","l":"isEnabled(AccumulationChecker.AliasAnalysis)","u":"isEnabled(org.checkerframework.common.accumulation.AccumulationChecker.AliasAnalysis)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"isEnum(AnnotatedTypeMirror)","u":"isEnum(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isEnumSuperCall(MethodInvocationTree)","u":"isEnumSuperCall(com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isErasedSubtype(TypeMirror, TypeMirror, Types)","u":"isErasedSubtype(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror,javax.lang.model.util.Types)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"isError(Element)","u":"isError(javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"isExplicitlyExtendsBounded(AnnotatedTypeMirror.AnnotatedWildcardType)","u":"isExplicitlyExtendsBounded(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"isExplicitlySuperBounded(AnnotatedTypeMirror.AnnotatedWildcardType)","u":"isExplicitlySuperBounded(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isExplicitThisDereference(ExpressionTree)","u":"isExplicitThisDereference(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isExprConstTrue(ExpressionTree)","u":"isExprConstTrue(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesError","l":"isExpressionError(String)","u":"isExpressionError(java.lang.String)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isExpressionTree(Tree)","u":"isExpressionTree(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"isFbcBottom(AnnotatedTypeMirror)","u":"isFbcBottom(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"isFbcBottom(AnnotationMirror)","u":"isFbcBottom(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isFieldAccess(Tree)","u":"isFieldAccess(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationStore","l":"isFieldInitialized(Element)","u":"isFieldInitialized(javax.lang.model.element.Element)"},{"p":"org.checkerframework.dataflow.expression","c":"FieldAccess","l":"isFinal()"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"isFinal(Element)","u":"isFinal(javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnostic","l":"isFixable()"},{"p":"org.checkerframework.javacutil","c":"TypeKindUtils","l":"isFloatingPoint(TypeKind)","u":"isFloatingPoint(javax.lang.model.type.TypeKind)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isFloatingPoint(TypeMirror)","u":"isFloatingPoint(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isFloatingPrimitive(TypeMirror)","u":"isFloatingPrimitive(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.util","c":"JavaExpressionParseUtil.JavaExpressionParseException","l":"isFlowParseError()"},{"p":"org.checkerframework.checker.i18nformatter.util","c":"I18nFormatUtil","l":"isFormat(String)","u":"isFormat(java.lang.String)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil","l":"isFormatMethodCall(MethodInvocationTree, AnnotatedTypeFactory)","u":"isFormatMethodCall(com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"isFromByteCode(Element)","u":"isFromByteCode(javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"isFromStubFile(Element)","u":"isFromStubFile(javax.lang.model.element.Element)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isFunctionalInterface(TypeMirror, ProcessingEnvironment)","u":"isFunctionalInterface(javax.lang.model.type.TypeMirror,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"BuilderFrameworkSupportUtils","l":"isGuavaImmutableType(TypeMirror)","u":"isGuavaImmutableType(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"isHasFormatCall(MethodInvocationNode, AnnotatedTypeFactory)","u":"isHasFormatCall(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsAnalysis","l":"isIgnoredExceptionType(TypeMirror)","u":"isIgnoredExceptionType(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"isIgnoredExceptionType(TypeMirror)","u":"isIgnoredExceptionType(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"isImmutable(TypeMirror)","u":"isImmutable(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"isImmutable(TypeMirror)","u":"isImmutable(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"isImmutable(TypeMirror)","u":"isImmutable(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isImmutableTypeInJdk(TypeMirror)","u":"isImmutableTypeInJdk(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isImplicitlyTypedLambda(Tree)","u":"isImplicitlyTypedLambda(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.index","c":"IndexMethodIdentifier","l":"isIndexOfString(Tree)","u":"isIndexOfString(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"isInitializationAnnotation(AnnotationMirror)","u":"isInitializationAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"isInitialized(AnnotatedTypeMirror)","u":"isInitialized(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"isInitialized(AnnotationMirror)","u":"isInitialized(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"isInitializedForFrame(AnnotatedTypeMirror, TypeMirror)","u":"isInitializedForFrame(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.taglet","c":"ManualTaglet","l":"isInlineTag()"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy.DefaultQualifierKind","l":"isInSameHierarchyAs(QualifierKind)","u":"isInSameHierarchyAs(org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.framework.util","c":"QualifierKind","l":"isInSameHierarchyAs(QualifierKind)","u":"isInSameHierarchyAs(org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"isInt()"},{"p":"org.checkerframework.javacutil","c":"TypeKindUtils","l":"isIntegral(TypeKind)","u":"isIntegral(javax.lang.model.type.TypeKind)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isIntegralPrimitive(TypeMirror)","u":"isIntegralPrimitive(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isIntegralPrimitiveOrBoxed(TypeMirror)","u":"isIntegralPrimitiveOrBoxed(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.common.value.util","c":"NumberMath","l":"isIntegralZero(Number)","u":"isIntegralZero(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"isIntEverything()"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"isIntRange(AnnotationMirror)","u":"isIntRange(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"isIntRange(AnnotationMirrorSet)","u":"isIntRange(org.checkerframework.javacutil.AnnotationMirrorSet)"},{"p":"org.checkerframework.framework.util","c":"DefaultAnnotationFormatter","l":"isInvisibleQualified(AnnotationMirror)","u":"isInvisibleQualified(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.interning","c":"InterningVisitor","l":"isInvocationOfEquals(MethodInvocationTree)","u":"isInvocationOfEquals(com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"AFConstraint","l":"isIrreducible(Set<TypeVariable>)","u":"isIrreducible(java.util.Set)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"isIsFormatCall(MethodInvocationNode, AnnotatedTypeFactory)","u":"isIsFormatCall(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"isJavaDiagnosticLineContinuation(String)","u":"isJavaDiagnosticLineContinuation(java.lang.String)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"isJavaDiagnosticLineStart(String)","u":"isJavaDiagnosticLineStart(java.lang.String)"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"isJavaFile(File)","u":"isJavaFile(java.io.File)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"isJavaLangAnnotation(AnnotatedTypeMirror)","u":"isJavaLangAnnotation(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"isJavaTestFile(File)","u":"isJavaTestFile(java.io.File)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnnotatedTypeFactory","l":"isKeyForMap(String, ExpressionTree)","u":"isKeyForMap(java.lang.String,com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.checker.index","c":"IndexMethodIdentifier","l":"isLengthOfMethodInvocation(ExecutableElement)","u":"isLengthOfMethodInvocation(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.index","c":"IndexMethodIdentifier","l":"isLengthOfMethodInvocation(Node)","u":"isLengthOfMethodInvocation(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.checker.index","c":"IndexMethodIdentifier","l":"isLengthOfMethodInvocation(Tree)","u":"isLengthOfMethodInvocation(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanAnnotatedTypeFactory","l":"isLessThan(AnnotationMirror, String)","u":"isLessThan(javax.lang.model.element.AnnotationMirror,java.lang.String)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanAnnotatedTypeFactory","l":"isLessThan(Tree, String)","u":"isLessThan(com.sun.source.tree.Tree,java.lang.String)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanAnnotatedTypeFactory","l":"isLessThanByValue(Tree, String, TreePath)","u":"isLessThanByValue(com.sun.source.tree.Tree,java.lang.String,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"isLessThanLengthOf(String)","u":"isLessThanLengthOf(java.lang.String)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"isLessThanLengthOf(String)","u":"isLessThanLengthOf(java.lang.String)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"isLessThanLengthOfAny(List<String>)","u":"isLessThanLengthOfAny(java.util.List)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"isLessThanLengthOfAny(List<String>)","u":"isLessThanLengthOfAny(java.util.List)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"isLessThanLengthQualifier()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"isLessThanLengthQualifier()"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanAnnotatedTypeFactory","l":"isLessThanOrEqual(AnnotationMirror, String)","u":"isLessThanOrEqual(javax.lang.model.element.AnnotationMirror,java.lang.String)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanAnnotatedTypeFactory","l":"isLessThanOrEqual(Tree, String)","u":"isLessThanOrEqual(com.sun.source.tree.Tree,java.lang.String)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"isLessThanOrEqualTo(String)","u":"isLessThanOrEqualTo(java.lang.String)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"isLessThanOrEqualTo(String)","u":"isLessThanOrEqualTo(java.lang.String)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"isLiteral()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.UpperBoundLiteralQualifier","l":"isLiteral()"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"isLocalVariable(Element)","u":"isLocalVariable(javax.lang.model.element.Element)"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker.PurityCheckerHelper","l":"isLocalVariable(ExpressionTree)","u":"isLocalVariable(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isLocalVariable(Tree)","u":"isLocalVariable(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"isLongEverything()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"Node","l":"isLValue()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"isMakeFormatCall(MethodInvocationNode, AnnotatedTypeFactory)","u":"isMakeFormatCall(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"isMapGet(Node)","u":"isMapGet(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.checker.index","c":"IndexMethodIdentifier","l":"isMathMax(Tree)","u":"isMathMax(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.index","c":"IndexMethodIdentifier","l":"isMathMin(Tree)","u":"isMathMin(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"isMathMin(Tree)","u":"isMathMin(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.index","c":"IndexMethodIdentifier","l":"isMathRandom(Tree, ProcessingEnvironment)","u":"isMathRandom(com.sun.source.tree.Tree,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"isMethod(ExecutableElement, ExecutableElement, ProcessingEnvironment)","u":"isMethod(javax.lang.model.element.ExecutableElement,javax.lang.model.element.ExecutableElement,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isMethodAccess(Tree)","u":"isMethodAccess(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.util","c":"NodeUtils","l":"isMethodInvocation(Node, ExecutableElement, ProcessingEnvironment)","u":"isMethodInvocation(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.ExecutableElement,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isMethodInvocation(Tree, ExecutableElement, ProcessingEnvironment)","u":"isMethodInvocation(com.sun.source.tree.Tree,javax.lang.model.element.ExecutableElement,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isMethodInvocation(Tree, List<ExecutableElement>, ProcessingEnvironment)","u":"isMethodInvocation(com.sun.source.tree.Tree,java.util.List,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor.OverrideChecker","l":"isMethodReference"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"isMonotonicUpdate(FieldAccess, V)","u":"isMonotonicUpdate(org.checkerframework.dataflow.expression.FieldAccess,V)"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"isNegativeOrZero()"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"isNegOne()"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"isNoArgumentConstructor(Tree)","u":"isNoArgumentConstructor(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"isNonNegative()"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundAnnotatedTypeFactory","l":"isNonNegative(Tree)","u":"isNonNegative(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"isNonNullOrAlias(AnnotationMirror)","u":"isNonNullOrAlias(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationTransfer","l":"isNotFullyInitializedReceiver(MethodTree)","u":"isNotFullyInitializedReceiver(com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"isNotFullyInitializedReceiver(MethodTree)","u":"isNotFullyInitializedReceiver(com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"isNothing()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"isNullableOrAlias(AnnotationMirror)","u":"isNullableOrAlias(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isNullExpression(Tree)","u":"isNullExpression(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"isNullnessAnnotation(AnnotationMirror)","u":"isNullnessAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"TypeKindUtils","l":"isNumeric(TypeKind)","u":"isNumeric(javax.lang.model.type.TypeKind)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isNumeric(TypeMirror)","u":"isNumeric(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isNumericBoxed(TypeMirror)","u":"isNumericBoxed(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"isNumericOrBoxed(TypeMirror)","u":"isNumericOrBoxed(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"isObject(TypeElement)","u":"isObject(javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isObject(TypeMirror)","u":"isObject(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults.BoundType","l":"isOneOf(QualifierDefaults.BoundType...)","u":"isOneOf(org.checkerframework.framework.util.defaults.QualifierDefaults.BoundType...)"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileElementTypes","l":"isParsing()"},{"p":"org.checkerframework.checker.guieffect","c":"Effect","l":"isPoly()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"isPoly()"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy.DefaultQualifierKind","l":"isPoly()"},{"p":"org.checkerframework.framework.util","c":"QualifierKind","l":"isPoly()"},{"p":"org.checkerframework.framework.type","c":"ElementQualifierHierarchy","l":"isPolymorphicQualifier(AnnotationMirror)","u":"isPolymorphicQualifier(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"NoElementQualifierHierarchy","l":"isPolymorphicQualifier(AnnotationMirror)","u":"isPolymorphicQualifier(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"isPolymorphicQualifier(AnnotationMirror)","u":"isPolymorphicQualifier(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"isPolymorphicType(TypeElement)","u":"isPolymorphicType(javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessStore","l":"isPolyNullNonNull"},{"p":"org.checkerframework.checker.nullness","c":"NullnessValue","l":"isPolyNullNonNull"},{"p":"org.checkerframework.checker.nullness","c":"NullnessStore","l":"isPolyNullNonNull()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessStore","l":"isPolyNullNull"},{"p":"org.checkerframework.checker.nullness","c":"NullnessValue","l":"isPolyNullNull"},{"p":"org.checkerframework.checker.nullness","c":"NullnessStore","l":"isPolyNullNull()"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory","l":"isPredicate(AnnotationMirror)","u":"isPredicate(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory","l":"isPredicateSubtype(String, String)","u":"isPredicateSubtype(java.lang.String,java.lang.String)"},{"p":"org.checkerframework.checker.nullness.util","c":"Opt","l":"isPresent(Object)","u":"isPresent(java.lang.Object)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"isPrimarySubtype(AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"isPrimarySubtype(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isPrimitive(TypeMirror)","u":"isPrimitive(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isPrimitiveOrBoxed(TypeMirror)","u":"isPrimitiveOrBoxed(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker.PurityResult","l":"isPure(EnumSet<Pure.Kind>)","u":"isPure(java.util.EnumSet)"},{"p":"org.checkerframework.checker.index","c":"IndexMethodIdentifier","l":"isRandomNextDouble(Tree, ProcessingEnvironment)","u":"isRandomNextDouble(com.sun.source.tree.Tree,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"isRandomNextInt(Tree)","u":"isRandomNextInt(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.index","c":"IndexMethodIdentifier","l":"isRandomNextInt(Tree, ProcessingEnvironment)","u":"isRandomNextInt(com.sun.source.tree.Tree,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"isRecordAccessor(ExecutableElement)","u":"isRecordAccessor(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.common.reflection","c":"DefaultReflectionResolver","l":"isReflectiveMethodInvocation(MethodInvocationTree)","u":"isReflectiveMethodInvocation(com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.common.reflection","c":"ReflectionResolver","l":"isReflectiveMethodInvocation(MethodInvocationTree)","u":"isReflectiveMethodInvocation(com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.checker.regex.util","c":"RegexUtil","l":"isRegex(char)"},{"p":"org.checkerframework.checker.regex.util","c":"RegexUtil","l":"isRegex(String)","u":"isRegex(java.lang.String)"},{"p":"org.checkerframework.checker.regex.util","c":"RegexUtil","l":"isRegex(String, int)","u":"isRegex(java.lang.String,int)"},{"p":"org.checkerframework.checker.signedness","c":"SignednessAnnotatedTypeFactory","l":"isRelevant(TypeMirror)","u":"isRelevant(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"isRelevant(TypeMirror)","u":"isRelevant(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"isRunning"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"isRunning()"},{"p":"org.checkerframework.dataflow.analysis","c":"Analysis","l":"isRunning()"},{"p":"org.checkerframework.checker.guieffect","c":"Effect","l":"isSafe()"},{"p":"org.checkerframework.javacutil","c":"TypeAnnotationUtils","l":"isSameTAPosition(TypeAnnotationPosition, TypeAnnotationPosition)","u":"isSameTAPosition(com.sun.tools.javac.code.TypeAnnotationPosition,com.sun.tools.javac.code.TypeAnnotationPosition)"},{"p":"org.checkerframework.javacutil","c":"TypeAnnotationUtils","l":"isSameTAPositionExceptTreePos(TypeAnnotationPosition, TypeAnnotationPosition)","u":"isSameTAPositionExceptTreePos(com.sun.tools.javac.code.TypeAnnotationPosition,com.sun.tools.javac.code.TypeAnnotationPosition)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isSelfAccess(ExpressionTree)","u":"isSelfAccess(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.checker.index","c":"IndexUtil","l":"isSequenceType(TypeMirror)","u":"isSequenceType(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"isShortEverything()"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"isSideEffectFree(AnnotatedTypeFactory, ExecutableElement)","u":"isSideEffectFree(org.checkerframework.framework.type.AnnotatedTypeFactory,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.dataflow.util","c":"PurityUtils","l":"isSideEffectFree(AnnotationProvider, ExecutableElement)","u":"isSideEffectFree(org.checkerframework.javacutil.AnnotationProvider,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.dataflow.util","c":"PurityUtils","l":"isSideEffectFree(AnnotationProvider, MethodTree)","u":"isSideEffectFree(org.checkerframework.javacutil.AnnotationProvider,com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"isSideEffectFree(ExecutableElement)","u":"isSideEffectFree(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"isSideEffectFree(ExecutableElement)","u":"isSideEffectFree(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.javacutil","c":"AnnotationProvider","l":"isSideEffectFree(ExecutableElement)","u":"isSideEffectFree(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.javacutil","c":"BasicAnnotationProvider","l":"isSideEffectFree(ExecutableElement)","u":"isSideEffectFree(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isSpecificFieldAccess(Tree, VariableElement)","u":"isSpecificFieldAccess(com.sun.source.tree.Tree,javax.lang.model.element.VariableElement)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FieldAccessNode","l":"isStatic()"},{"p":"org.checkerframework.dataflow.expression","c":"FieldAccess","l":"isStatic()"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"isStatic(Element)","u":"isStatic(javax.lang.model.element.Element)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"isString(TypeElement)","u":"isString(javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isString(TypeMirror)","u":"isString(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isStringCompoundConcatenation(CompoundAssignmentTree)","u":"isStringCompoundConcatenation(com.sun.source.tree.CompoundAssignmentTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isStringConcatenation(Tree)","u":"isStringConcatenation(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileUtil.AnnotationFileType","l":"isStub()"},{"p":"org.checkerframework.checker.formatter.qual","c":"ConversionCategory","l":"isSubsetOf(ConversionCategory, ConversionCategory)","u":"isSubsetOf(org.checkerframework.checker.formatter.qual.ConversionCategory,org.checkerframework.checker.formatter.qual.ConversionCategory)"},{"p":"org.checkerframework.checker.i18nformatter.qual","c":"I18nConversionCategory","l":"isSubsetOf(I18nConversionCategory, I18nConversionCategory)","u":"isSubsetOf(org.checkerframework.checker.i18nformatter.qual.I18nConversionCategory,org.checkerframework.checker.i18nformatter.qual.I18nConversionCategory)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"isSubtype(AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"isSubtype(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"TypeHierarchy","l":"isSubtype(AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"isSubtype(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnnotatedTypeFactory.KeyForTypeHierarchy","l":"isSubtype(AnnotatedTypeMirror, AnnotatedTypeMirror, AnnotationMirror)","u":"isSubtype(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"isSubtype(AnnotatedTypeMirror, AnnotatedTypeMirror, AnnotationMirror)","u":"isSubtype(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory.UpperBoundQualifierHierarchy","l":"isSubtype(AnnotationMirror, AnnotationMirror)","u":"isSubtype(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory.AccumulationQualifierHierarchy","l":"isSubtype(AnnotationMirror, AnnotationMirror)","u":"isSubtype(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.aliasing","c":"AliasingAnnotatedTypeFactory.AliasingQualifierHierarchy","l":"isSubtype(AnnotationMirror, AnnotationMirror)","u":"isSubtype(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.reflection","c":"ClassValAnnotatedTypeFactory.ClassValQualifierHierarchy","l":"isSubtype(AnnotationMirror, AnnotationMirror)","u":"isSubtype(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.reflection","c":"MethodValAnnotatedTypeFactory.MethodValQualifierHierarchy","l":"isSubtype(AnnotationMirror, AnnotationMirror)","u":"isSubtype(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"MostlyNoElementQualifierHierarchy","l":"isSubtype(AnnotationMirror, AnnotationMirror)","u":"isSubtype(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"NoElementQualifierHierarchy","l":"isSubtype(AnnotationMirror, AnnotationMirror)","u":"isSubtype(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"isSubtype(AnnotationMirror, AnnotationMirror)","u":"isSubtype(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"isSubtype(Collection<? extends AnnotationMirror>, Collection<? extends AnnotationMirror>)","u":"isSubtype(java.util.Collection,java.util.Collection)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"isSubtype(UBQualifier)","u":"isSubtype(org.checkerframework.checker.index.upperbound.UBQualifier)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"isSubtype(UBQualifier)","u":"isSubtype(org.checkerframework.checker.index.upperbound.UBQualifier)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.UpperBoundLiteralQualifier","l":"isSubtype(UBQualifier)","u":"isSubtype(org.checkerframework.checker.index.upperbound.UBQualifier)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.UpperBoundUnknownQualifier","l":"isSubtype(UBQualifier)","u":"isSubtype(org.checkerframework.checker.index.upperbound.UBQualifier)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"isSubtypeCaching(AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"isSubtypeCaching(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory.InitializationQualifierHierarchy","l":"isSubtypeInitialization(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind)","u":"isSubtypeInitialization(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy.DefaultQualifierKind","l":"isSubtypeOf(QualifierKind)","u":"isSubtypeOf(org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.framework.util","c":"QualifierKind","l":"isSubtypeOf(QualifierKind)","u":"isSubtypeOf(org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"isSubtypeVisitHistory"},{"p":"org.checkerframework.checker.fenum","c":"FenumAnnotatedTypeFactory.FenumQualifierHierarchy","l":"isSubtypeWithElements(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind)","u":"isSubtypeWithElements(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory.NullnessQualifierHierarchy","l":"isSubtypeWithElements(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind)","u":"isSubtypeWithElements(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory.UnitsQualifierHierarchy","l":"isSubtypeWithElements(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind)","u":"isSubtypeWithElements(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.framework.type","c":"MostlyNoElementQualifierHierarchy","l":"isSubtypeWithElements(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind)","u":"isSubtypeWithElements(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.framework.type","c":"SubtypeIsSubsetQualifierHierarchy","l":"isSubtypeWithElements(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind)","u":"isSubtypeWithElements(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.framework.type","c":"SubtypeIsSupersetQualifierHierarchy","l":"isSubtypeWithElements(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind)","u":"isSubtypeWithElements(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.dataflow.cfg","c":"CFGProcessor.CFGProcessResult","l":"isSuccess()"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isSuperConstructorCall(MethodInvocationTree)","u":"isSuperConstructorCall(com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.framework.util","c":"FieldInvariants","l":"isSuperInvariant(FieldInvariants, AnnotatedTypeFactory)","u":"isSuperInvariant(org.checkerframework.framework.util.FieldInvariants,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotationClassLoader","l":"isSupportedAnnotationClass(Class<? extends Annotation>)","u":"isSupportedAnnotationClass(java.lang.Class)"},{"p":"org.checkerframework.framework.type","c":"AnnotationClassLoader","l":"isSupportedAnnotationClass(Class<? extends Annotation>)","u":"isSupportedAnnotationClass(java.lang.Class)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"isSupportedQualifier(AnnotationMirror)","u":"isSupportedQualifier(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.util.debug","c":"TypeOutputtingChecker.GeneralAnnotatedTypeFactory","l":"isSupportedQualifier(AnnotationMirror)","u":"isSupportedQualifier(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"isSupportedQualifier(Class<? extends Annotation>)","u":"isSupportedQualifier(java.lang.Class)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"isSupportedQualifier(String)","u":"isSupportedQualifier(java.lang.String)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isSwitchStatement(Tree)","u":"isSwitchStatement(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssignmentNode","l":"isSynthetic()"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isSynthetic(ExecutableElement)","u":"isSynthetic(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isSynthetic(MethodTree)","u":"isSynthetic(com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isThisConstructorCall(MethodInvocationTree)","u":"isThisConstructorCall(com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"isThrowable(TypeMirror)","u":"isThrowable(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"AutoValueSupport","l":"isToBuilderMethod(ExecutableElement)","u":"isToBuilderMethod(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"BuilderFrameworkSupport","l":"isToBuilderMethod(ExecutableElement)","u":"isToBuilderMethod(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"LombokSupport","l":"isToBuilderMethod(ExecutableElement)","u":"isToBuilderMethod(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"Constant","l":"isTop()"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy.DefaultQualifierKind","l":"isTop()"},{"p":"org.checkerframework.framework.util","c":"QualifierKind","l":"isTop()"},{"p":"org.checkerframework.javacutil","c":"TreePathUtil","l":"isTopLevelAssignmentInInitializerBlock(TreePath)","u":"isTopLevelAssignmentInInitializerBlock(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"isTopLevelValidType(QualifierHierarchy, AnnotatedTypeMirror)","u":"isTopLevelValidType(org.checkerframework.framework.type.QualifierHierarchy,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TreePathUtil","l":"isTreeInStaticScope(TreePath)","u":"isTreeInStaticScope(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanVisitor","l":"isTypeCastSafe(AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"isTypeCastSafe(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.interning","c":"InterningVisitor","l":"isTypeCastSafe(AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"isTypeCastSafe(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallVisitor","l":"isTypeCastSafe(AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"isTypeCastSafe(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.signedness","c":"SignednessVisitor","l":"isTypeCastSafe(AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"isTypeCastSafe(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"isTypeCastSafe(AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"isTypeCastSafe(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TypeAnnotationUtils","l":"isTypeCompoundContained(List<Attribute.TypeCompound>, Attribute.TypeCompound, Types)","u":"isTypeCompoundContained(com.sun.tools.javac.util.List,com.sun.tools.javac.code.Attribute.TypeCompound,javax.lang.model.util.Types)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"isTypeDeclaration(Element)","u":"isTypeDeclaration(javax.lang.model.element.Element)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isTypeDeclaration(Tree)","u":"isTypeDeclaration(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"isTypeElement(Element)","u":"isTypeElement(javax.lang.model.element.Element)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isTypeTree(Tree)","u":"isTypeTree(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.guieffect","c":"Effect","l":"isUI()"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"isUIType(TypeElement)","u":"isUIType(javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayAccess","l":"isUnassignableByOtherCode()"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayCreation","l":"isUnassignableByOtherCode()"},{"p":"org.checkerframework.dataflow.expression","c":"BinaryOperation","l":"isUnassignableByOtherCode()"},{"p":"org.checkerframework.dataflow.expression","c":"ClassName","l":"isUnassignableByOtherCode()"},{"p":"org.checkerframework.dataflow.expression","c":"FieldAccess","l":"isUnassignableByOtherCode()"},{"p":"org.checkerframework.dataflow.expression","c":"FormalParameter","l":"isUnassignableByOtherCode()"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"isUnassignableByOtherCode()"},{"p":"org.checkerframework.dataflow.expression","c":"LocalVariable","l":"isUnassignableByOtherCode()"},{"p":"org.checkerframework.dataflow.expression","c":"MethodCall","l":"isUnassignableByOtherCode()"},{"p":"org.checkerframework.dataflow.expression","c":"ThisReference","l":"isUnassignableByOtherCode()"},{"p":"org.checkerframework.dataflow.expression","c":"UnaryOperation","l":"isUnassignableByOtherCode()"},{"p":"org.checkerframework.dataflow.expression","c":"Unknown","l":"isUnassignableByOtherCode()"},{"p":"org.checkerframework.dataflow.expression","c":"ValueLiteral","l":"isUnassignableByOtherCode()"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"isUnboundedOrExtendsBounded(AnnotatedTypeMirror.AnnotatedWildcardType)","u":"isUnboundedOrExtendsBounded(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"isUnboundedOrSuperBounded(AnnotatedTypeMirror.AnnotatedWildcardType)","u":"isUnboundedOrSuperBounded(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"isUnderInitialization(AnnotatedTypeMirror)","u":"isUnderInitialization(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"isUnderInitialization(AnnotationMirror)","u":"isUnderInitialization(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedDeclaredType","l":"isUnderlyingTypeRaw()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedWildcardType","l":"isUninferredTypeArgument()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"isUnknown()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.UpperBoundUnknownQualifier","l":"isUnknown()"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"isUnknownInitialization(AnnotatedTypeMirror)","u":"isUnknownInitialization(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"isUnknownInitialization(AnnotationMirror)","u":"isUnknownInitialization(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayAccess","l":"isUnmodifiableByOtherCode()"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayCreation","l":"isUnmodifiableByOtherCode()"},{"p":"org.checkerframework.dataflow.expression","c":"BinaryOperation","l":"isUnmodifiableByOtherCode()"},{"p":"org.checkerframework.dataflow.expression","c":"ClassName","l":"isUnmodifiableByOtherCode()"},{"p":"org.checkerframework.dataflow.expression","c":"FieldAccess","l":"isUnmodifiableByOtherCode()"},{"p":"org.checkerframework.dataflow.expression","c":"FormalParameter","l":"isUnmodifiableByOtherCode()"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"isUnmodifiableByOtherCode()"},{"p":"org.checkerframework.dataflow.expression","c":"LocalVariable","l":"isUnmodifiableByOtherCode()"},{"p":"org.checkerframework.dataflow.expression","c":"MethodCall","l":"isUnmodifiableByOtherCode()"},{"p":"org.checkerframework.dataflow.expression","c":"ThisReference","l":"isUnmodifiableByOtherCode()"},{"p":"org.checkerframework.dataflow.expression","c":"UnaryOperation","l":"isUnmodifiableByOtherCode()"},{"p":"org.checkerframework.dataflow.expression","c":"Unknown","l":"isUnmodifiableByOtherCode()"},{"p":"org.checkerframework.dataflow.expression","c":"ValueLiteral","l":"isUnmodifiableByOtherCode()"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isUseOfElement(ExpressionTree)","u":"isUseOfElement(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"isValid"},{"p":"org.checkerframework.framework.type","c":"ElementQualifierHierarchy","l":"isValid()"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"isValid()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"isValid(AnnotatedTypeMirror, Tree)","u":"isValid(org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.common.basetype","c":"TypeValidator","l":"isValid(AnnotatedTypeMirror, Tree)","u":"isValid(org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil.FormatCall","l":"isValidArgument(ConversionCategory, TypeMirror)","u":"isValidArgument(org.checkerframework.checker.formatter.qual.ConversionCategory,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil.I18nFormatCall","l":"isValidFormatForInvocation()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil.I18nFormatCall","l":"isValidParameter(I18nConversionCategory, TypeMirror)","u":"isValidParameter(org.checkerframework.checker.i18nformatter.qual.I18nConversionCategory,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"isValidReplacement(String, String, UBQualifier.LessThanLengthOf)","u":"isValidReplacement(java.lang.String,java.lang.String,org.checkerframework.checker.index.upperbound.UBQualifier.LessThanLengthOf)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"isValidStructurally(QualifierHierarchy, AnnotatedTypeMirror)","u":"isValidStructurally(org.checkerframework.framework.type.QualifierHierarchy,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"isValidUse(AnnotatedTypeMirror.AnnotatedArrayType, Tree)","u":"isValidUse(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.fenum","c":"FenumVisitor","l":"isValidUse(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedDeclaredType, Tree)","u":"isValidUse(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"isValidUse(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedDeclaredType, Tree)","u":"isValidUse(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"isValidUse(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedDeclaredType, Tree)","u":"isValidUse(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallVisitor","l":"isValidUse(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedDeclaredType, Tree)","u":"isValidUse(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"isValidUse(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedDeclaredType, Tree)","u":"isValidUse(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"isValidUse(AnnotatedTypeMirror.AnnotatedPrimitiveType, Tree)","u":"isValidUse(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"isValidUse(AnnotatedTypeMirror.AnnotatedPrimitiveType, Tree)","u":"isValidUse(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"isValuePlusOffsetLessThanMinLen(String, long, int)","u":"isValuePlusOffsetLessThanMinLen(java.lang.String,long,int)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedExecutableType","l":"isVarArgs()"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isVarArgs(MethodInvocationTree)","u":"isVarArgs(com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isVarArgs(NewClassTree)","u":"isVarArgs(com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isVarArgs(Tree)","u":"isVarArgs(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.util","c":"FieldInvariants","l":"isWellFormed()"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"isWideningBinary(BinaryTree)","u":"isWideningBinary(com.sun.source.tree.BinaryTree)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"isWiderThan(long)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"isWithin(long, long)","u":"isWithin(long,long)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"isWithinConstructor(Tree)","u":"isWithinConstructor(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"isWithinInteger()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodInvocationNode","l":"iterableExpression"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"iterableType"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"iterator()"},{"p":"org.checkerframework.framework.stub","c":"JarEntryAnnotationFileResource","l":"JarEntryAnnotationFileResource(JarFile, JarEntry)","u":"%3Cinit%3E(java.util.jar.JarFile,java.util.jar.JarEntry)"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"JAVAC_PATH_OPT"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"javacErrored"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"javacJar"},{"p":"org.checkerframework.common.util.count","c":"JavaCodeStatistics","l":"JavaCodeStatistics()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"javacTypes"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"JavaExpression(TypeMirror)","u":"%3Cinit%3E(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionConverter","l":"JavaExpressionConverter()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.common.value","c":"JavaExpressionOptimizer","l":"JavaExpressionOptimizer(AnnotatedTypeFactory)","u":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util","c":"JavaExpressionParseUtil.JavaExpressionParseException","l":"JavaExpressionParseException(String, Object...)","u":"%3Cinit%3E(java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.framework.util","c":"JavaExpressionParseUtil.JavaExpressionParseException","l":"JavaExpressionParseException(Throwable, String, Object...)","u":"%3Cinit%3E(java.lang.Throwable,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.framework.util","c":"JavaExpressionParseUtil","l":"JavaExpressionParseUtil()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionScanner","l":"JavaExpressionScanner()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionVisitor","l":"JavaExpressionVisitor()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.util","c":"JavaParserUtil","l":"JavaParserUtil()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.stub","c":"JavaStubifier","l":"JavaStubifier()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"javaxGuardedBy"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"jcipGuardedBy"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"JDK_PATH_OPT"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileUtil.AnnotationFileType","l":"JDK_STUB"},{"p":"org.checkerframework.framework.util","c":"ExecUtil.Redirection","l":"join()"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"JointJavacJavaParserVisitor()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"JointVisitorWithDefaultAction()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.javacutil","c":"SystemUtil","l":"jreVersion"},{"p":"org.checkerframework.framework.test.diagnostics","c":"DiagnosticKind","l":"JSpecify"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"JVM_OPTS_REGEX"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"K"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnnotatedTypeFactory","l":"KEYFOR_NAME"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnalysis","l":"KeyForAnalysis(BaseTypeChecker, KeyForAnnotatedTypeFactory)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,org.checkerframework.checker.nullness.KeyForAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnnotatedTypeFactory","l":"KeyForAnnotatedTypeFactory(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnnotatedTypeFactory","l":"KEYFORBOTTOM"},{"p":"org.checkerframework.checker.nullness","c":"KeyForPropagationTreeAnnotator","l":"KeyForPropagationTreeAnnotator(AnnotatedTypeFactory, KeyForPropagator)","u":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory,org.checkerframework.checker.nullness.KeyForPropagator)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForPropagator","l":"KeyForPropagator(AnnotationMirror)","u":"%3Cinit%3E(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForStore","l":"KeyForStore(CFAbstractAnalysis<KeyForValue, KeyForStore, ?>, boolean)","u":"%3Cinit%3E(org.checkerframework.framework.flow.CFAbstractAnalysis,boolean)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForStore","l":"KeyForStore(CFAbstractStore<KeyForValue, KeyForStore>)","u":"%3Cinit%3E(org.checkerframework.framework.flow.CFAbstractStore)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForSubchecker","l":"KeyForSubchecker()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.nullness","c":"KeyForTransfer","l":"KeyForTransfer(KeyForAnalysis)","u":"%3Cinit%3E(org.checkerframework.checker.nullness.KeyForAnalysis)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessTransfer","l":"keyForTypeFactory"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnnotatedTypeFactory.KeyForTypeHierarchy","l":"KeyForTypeHierarchy(BaseTypeChecker, QualifierHierarchy, boolean, boolean)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,org.checkerframework.framework.type.QualifierHierarchy,boolean,boolean)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForValue","l":"KeyForValue(CFAbstractAnalysis<KeyForValue, ?, ?>, AnnotationMirrorSet, TypeMirror)","u":"%3Cinit%3E(org.checkerframework.framework.flow.CFAbstractAnalysis,org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnnotatedTypeFactory","l":"keyForValueElement"},{"p":"org.checkerframework.checker.nullness","c":"KeyForTransfer","l":"keyForValueElement"},{"p":"org.checkerframework.checker.propkey","c":"PropertyKeyAnnotatedTypeFactory.KeyLookupTreeAnnotator","l":"KeyLookupTreeAnnotator(BaseAnnotatedTypeFactory, Class<? extends Annotation>)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseAnnotatedTypeFactory,java.lang.Class)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorMap","l":"keySet()"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"kg"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"kg"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprStore","l":"killBusyExpr(Node)","u":"killBusyExpr(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.reachingdef","c":"ReachingDefinitionStore","l":"killDef(Node)","u":"killDef(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarStore","l":"killLiveVar(LiveVarNode)","u":"killLiveVar(org.checkerframework.dataflow.livevariable.LiveVarNode)"},{"p":"org.checkerframework.checker.units.qual","c":"Prefix","l":"kilo"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST","l":"kind"},{"p":"org.checkerframework.framework.util","c":"Contract","l":"kind"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker.PurityResult","l":"kinds"},{"p":"org.checkerframework.framework.type","c":"NoElementQualifierHierarchy","l":"kindToAnnotationMirror"},{"p":"org.checkerframework.framework.type","c":"ElementQualifierHierarchy","l":"kindToElementlessQualifier"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"kindToTag(Tree.Kind)","u":"kindToTag(com.sun.source.tree.Tree.Kind)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"km"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"km"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"km2"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"km2"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"km3"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"km3"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"kmPERh"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"kmPERh"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"kN"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"kN"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"Label","l":"Label()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"Label","l":"Label(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.Kind","l":"LAMBDA"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LambdaResultExpressionNode","l":"LambdaResultExpressionNode(ExpressionTree, Node)","u":"%3Cinit%3E(com.sun.source.tree.ExpressionTree,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"last()"},{"p":"org.checkerframework.javacutil","c":"TreePathUtil","l":"leafToStringTruncated(TreePath, int)","u":"leafToStringTruncated(com.sun.source.util.TreePath,int)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"leastUpperBound(AnnotatedTypeFactory, AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"leastUpperBound(org.checkerframework.framework.type.AnnotatedTypeFactory,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"leastUpperBound(AnnotatedTypeFactory, AnnotatedTypeMirror, AnnotatedTypeMirror, TypeMirror)","u":"leastUpperBound(org.checkerframework.framework.type.AnnotatedTypeFactory,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.util.typeinference","c":"TypeArgInferenceUtil","l":"leastUpperBound(AnnotatedTypeFactory, Iterable<AnnotatedTypeMirror>)","u":"leastUpperBound(org.checkerframework.framework.type.AnnotatedTypeFactory,java.lang.Iterable)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory.UpperBoundQualifierHierarchy","l":"leastUpperBound(AnnotationMirror, AnnotationMirror)","u":"leastUpperBound(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory.AccumulationQualifierHierarchy","l":"leastUpperBound(AnnotationMirror, AnnotationMirror)","u":"leastUpperBound(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.reflection","c":"ClassValAnnotatedTypeFactory.ClassValQualifierHierarchy","l":"leastUpperBound(AnnotationMirror, AnnotationMirror)","u":"leastUpperBound(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.common.reflection","c":"MethodValAnnotatedTypeFactory.MethodValQualifierHierarchy","l":"leastUpperBound(AnnotationMirror, AnnotationMirror)","u":"leastUpperBound(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"MostlyNoElementQualifierHierarchy","l":"leastUpperBound(AnnotationMirror, AnnotationMirror)","u":"leastUpperBound(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"NoElementQualifierHierarchy","l":"leastUpperBound(AnnotationMirror, AnnotationMirror)","u":"leastUpperBound(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"leastUpperBound(AnnotationMirror, AnnotationMirror)","u":"leastUpperBound(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprStore","l":"leastUpperBound(BusyExprStore)","u":"leastUpperBound(org.checkerframework.dataflow.busyexpr.BusyExprStore)"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"Constant","l":"leastUpperBound(Constant)","u":"leastUpperBound(org.checkerframework.dataflow.constantpropagation.Constant)"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"ConstantPropagationStore","l":"leastUpperBound(ConstantPropagationStore)","u":"leastUpperBound(org.checkerframework.dataflow.constantpropagation.ConstantPropagationStore)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForValue","l":"leastUpperBound(KeyForValue)","u":"leastUpperBound(org.checkerframework.checker.nullness.KeyForValue)"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarStore","l":"leastUpperBound(LiveVarStore)","u":"leastUpperBound(org.checkerframework.dataflow.livevariable.LiveVarStore)"},{"p":"org.checkerframework.checker.lock","c":"LockStore","l":"leastUpperBound(LockStore)","u":"leastUpperBound(org.checkerframework.checker.lock.LockStore)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessStore","l":"leastUpperBound(NullnessStore)","u":"leastUpperBound(org.checkerframework.checker.nullness.NullnessStore)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessValue","l":"leastUpperBound(NullnessValue)","u":"leastUpperBound(org.checkerframework.checker.nullness.NullnessValue)"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy","l":"leastUpperBound(QualifierKind, QualifierKind)","u":"leastUpperBound(org.checkerframework.framework.util.QualifierKind,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.framework.util","c":"QualifierKindHierarchy","l":"leastUpperBound(QualifierKind, QualifierKind)","u":"leastUpperBound(org.checkerframework.framework.util.QualifierKind,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.dataflow.reachingdef","c":"ReachingDefinitionStore","l":"leastUpperBound(ReachingDefinitionStore)","u":"leastUpperBound(org.checkerframework.dataflow.reachingdef.ReachingDefinitionStore)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationStore","l":"leastUpperBound(S)"},{"p":"org.checkerframework.dataflow.analysis","c":"Store","l":"leastUpperBound(S)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"leastUpperBound(S)"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferInput","l":"leastUpperBound(TransferInput<V, S>)","u":"leastUpperBound(org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"leastUpperBound(TypeMirror, TypeMirror, ProcessingEnvironment)","u":"leastUpperBound(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"SupertypesSolver","l":"leastUpperBound(TypeVariable, AnnotatedTypeFactory, Map<AnnotatedTypeMirror, AnnotationMirrorSet>)","u":"leastUpperBound(javax.lang.model.type.TypeVariable,org.checkerframework.framework.type.AnnotatedTypeFactory,java.util.Map)"},{"p":"org.checkerframework.dataflow.analysis","c":"UnusedAbstractValue","l":"leastUpperBound(UnusedAbstractValue)","u":"leastUpperBound(org.checkerframework.dataflow.analysis.UnusedAbstractValue)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue","l":"leastUpperBound(V)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractValue","l":"leastUpperBound(V)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory.InitializationQualifierHierarchy","l":"leastUpperBoundInitialization(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind)","u":"leastUpperBoundInitialization(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"leastUpperBounds(Collection<? extends AnnotationMirror>, Collection<? extends AnnotationMirror>)","u":"leastUpperBounds(java.util.Collection,java.util.Collection)"},{"p":"org.checkerframework.checker.fenum","c":"FenumAnnotatedTypeFactory.FenumQualifierHierarchy","l":"leastUpperBoundWithElements(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind, QualifierKind)","u":"leastUpperBoundWithElements(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory.NullnessQualifierHierarchy","l":"leastUpperBoundWithElements(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind, QualifierKind)","u":"leastUpperBoundWithElements(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory.UnitsQualifierHierarchy","l":"leastUpperBoundWithElements(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind, QualifierKind)","u":"leastUpperBoundWithElements(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.framework.type","c":"MostlyNoElementQualifierHierarchy","l":"leastUpperBoundWithElements(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind, QualifierKind)","u":"leastUpperBoundWithElements(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.framework.type","c":"SubtypeIsSubsetQualifierHierarchy","l":"leastUpperBoundWithElements(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind, QualifierKind)","u":"leastUpperBoundWithElements(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.framework.type","c":"SubtypeIsSupersetQualifierHierarchy","l":"leastUpperBoundWithElements(AnnotationMirror, QualifierKind, AnnotationMirror, QualifierKind, QualifierKind)","u":"leastUpperBoundWithElements(javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.util.QualifierKind,org.checkerframework.framework.util.QualifierKind)"},{"p":"org.checkerframework.checker.index","c":"IndexRefinementInfo","l":"left"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BinaryOperationNode","l":"left"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringConcatenateAssignmentNode","l":"left"},{"p":"org.checkerframework.dataflow.expression","c":"BinaryOperation","l":"left"},{"p":"org.checkerframework.checker.index","c":"IndexRefinementInfo","l":"leftAnno"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"leftJustifiedTerminator"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LeftShiftNode","l":"LeftShiftNode(BinaryTree, Node, Node)","u":"%3Cinit%3E(com.sun.source.tree.BinaryTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanAnnotatedTypeFactory","l":"LESS_THAN_UNKNOWN"},{"p":"org.checkerframework.common.value.util","c":"ByteMath","l":"lessThan(Number)","u":"lessThan(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"DoubleMath","l":"lessThan(Number)","u":"lessThan(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"FloatMath","l":"lessThan(Number)","u":"lessThan(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"IntegerMath","l":"lessThan(Number)","u":"lessThan(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"LongMath","l":"lessThan(Number)","u":"lessThan(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"NumberMath","l":"lessThan(Number)","u":"lessThan(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"ShortMath","l":"lessThan(Number)","u":"lessThan(java.lang.Number)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanAnnotatedTypeFactory","l":"LessThanAnnotatedTypeFactory(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanChecker","l":"LessThanChecker()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.common.value.util","c":"ByteMath","l":"lessThanEq(Number)","u":"lessThanEq(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"DoubleMath","l":"lessThanEq(Number)","u":"lessThanEq(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"FloatMath","l":"lessThanEq(Number)","u":"lessThanEq(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"IntegerMath","l":"lessThanEq(Number)","u":"lessThanEq(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"LongMath","l":"lessThanEq(Number)","u":"lessThanEq(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"NumberMath","l":"lessThanEq(Number)","u":"lessThanEq(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"ShortMath","l":"lessThanEq(Number)","u":"lessThanEq(java.lang.Number)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LessThanNode","l":"LessThanNode(BinaryTree, Node, Node)","u":"%3Cinit%3E(com.sun.source.tree.BinaryTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"lessThanOrEqual(OffsetEquation)","u":"lessThanOrEqual(org.checkerframework.checker.index.upperbound.OffsetEquation)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LessThanOrEqualNode","l":"LessThanOrEqualNode(BinaryTree, Node, Node)","u":"%3Cinit%3E(com.sun.source.tree.BinaryTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.checker.guieffect","c":"Effect","l":"lessThanOrEqualTo(Effect, Effect)","u":"lessThanOrEqualTo(org.checkerframework.checker.guieffect.Effect,org.checkerframework.checker.guieffect.Effect)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanTransfer","l":"LessThanTransfer(CFAnalysis)","u":"%3Cinit%3E(org.checkerframework.framework.flow.CFAnalysis)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanVisitor","l":"LessThanVisitor(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssignmentNode","l":"lhs"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer","l":"lineSeparator"},{"p":"org.checkerframework.checker.nullness","c":"NullnessChecker","l":"LINT_DEFAULT_NOINITFORMONOTONICNONNULL"},{"p":"org.checkerframework.checker.nullness","c":"NullnessChecker","l":"LINT_DEFAULT_PERMITCLEARPROPERTY"},{"p":"org.checkerframework.checker.nullness","c":"NullnessChecker","l":"LINT_DEFAULT_REDUNDANTNULLCOMPARISON"},{"p":"org.checkerframework.checker.nullness","c":"NullnessChecker","l":"LINT_DEFAULT_TRUSTARRAYLENZERO"},{"p":"org.checkerframework.checker.nullness","c":"NullnessChecker","l":"LINT_NOINITFORMONOTONICNONNULL"},{"p":"org.checkerframework.checker.nullness","c":"NullnessChecker","l":"LINT_PERMITCLEARPROPERTY"},{"p":"org.checkerframework.checker.nullness","c":"NullnessChecker","l":"LINT_REDUNDANTNULLCOMPARISON"},{"p":"org.checkerframework.checker.nullness","c":"NullnessChecker","l":"LINT_TRUSTARRAYLENZERO"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"listContainsSyntacticEqualJavaExpression(List<? extends JavaExpression>, JavaExpression)","u":"listContainsSyntacticEqualJavaExpression(java.util.List,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"listIsDeterministic(List<? extends JavaExpression>, AnnotationProvider)","u":"listIsDeterministic(java.util.List,org.checkerframework.javacutil.AnnotationProvider)"},{"p":"org.checkerframework.framework.type.treeannotator","c":"ListTreeAnnotator","l":"ListTreeAnnotator(List<TreeAnnotator>)","u":"%3Cinit%3E(java.util.List)"},{"p":"org.checkerframework.framework.type.treeannotator","c":"ListTreeAnnotator","l":"ListTreeAnnotator(TreeAnnotator...)","u":"%3Cinit%3E(org.checkerframework.framework.type.treeannotator.TreeAnnotator...)"},{"p":"org.checkerframework.framework.type.typeannotator","c":"ListTypeAnnotator","l":"ListTypeAnnotator(List<TypeAnnotator>)","u":"%3Cinit%3E(java.util.List)"},{"p":"org.checkerframework.framework.type.typeannotator","c":"ListTypeAnnotator","l":"ListTypeAnnotator(TypeAnnotator...)","u":"%3Cinit%3E(org.checkerframework.framework.type.typeannotator.TypeAnnotator...)"},{"p":"org.checkerframework.framework.type.treeannotator","c":"LiteralTreeAnnotator","l":"LiteralTreeAnnotator(AnnotatedTypeFactory)","u":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarNode","l":"liveVariable"},{"p":"org.checkerframework.dataflow.cfg.playground","c":"LiveVariablePlayground","l":"LiveVariablePlayground()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarNode","l":"LiveVarNode(Node)","u":"%3Cinit%3E(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarStore","l":"LiveVarStore()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarStore","l":"LiveVarStore(Set<LiveVarNode>)","u":"%3Cinit%3E(java.util.Set)"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarTransfer","l":"LiveVarTransfer()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.type","c":"AnnotationClassLoader","l":"loadAnnotationClass(String, boolean)","u":"loadAnnotationClass(java.lang.String,boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotationClassLoader","l":"loadAnnotationClasses(Set<String>)","u":"loadAnnotationClasses(java.util.Set)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"loader"},{"p":"org.checkerframework.framework.type","c":"AnnotationClassLoader","l":"loadExternalAnnotationClass(String)","u":"loadExternalAnnotationClass(java.lang.String)"},{"p":"org.checkerframework.framework.type","c":"AnnotationClassLoader","l":"loadExternalAnnotationClassesFromDirectory(String)","u":"loadExternalAnnotationClassesFromDirectory(java.lang.String)"},{"p":"org.checkerframework.framework.qual","c":"TypeUseLocation","l":"LOCAL_VARIABLE"},{"p":"org.checkerframework.checker.i18n","c":"LocalizableKeyAnnotatedTypeFactory","l":"LocalizableKeyAnnotatedTypeFactory(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.i18n","c":"LocalizableKeyChecker","l":"LocalizableKeyChecker()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.expression","c":"LocalVariable","l":"LocalVariable(LocalVariableNode)","u":"%3Cinit%3E(org.checkerframework.dataflow.cfg.node.LocalVariableNode)"},{"p":"org.checkerframework.dataflow.expression","c":"LocalVariable","l":"LocalVariable(VariableElement)","u":"%3Cinit%3E(javax.lang.model.element.VariableElement)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LocalVariableNode","l":"LocalVariableNode(Tree)","u":"%3Cinit%3E(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LocalVariableNode","l":"LocalVariableNode(Tree, Node)","u":"%3Cinit%3E(com.sun.source.tree.Tree,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"localVariableValues"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil.Result","l":"location"},{"p":"org.checkerframework.framework.util.defaults","c":"Default","l":"location"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults.DefaultApplierElement","l":"location"},{"p":"org.checkerframework.framework.qual","c":"DefaultQualifier","l":"locations()"},{"p":"org.checkerframework.checker.lock","c":"LockAnalysis","l":"LockAnalysis(BaseTypeChecker, LockAnnotatedTypeFactory)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,org.checkerframework.checker.lock.LockAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"LockAnnotatedTypeFactory(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.lock","c":"LockChecker","l":"LockChecker()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"LOCKHELD"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"LOCKPOSSIBLYHELD"},{"p":"org.checkerframework.checker.lock","c":"LockStore","l":"LockStore(LockAnalysis, boolean)","u":"%3Cinit%3E(org.checkerframework.checker.lock.LockAnalysis,boolean)"},{"p":"org.checkerframework.checker.lock","c":"LockStore","l":"LockStore(LockAnalysis, CFAbstractStore<CFValue, LockStore>)","u":"%3Cinit%3E(org.checkerframework.checker.lock.LockAnalysis,org.checkerframework.framework.flow.CFAbstractStore)"},{"p":"org.checkerframework.checker.lock","c":"LockTransfer","l":"LockTransfer(LockAnalysis, LockChecker)","u":"%3Cinit%3E(org.checkerframework.checker.lock.LockAnalysis,org.checkerframework.checker.lock.LockChecker)"},{"p":"org.checkerframework.checker.lock","c":"LockTreeAnnotator","l":"LockTreeAnnotator(AnnotatedTypeFactory)","u":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"LockVisitor(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"LombokSupport","l":"LombokSupport(CalledMethodsAnnotatedTypeFactory)","u":"%3Cinit%3E(org.checkerframework.checker.calledmethods.CalledMethodsAnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.qual","c":"LiteralKind","l":"LONG"},{"p":"org.checkerframework.framework.qual","c":"TypeKind","l":"LONG"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"LONG_EVERYTHING"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"longFromDouble(double)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"longFromFloat(float)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LongLiteralNode","l":"LongLiteralNode(LiteralTree)","u":"%3Cinit%3E(com.sun.source.tree.LiteralTree)"},{"p":"org.checkerframework.common.value.util","c":"LongMath","l":"LongMath(long)","u":"%3Cinit%3E(long)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer","l":"loopOverBlockContents(Block, Analysis<V, S, T>, String)","u":"loopOverBlockContents(org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.analysis.Analysis,java.lang.String)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults.BoundType","l":"LOWER"},{"p":"org.checkerframework.framework.qual","c":"TypeUseLocation","l":"LOWER_BOUND"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"lower(AnnotationMirror)","u":"lower(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundAnnotatedTypeFactory","l":"LowerBoundAnnotatedTypeFactory(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundChecker","l":"LowerBoundChecker()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.util.element","c":"ClassTypeParamApplier","l":"lowerBoundTarget()"},{"p":"org.checkerframework.framework.util.element","c":"MethodTypeParamApplier","l":"lowerBoundTarget()"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"LowerBoundTransfer(CFAnalysis)","u":"%3Cinit%3E(org.checkerframework.framework.flow.CFAnalysis)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundVisitor","l":"LowerBoundVisitor(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundChecker","l":"ltEqLengthOfValueElement"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"ltLengthOfOffsetElement"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundChecker","l":"ltLengthOfOffsetElement"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"ltLengthOfValueElement"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundChecker","l":"ltLengthOfValueElement"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundChecker","l":"ltOMLengthOfValueElement"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"lub(UBQualifier)","u":"lub(org.checkerframework.checker.index.upperbound.UBQualifier)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"lub(UBQualifier)","u":"lub(org.checkerframework.checker.index.upperbound.UBQualifier)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.UpperBoundLiteralQualifier","l":"lub(UBQualifier)","u":"lub(org.checkerframework.checker.index.upperbound.UBQualifier)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.UpperBoundUnknownQualifier","l":"lub(UBQualifier)","u":"lub(org.checkerframework.checker.index.upperbound.UBQualifier)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"SupertypesSolver","l":"lubPrimaries(AnnotationMirrorMap<AnnotationMirror>, AnnotationMirrorMap<AnnotationMirrorSet>, AnnotationMirrorSet, QualifierHierarchy)","u":"lubPrimaries(org.checkerframework.javacutil.AnnotationMirrorMap,org.checkerframework.javacutil.AnnotationMirrorMap,org.checkerframework.javacutil.AnnotationMirrorSet,org.checkerframework.framework.type.QualifierHierarchy)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory.InitializationQualifierHierarchy","l":"lubTypeFrame(TypeMirror, TypeMirror)","u":"lubTypeFrame(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"Node","l":"lvalue"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"m"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"m"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"m2"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"m2"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"m3"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"m3"},{"p":"org.checkerframework.common.util.debug","c":"SignaturePrinter","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"org.checkerframework.common.util.debug","c":"TreePrinter","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"org.checkerframework.common.util.debug","c":"TypeOutputtingChecker","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"org.checkerframework.dataflow.cfg.playground","c":"BusyExpressionPlayground","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"org.checkerframework.dataflow.cfg.playground","c":"ConstantPropagationPlayground","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"org.checkerframework.dataflow.cfg.playground","c":"LiveVariablePlayground","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"org.checkerframework.dataflow.cfg.playground","c":"ReachingDefinitionPlayground","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizeLauncher","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"org.checkerframework.framework.ajava","c":"InsertAjavaAnnotations","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"org.checkerframework.framework.stub","c":"JavaStubifier","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"org.checkerframework.framework.stub","c":"RemoveAnnotationsForInference","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"org.checkerframework.framework.stub","c":"StubGenerator","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeCopier","l":"makeCopy(T)"},{"p":"org.checkerframework.framework.type","c":"TypeVariableSubstitutor.Visitor","l":"makeCopy(T)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"makeFormatCallCategories(MethodInvocationNode, I18nFormatterAnnotatedTypeFactory)","u":"makeFormatCallCategories(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.checker.i18nformatter.I18nFormatterAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.lock","c":"LockTransfer","l":"makeLockHeld(LockStore, Node)","u":"makeLockHeld(org.checkerframework.checker.lock.LockStore,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.checker.lock","c":"LockTransfer","l":"makeLockHeld(TransferResult<CFValue, LockStore>, Node)","u":"makeLockHeld(org.checkerframework.dataflow.analysis.TransferResult,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.checker.lock","c":"LockTransfer","l":"makeLockPossiblyHeld(LockStore, Node)","u":"makeLockPossiblyHeld(org.checkerframework.checker.lock.LockStore,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.checker.lock","c":"LockTransfer","l":"makeLockPossiblyHeld(TransferResult<CFValue, LockStore>, Node)","u":"makeLockPossiblyHeld(org.checkerframework.dataflow.analysis.TransferResult,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessTransfer","l":"makeNonNull(NullnessStore, Node)","u":"makeNonNull(org.checkerframework.checker.nullness.NullnessStore,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessTransfer","l":"makeNonNull(TransferResult<NullnessValue, NullnessStore>, Node)","u":"makeNonNull(org.checkerframework.dataflow.analysis.TransferResult,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeCopier","l":"makeOrReturnCopy(T, IdentityHashMap<AnnotatedTypeMirror, AnnotatedTypeMirror>)","u":"makeOrReturnCopy(T,java.util.IdentityHashMap)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"maker"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"makeUnmodifiable()"},{"p":"org.checkerframework.taglet","c":"ManualTaglet","l":"ManualTaglet()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessTransfer","l":"MAP_TYPE"},{"p":"org.checkerframework.checker.nullness.qual","c":"EnsuresKeyFor","l":"map()"},{"p":"org.checkerframework.checker.nullness.qual","c":"EnsuresKeyForIf","l":"map()"},{"p":"org.checkerframework.checker.nullness.util","c":"Opt","l":"map(T, Function<? super T, ? extends U>)","u":"map(T,java.util.function.Function)"},{"p":"org.checkerframework.javacutil","c":"SystemUtil","l":"mapCapacity(Collection<?>)","u":"mapCapacity(java.util.Collection)"},{"p":"org.checkerframework.javacutil","c":"SystemUtil","l":"mapCapacity(int)"},{"p":"org.checkerframework.javacutil","c":"SystemUtil","l":"mapCapacity(Map<?, ?>)","u":"mapCapacity(java.util.Map)"},{"p":"org.checkerframework.framework.util","c":"TypeArgumentMapper","l":"mapTypeArgumentIndices(TypeElement, TypeElement, Types)","u":"mapTypeArgumentIndices(javax.lang.model.element.TypeElement,javax.lang.model.element.TypeElement,javax.lang.model.util.Types)"},{"p":"org.checkerframework.framework.util","c":"TypeArgumentMapper","l":"mapTypeArguments(TypeElement, TypeElement, Types)","u":"mapTypeArguments(javax.lang.model.element.TypeElement,javax.lang.model.element.TypeElement,javax.lang.model.util.Types)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MarkerNode","l":"MarkerNode(Tree, String, Types)","u":"%3Cinit%3E(com.sun.source.tree.Tree,java.lang.String,javax.lang.model.util.Types)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationTransfer","l":"markInvariantFieldsAsInitialized(List<VariableElement>, TypeElement)","u":"markInvariantFieldsAsInitialized(java.util.List,javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.framework.util","c":"Heuristics.Matcher","l":"match(TreePath)","u":"match(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.framework.util","c":"Heuristics.OfKind","l":"match(TreePath)","u":"match(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.framework.util","c":"Heuristics.OrMatcher","l":"match(TreePath)","u":"match(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.framework.util","c":"Heuristics.PreceededBy","l":"match(TreePath)","u":"match(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.framework.util","c":"Heuristics.Within","l":"match(TreePath)","u":"match(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.framework.util","c":"Heuristics.WithinTrueBranch","l":"match(TreePath)","u":"match(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.framework.util","c":"Heuristics.Matcher","l":"Matcher()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"MATCHES_REGEX_NAME"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"matchesCheckerOrSubcheckerFromList(String, List<String>)","u":"matchesCheckerOrSubcheckerFromList(java.lang.String,java.util.List)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"matchesElement(ExecutableElement, String, Class<?>...)","u":"matchesElement(javax.lang.model.element.ExecutableElement,java.lang.String,java.lang.Class...)"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"matchesFullyQualifiedProcessor(String, List<String>, boolean)","u":"matchesFullyQualifiedProcessor(java.lang.String,java.util.List,boolean)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"matchesRegexValueElement"},{"p":"org.checkerframework.framework.util","c":"Heuristics","l":"matchParents(TreePath, Tree.Kind...)","u":"matchParents(com.sun.source.util.TreePath,com.sun.source.tree.Tree.Kind...)"},{"p":"org.checkerframework.checker.guieffect","c":"Effect.EffectRange","l":"max"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"MAX_VALUES"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"max(Range)","u":"max(org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.dataflow.analysis","c":"ForwardAnalysisImpl","l":"maxCountBeforeWidening"},{"p":"org.checkerframework.javacutil","c":"TypeKindUtils","l":"maxValue(TypeKind)","u":"maxValue(javax.lang.model.type.TypeKind)"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenAnnotatedTypeFactory","l":"mayAppearInSameLen(JavaExpression)","u":"mayAppearInSameLen(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.common.aliasing","c":"AliasingAnnotatedTypeFactory","l":"MAYBE_ALIASED"},{"p":"org.checkerframework.common.aliasing","c":"AliasingAnnotatedTypeFactory","l":"MAYBE_LEAKED"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeCopier","l":"maybeCopyPrimaryAnnotations(AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"maybeCopyPrimaryAnnotations(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"maybeGetTypeMirror(Class<?>)","u":"maybeGetTypeMirror(java.lang.Class)"},{"p":"org.checkerframework.checker.signedness","c":"SignednessAnnotatedTypeFactory","l":"maybeIntegral(AnnotatedTypeMirror)","u":"maybeIntegral(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.units.qual","c":"Prefix","l":"mega"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"mergeAnnotationFileAnnosIntoType(AnnotatedTypeMirror, Element, AnnotationFileElementTypes)","u":"mergeAnnotationFileAnnosIntoType(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.Element,org.checkerframework.framework.stub.AnnotationFileElementTypes)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"EqualitiesSolver","l":"mergeConstraints(TypeVariable, TargetConstraints.Equalities, InferenceResult, ConstraintMap, AnnotatedTypeFactory)","u":"mergeConstraints(javax.lang.model.type.TypeVariable,org.checkerframework.framework.util.typeinference.solver.TargetConstraints.Equalities,org.checkerframework.framework.util.typeinference.solver.InferenceResult,org.checkerframework.framework.util.typeinference.solver.ConstraintMap,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"ConstantPropagationStore","l":"mergeInformation(Node, Constant)","u":"mergeInformation(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.constantpropagation.Constant)"},{"p":"org.checkerframework.framework.source","c":"DiagMessage","l":"mergeLists(List<DiagMessage>, List<DiagMessage>)","u":"mergeLists(java.util.List,java.util.List)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"SupertypesSolver","l":"mergeLubAnnosWithEqualities(TypeVariable, AnnotationMirrorMap<AnnotationMirror>, ConstraintMap, AnnotatedTypeFactory)","u":"mergeLubAnnosWithEqualities(javax.lang.model.type.TypeVariable,org.checkerframework.javacutil.AnnotationMirrorMap,org.checkerframework.framework.util.typeinference.solver.ConstraintMap,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"SupertypesSolver","l":"mergeLubTypeWithEqualities(TypeVariable, AnnotatedTypeMirror, ConstraintMap, AnnotatedTypeFactory)","u":"mergeLubTypeWithEqualities(javax.lang.model.type.TypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.util.typeinference.solver.ConstraintMap,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"InferenceResult","l":"mergeSubordinate(InferenceResult)","u":"mergeSubordinate(org.checkerframework.framework.util.typeinference.solver.InferenceResult)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"InferenceResult","l":"mergeTarget(TypeVariable, InferenceResult)","u":"mergeTarget(javax.lang.model.type.TypeVariable,org.checkerframework.framework.util.typeinference.solver.InferenceResult)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MarkerNode","l":"message"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"message(Diagnostic.Kind, String)","u":"message(javax.tools.Diagnostic.Kind,java.lang.String)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"message(Diagnostic.Kind, String, Object...)","u":"message(javax.tools.Diagnostic.Kind,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationChecker","l":"messageKeyMatches(String, String)","u":"messageKeyMatches(java.lang.String,java.lang.String)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"messageKeyMatches(String, String)","u":"messageKeyMatches(java.lang.String,java.lang.String)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"messager"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"messagesProperties"},{"p":"org.checkerframework.framework.util","c":"Contract.Kind","l":"metaAnnotation"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodAccessNode","l":"method"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGMethod","l":"method"},{"p":"org.checkerframework.dataflow.expression","c":"MethodCall","l":"method"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.Kind","l":"METHOD"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodAccessNode","l":"MethodAccessNode(ExpressionTree, Node)","u":"%3Cinit%3E(com.sun.source.tree.ExpressionTree,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.expression","c":"MethodCall","l":"MethodCall(TypeMirror, ExecutableElement, JavaExpression, List<JavaExpression>)","u":"%3Cinit%3E(javax.lang.model.type.TypeMirror,javax.lang.model.element.ExecutableElement,org.checkerframework.dataflow.expression.JavaExpression,java.util.List)"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"methodFromUse(ExpressionTree, ExecutableElement, AnnotatedTypeMirror)","u":"methodFromUse(com.sun.source.tree.ExpressionTree,javax.lang.model.element.ExecutableElement,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"methodFromUse(ExpressionTree, ExecutableElement, AnnotatedTypeMirror)","u":"methodFromUse(com.sun.source.tree.ExpressionTree,javax.lang.model.element.ExecutableElement,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"methodFromUse(ExpressionTree, ExecutableElement, AnnotatedTypeMirror)","u":"methodFromUse(com.sun.source.tree.ExpressionTree,javax.lang.model.element.ExecutableElement,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"methodFromUse(MethodInvocationTree)","u":"methodFromUse(com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"methodFromUse(MethodInvocationTree)","u":"methodFromUse(com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"methodFromUse(MethodInvocationTree)","u":"methodFromUse(com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"methodFromUsePreSubstitution(ExpressionTree, AnnotatedTypeMirror.AnnotatedExecutableType)","u":"methodFromUsePreSubstitution(com.sun.source.tree.ExpressionTree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"methodFromUsePreSubstitution(ExpressionTree, AnnotatedTypeMirror.AnnotatedExecutableType)","u":"methodFromUsePreSubstitution(com.sun.source.tree.ExpressionTree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"methodFromUsePreSubstitution(ExpressionTree, AnnotatedTypeMirror.AnnotatedExecutableType)","u":"methodFromUsePreSubstitution(com.sun.source.tree.ExpressionTree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"methodInvocationConvert(Node, TypeMirror)","u":"methodInvocationConvert(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodInvocationNode","l":"MethodInvocationNode(MethodAccessNode, List<Node>, TreePath)","u":"%3Cinit%3E(org.checkerframework.dataflow.cfg.node.MethodAccessNode,java.util.List,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodInvocationNode","l":"MethodInvocationNode(MethodInvocationTree, MethodAccessNode, List<Node>, TreePath)","u":"%3Cinit%3E(com.sun.source.tree.MethodInvocationTree,org.checkerframework.dataflow.cfg.node.MethodAccessNode,java.util.List,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.common.reflection.qual","c":"MethodVal","l":"methodName()"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"methodName(MethodInvocationTree)","u":"methodName(com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.javacutil","c":"TypeAnnotationUtils","l":"methodParameterTAPosition(int, int)","u":"methodParameterTAPosition(int,int)"},{"p":"org.checkerframework.javacutil","c":"TypeAnnotationUtils","l":"methodReceiverTAPosition(int)"},{"p":"org.checkerframework.javacutil","c":"TypeAnnotationUtils","l":"methodReturnTAPosition(int)"},{"p":"org.checkerframework.checker.calledmethods.qual","c":"EnsuresCalledMethods","l":"methods()"},{"p":"org.checkerframework.checker.calledmethods.qual","c":"EnsuresCalledMethodsIf","l":"methods()"},{"p":"org.checkerframework.checker.calledmethods.qual","c":"RequiresCalledMethods","l":"methods()"},{"p":"org.checkerframework.javacutil","c":"TypeAnnotationUtils","l":"methodThrowsTAPosition(int, int)","u":"methodThrowsTAPosition(int,int)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"methodTree"},{"p":"org.checkerframework.javacutil","c":"TypeAnnotationUtils","l":"methodTypeParameterBoundTAPosition(int, int, int)","u":"methodTypeParameterBoundTAPosition(int,int,int)"},{"p":"org.checkerframework.javacutil","c":"TypeAnnotationUtils","l":"methodTypeParameterTAPosition(int, int)","u":"methodTypeParameterTAPosition(int,int)"},{"p":"org.checkerframework.framework.util.typeinference","c":"TypeArgInferenceUtil","l":"methodTypeToTargets(AnnotatedTypeMirror.AnnotatedExecutableType)","u":"methodTypeToTargets(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.common.reflection","c":"MethodValAnnotatedTypeFactory","l":"MethodValAnnotatedTypeFactory(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.common.reflection","c":"MethodValChecker","l":"MethodValChecker()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"methodValClassNameElement"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"methodValMethodNameElement"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"methodValParamsElement"},{"p":"org.checkerframework.common.reflection","c":"MethodValAnnotatedTypeFactory.MethodValQualifierHierarchy","l":"MethodValQualifierHierarchy(Collection<Class<? extends Annotation>>, Elements)","u":"%3Cinit%3E(java.util.Collection,javax.lang.model.util.Elements)"},{"p":"org.checkerframework.common.reflection","c":"MethodValAnnotatedTypeFactory.MethodValTreeAnnotator","l":"MethodValTreeAnnotator(MethodValAnnotatedTypeFactory)","u":"%3Cinit%3E(org.checkerframework.common.reflection.MethodValAnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"methodValues"},{"p":"org.checkerframework.common.reflection","c":"MethodValVisitor","l":"MethodValVisitor(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.units.qual","c":"Prefix","l":"micro"},{"p":"org.checkerframework.checker.units.qual","c":"Prefix","l":"milli"},{"p":"org.checkerframework.checker.guieffect","c":"Effect.EffectRange","l":"min"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"min"},{"p":"org.checkerframework.checker.guieffect","c":"Effect","l":"min(Effect, Effect)","u":"min(org.checkerframework.checker.guieffect.Effect,org.checkerframework.checker.guieffect.Effect)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"min(Range)","u":"min(org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"MINLEN_NAME"},{"p":"org.checkerframework.common.value.qual","c":"MinLenFieldInvariant","l":"minLen()"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"minLenFieldInvariantFieldElement"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"minLenFieldInvariantMinLenElement"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"minLenValueElement"},{"p":"org.checkerframework.common.value.util","c":"ByteMath","l":"minus(Number)","u":"minus(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"DoubleMath","l":"minus(Number)","u":"minus(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"FloatMath","l":"minus(Number)","u":"minus(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"IntegerMath","l":"minus(Number)","u":"minus(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"LongMath","l":"minus(Number)","u":"minus(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"NumberMath","l":"minus(Number)","u":"minus(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"ShortMath","l":"minus(Number)","u":"minus(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"minus(Range)","u":"minus(org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"minusOffset(int)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"minusOffset(int)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"minusOffset(Node, UpperBoundAnnotatedTypeFactory)","u":"minusOffset(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.checker.index.upperbound.UpperBoundAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"minusOffset(Node, UpperBoundAnnotatedTypeFactory)","u":"minusOffset(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.checker.index.upperbound.UpperBoundAnnotatedTypeFactory)"},{"p":"org.checkerframework.javacutil","c":"TypeKindUtils","l":"minValue(TypeKind)","u":"minValue(javax.lang.model.type.TypeKind)"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory","l":"mixedUnits"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"mm"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"mm"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"mm2"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"mm2"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"mm3"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"mm3"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"modelTypes"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"mol"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"MONOTONIC_NONNULL"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"moreSpecificValue(V, V)","u":"moreSpecificValue(V,V)"},{"p":"org.checkerframework.framework.type","c":"MostlyNoElementQualifierHierarchy","l":"MostlyNoElementQualifierHierarchy(Collection<Class<? extends Annotation>>, Elements)","u":"%3Cinit%3E(java.util.Collection,javax.lang.model.util.Elements)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForValue","l":"mostSpecific(KeyForValue, KeyForValue)","u":"mostSpecific(org.checkerframework.checker.nullness.KeyForValue,org.checkerframework.checker.nullness.KeyForValue)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"mostSpecific(List<TypeMirror>, ProcessingEnvironment)","u":"mostSpecific(java.util.List,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue","l":"mostSpecific(V, V)","u":"mostSpecific(V,V)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"mPERs"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"mPERs"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"mPERs2"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"mPERs2"},{"p":"org.checkerframework.common.reflection","c":"DefaultReflectionResolver","l":"MSG_PREFEX_REFLECTION"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"MSGS_FILE"},{"p":"org.checkerframework.checker.units","c":"UnitsRelations","l":"multiplication(AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"multiplication(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"multiplication(AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"multiplication(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"MustCallAnnotatedTypeFactory(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallChecker","l":"MustCallChecker()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallNoCreatesMustCallForChecker","l":"MustCallNoCreatesMustCallForChecker()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallTransfer","l":"MustCallTransfer(CFAnalysis)","u":"%3Cinit%3E(org.checkerframework.framework.flow.CFAnalysis)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallTypeAnnotator","l":"MustCallTypeAnnotator(MustCallAnnotatedTypeFactory)","u":"%3Cinit%3E(org.checkerframework.checker.mustcall.MustCallAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallVisitor","l":"MustCallVisitor(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"N"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"N"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"Label","l":"name"},{"p":"org.checkerframework.dataflow.cfg.node","c":"VariableDeclarationNode","l":"name"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"nameExpressionToString(ExpressionTree)","u":"nameExpressionToString(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"names"},{"p":"org.checkerframework.framework.qual","c":"DefaultFor","l":"names()"},{"p":"org.checkerframework.framework.qual","c":"DefaultFor","l":"namesExceptions()"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy","l":"nameToQualifierKind"},{"p":"org.checkerframework.checker.units.qual","c":"Prefix","l":"nano"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"narrow(Node, TypeMirror)","u":"narrow(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"narrowAndBox(Node, TypeMirror)","u":"narrowAndBox(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TypeKindUtils.PrimitiveConversionKind","l":"NARROWING"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NarrowingConversionNode","l":"NarrowingConversionNode(Tree, Node, TypeMirror)","u":"%3Cinit%3E(com.sun.source.tree.Tree,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"NEG_1"},{"p":"org.checkerframework.dataflow.expression","c":"ValueLiteral","l":"negate()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"negateConstant(String)","u":"negateConstant(java.lang.String)"},{"p":"org.checkerframework.checker.index","c":"Subsequence","l":"negateString(String)","u":"negateString(java.lang.String)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"negativeArraySizeExceptionType"},{"p":"org.checkerframework.checker.index.searchindex","c":"SearchIndexAnnotatedTypeFactory","l":"negativeIndexForValueElement"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"negativeIndexForValueElement"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.UpperBoundLiteralQualifier","l":"NEGATIVEONE"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"NEGATIVEONE"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"newArrayExceptionTypes"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"NEWOBJECT"},{"p":"org.checkerframework.checker.index","c":"IndexRefinementInfo","l":"newResult"},{"p":"org.checkerframework.framework.test.diagnostics","c":"JavaDiagnosticReader","l":"next()"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundAnnotatedTypeFactory","l":"NN"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"NN"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallChecker","l":"NO_CREATES_MUSTCALLFOR"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallChecker","l":"NO_LIGHTWEIGHT_OWNERSHIP"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallChecker","l":"NO_RESOURCE_ALIASES"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"noClassDefFoundErrorType"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferInput","l":"node"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ExceptionBlockImpl","l":"node"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ExtendedNode.ExtendedNodeType","l":"NODE"},{"p":"org.checkerframework.dataflow.cfg.node","c":"Node","l":"Node(TypeMirror)","u":"%3Cinit%3E(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"Node","l":"nodeCollectionToString(Collection<? extends Node>)","u":"nodeCollectionToString(java.util.Collection)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"PhaseOneResult","l":"nodeToString(ExtendedNode)","u":"nodeToString(org.checkerframework.dataflow.cfg.builder.ExtendedNode)"},{"p":"org.checkerframework.dataflow.util","c":"NodeUtils","l":"NodeUtils()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"nodeValues"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"nodeValues"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"nodeValuesToString(Map<Node, V>)","u":"nodeValuesToString(java.util.Map)"},{"p":"org.checkerframework.framework.type","c":"NoElementQualifierHierarchy","l":"NoElementQualifierHierarchy(Collection<Class<? extends Annotation>>, Elements)","u":"%3Cinit%3E(java.util.Collection,javax.lang.model.util.Elements)"},{"p":"org.checkerframework.common.aliasing","c":"AliasingAnnotatedTypeFactory","l":"NON_LEAKED"},{"p":"org.checkerframework.common.value","c":"ValueChecker","l":"NON_NULL_STRINGS_CONCATENATION"},{"p":"org.checkerframework.framework.qual","c":"TypeKind","l":"NONE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"NONE_ARRAY"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"NONE_DECLARED"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"NONE_EXECUTABLE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"NONE_INTERSECTION"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"NONE_NONE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"NONE_NULL"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"NONE_PRIMITIVE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"NONE_TYPEVAR"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"NONE_UNION"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"NONE_WILDCARD"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"NONNULL"},{"p":"org.checkerframework.checker.nullness","c":"NullnessTransfer","l":"NONNULL"},{"p":"org.checkerframework.checker.calledmethods.builder","c":"LombokSupport","l":"NONNULL_ANNOTATIONS"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"noQualifierParameterValueElement"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"NOT_EFFECTIVELY_FINAL"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"NOT_ONLY_INITIALIZED"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker.PurityResult","l":"notBothReasons"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker.PurityResult","l":"notDetReasons"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NotEqualNode","l":"NotEqualNode(BinaryTree, Node, Node)","u":"%3Cinit%3E(com.sun.source.tree.BinaryTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.common.value.util","c":"ByteMath","l":"notEqualTo(Number)","u":"notEqualTo(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"DoubleMath","l":"notEqualTo(Number)","u":"notEqualTo(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"FloatMath","l":"notEqualTo(Number)","u":"notEqualTo(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"IntegerMath","l":"notEqualTo(Number)","u":"notEqualTo(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"LongMath","l":"notEqualTo(Number)","u":"notEqualTo(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"NumberMath","l":"notEqualTo(Number)","u":"notEqualTo(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"ShortMath","l":"notEqualTo(Number)","u":"notEqualTo(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"NOTHING"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker.PurityResult","l":"notSEFreeReasons"},{"p":"org.checkerframework.checker.formatter.qual","c":"ConversionCategory","l":"NULL"},{"p":"org.checkerframework.framework.qual","c":"LiteralKind","l":"NULL"},{"p":"org.checkerframework.framework.qual","c":"TypeKind","l":"NULL"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"NULL_ARRAY"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"NULL_DECLARED"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"NULL_EXECUTABLE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"NULL_INTERSECTION"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"NULL_NONE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"NULL_NULL"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"NULL_PRIMITIVE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"NULL_TYPEVAR"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"NULL_UNION"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"NULL_WILDCARD"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"NULLABLE"},{"p":"org.checkerframework.checker.nullness","c":"NullnessTransfer","l":"NULLABLE"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil.InvocationType","l":"NULLARRAY"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NullChkNode","l":"NullChkNode(Tree, Node)","u":"%3Cinit%3E(com.sun.source.tree.Tree,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NullLiteralNode","l":"NullLiteralNode(LiteralTree)","u":"%3Cinit%3E(com.sun.source.tree.LiteralTree)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnalysis","l":"NullnessAnalysis(BaseTypeChecker, NullnessAnnotatedTypeFactory)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,org.checkerframework.checker.nullness.NullnessAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"nullnessAnnos"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"NullnessAnnotatedTypeFactory(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFormatter","l":"NullnessAnnotatedTypeFormatter(boolean, boolean)","u":"%3Cinit%3E(boolean,boolean)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessChecker","l":"NullnessChecker()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFormatter.NullnessFormattingVisitor","l":"NullnessFormattingVisitor(AnnotationFormatter, boolean, boolean)","u":"%3Cinit%3E(org.checkerframework.framework.util.AnnotationFormatter,boolean,boolean)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory.NullnessPropagationTreeAnnotator","l":"NullnessPropagationTreeAnnotator(AnnotatedTypeFactory)","u":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory.NullnessQualifierHierarchy","l":"NullnessQualifierHierarchy()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.nullness","c":"NullnessStore","l":"NullnessStore(CFAbstractAnalysis<NullnessValue, NullnessStore, ?>, boolean)","u":"%3Cinit%3E(org.checkerframework.framework.flow.CFAbstractAnalysis,boolean)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessStore","l":"NullnessStore(NullnessStore)","u":"%3Cinit%3E(org.checkerframework.checker.nullness.NullnessStore)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessTransfer","l":"NullnessTransfer(NullnessAnalysis)","u":"%3Cinit%3E(org.checkerframework.checker.nullness.NullnessAnalysis)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory.NullnessTreeAnnotator","l":"NullnessTreeAnnotator(NullnessAnnotatedTypeFactory)","u":"%3Cinit%3E(org.checkerframework.checker.nullness.NullnessAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory.NullnessTypeAnnotator","l":"NullnessTypeAnnotator(InitializationAnnotatedTypeFactory<?, ?, ?, ?>)","u":"%3Cinit%3E(org.checkerframework.checker.initialization.InitializationAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessTransfer","l":"nullnessTypeFactory"},{"p":"org.checkerframework.checker.nullness","c":"NullnessValue","l":"NullnessValue(CFAbstractAnalysis<NullnessValue, ?, ?>, AnnotationMirrorSet, TypeMirror)","u":"%3Cinit%3E(org.checkerframework.framework.flow.CFAbstractAnalysis,org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"NullnessVisitor(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"nullPointerExceptionType"},{"p":"org.checkerframework.checker.i18nformatter.qual","c":"I18nConversionCategory","l":"NUMBER"},{"p":"org.checkerframework.common.value.util","c":"NumberMath","l":"NumberMath()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory.UpperBoundQualifierHierarchy","l":"numberOfIterationsBeforeWidening()"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"numberOfIterationsBeforeWidening()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalAdditionNode","l":"NumericalAdditionNode(BinaryTree, Node, Node)","u":"%3Cinit%3E(com.sun.source.tree.BinaryTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalMinusNode","l":"NumericalMinusNode(UnaryTree, Node)","u":"%3Cinit%3E(com.sun.source.tree.UnaryTree,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalMultiplicationNode","l":"NumericalMultiplicationNode(BinaryTree, Node, Node)","u":"%3Cinit%3E(com.sun.source.tree.BinaryTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalPlusNode","l":"NumericalPlusNode(UnaryTree, Node)","u":"%3Cinit%3E(com.sun.source.tree.UnaryTree,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalSubtractionNode","l":"NumericalSubtractionNode(BinaryTree, Node, Node)","u":"%3Cinit%3E(com.sun.source.tree.BinaryTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ObjectCreationNode","l":"ObjectCreationNode(NewClassTree, Node, Node, List<Node>, ClassDeclarationNode)","u":"%3Cinit%3E(com.sun.source.tree.NewClassTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node,java.util.List,org.checkerframework.dataflow.cfg.node.ClassDeclarationNode)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"objectGetClass"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"objectTM"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"objectTypeMirror"},{"p":"org.checkerframework.javacutil","c":"Pair","l":"of(V1, V2)","u":"of(V1,V2)"},{"p":"org.checkerframework.checker.index.qual","c":"EnsuresLTLengthOf","l":"offset()"},{"p":"org.checkerframework.checker.index.qual","c":"EnsuresLTLengthOfIf","l":"offset()"},{"p":"org.checkerframework.checker.index.qual","c":"LTLengthOf","l":"offset()"},{"p":"org.checkerframework.checker.index.qual","c":"SubstringIndexFor","l":"offset()"},{"p":"org.checkerframework.checker.index","c":"OffsetDependentTypesHelper","l":"OffsetDependentTypesHelper(AnnotatedTypeFactory)","u":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"OffsetEquation(OffsetEquation)","u":"%3Cinit%3E(org.checkerframework.checker.index.upperbound.OffsetEquation)"},{"p":"org.checkerframework.framework.util","c":"Heuristics.OfKind","l":"OfKind(Tree.Kind, Heuristics.Matcher)","u":"%3Cinit%3E(com.sun.source.tree.Tree.Kind,org.checkerframework.framework.util.Heuristics.Matcher)"},{"p":"org.checkerframework.checker.units.qual","c":"Prefix","l":"one"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"ONE"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.UpperBoundLiteralQualifier","l":"ONE"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"ONE"},{"p":"org.checkerframework.dataflow.cfg.node","c":"InstanceOfNode","l":"operand"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NarrowingConversionNode","l":"operand"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NullChkNode","l":"operand"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringConversionNode","l":"operand"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TypeCastNode","l":"operand"},{"p":"org.checkerframework.dataflow.cfg.node","c":"UnaryOperationNode","l":"operand"},{"p":"org.checkerframework.dataflow.cfg.node","c":"WideningConversionNode","l":"operand"},{"p":"org.checkerframework.dataflow.expression","c":"UnaryOperation","l":"operand"},{"p":"org.checkerframework.dataflow.expression","c":"BinaryOperation","l":"operationKind"},{"p":"org.checkerframework.dataflow.expression","c":"UnaryOperation","l":"operationKind"},{"p":"org.checkerframework.common.value","c":"ValueCheckerUtils","l":"optimize(JavaExpression, AnnotatedTypeFactory)","u":"optimize(org.checkerframework.dataflow.expression.JavaExpression,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"OPTION_SEPARATOR"},{"p":"org.checkerframework.checker.optional","c":"OptionalChecker","l":"OptionalChecker()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.optional","c":"OptionalVisitor","l":"OptionalVisitor(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"optionMapToList(Map<String, String>)","u":"optionMapToList(java.util.Map)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"order(Collection<AnnotatedTypeMirror.AnnotatedTypeVariable>)","u":"order(java.util.Collection)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"order(Collection<TypeVariable>, Types)","u":"order(java.util.Collection,javax.lang.model.util.Types)"},{"p":"org.checkerframework.checker.nullness.util","c":"Opt","l":"orElse(T, T)","u":"orElse(T,T)"},{"p":"org.checkerframework.checker.nullness.util","c":"Opt","l":"orElseGet(T, Supplier<? extends T>)","u":"orElseGet(T,java.util.function.Supplier)"},{"p":"org.checkerframework.checker.nullness.util","c":"Opt","l":"orElseThrow(T, Supplier<? extends X>)","u":"orElseThrow(T,java.util.function.Supplier)"},{"p":"org.checkerframework.framework.util","c":"Heuristics.OrMatcher","l":"OrMatcher(Heuristics.Matcher...)","u":"%3Cinit%3E(org.checkerframework.framework.util.Heuristics.Matcher...)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"DiagnosticKind","l":"Other"},{"p":"org.checkerframework.framework.qual","c":"TypeKind","l":"OTHER"},{"p":"org.checkerframework.framework.qual","c":"TypeUseLocation","l":"OTHERWISE"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"StringCFGVisualizer","l":"out"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"outDir"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"outOfMemoryErrorType"},{"p":"org.checkerframework.dataflow.analysis","c":"BackwardAnalysisImpl","l":"outStores"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor.OverrideChecker","l":"overridden"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"overriddenMethods(Elements, AnnotatedTypeFactory, ExecutableElement)","u":"overriddenMethods(javax.lang.model.util.Elements,org.checkerframework.framework.type.AnnotatedTypeFactory,javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.framework.util","c":"AnnotatedTypes","l":"overriddenMethods(Elements, ExecutableElement, Collection<AnnotatedTypeMirror.AnnotatedDeclaredType>)","u":"overriddenMethods(javax.lang.model.util.Elements,javax.lang.model.element.ExecutableElement,java.util.Collection)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor.OverrideChecker","l":"overriddenReturnType"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor.OverrideChecker","l":"overriddenType"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor.OverrideChecker","l":"OverrideChecker(Tree, AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror, AnnotatedTypeMirror, AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror)","u":"%3Cinit%3E(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor.OverrideChecker","l":"overrider"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor.OverrideChecker","l":"overriderReturnType"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor.OverrideChecker","l":"overriderTree"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor.OverrideChecker","l":"overriderType"},{"p":"org.checkerframework.checker.resourceleak","c":"MustCallInferenceLogic","l":"OWNING"},{"p":"org.checkerframework.framework.qual","c":"TypeKind","l":"PACKAGE"},{"p":"org.checkerframework.dataflow.cfg.node","c":"PackageNameNode","l":"PackageNameNode(IdentifierTree)","u":"%3Cinit%3E(com.sun.source.tree.IdentifierTree)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"PackageNameNode","l":"PackageNameNode(MemberSelectTree, PackageNameNode)","u":"%3Cinit%3E(com.sun.source.tree.MemberSelectTree,org.checkerframework.dataflow.cfg.node.PackageNameNode)"},{"p":"org.checkerframework.framework.qual","c":"TypeUseLocation","l":"PARAMETER"},{"p":"org.checkerframework.framework.util","c":"JavaExpressionParseUtil","l":"PARAMETER_REGEX"},{"p":"org.checkerframework.framework.util","c":"JavaExpressionParseUtil","l":"parameterIndex(String)","u":"parameterIndex(java.lang.String)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory.ParameterizedExecutableType","l":"ParameterizedExecutableType(AnnotatedTypeMirror.AnnotatedExecutableType, List<AnnotatedTypeMirror>)","u":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,java.util.List)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ParameterizedTypeNode","l":"ParameterizedTypeNode(ParameterizedTypeTree)","u":"%3Cinit%3E(com.sun.source.tree.ParameterizedTypeTree)"},{"p":"org.checkerframework.common.reflection.qual","c":"MethodVal","l":"params()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ClassNameNode","l":"parent"},{"p":"org.checkerframework.dataflow.cfg.node","c":"PackageNameNode","l":"parent"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"parentChecker"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"parentPackage(PackageElement, Elements)","u":"parentPackage(javax.lang.model.element.PackageElement,javax.lang.model.util.Elements)"},{"p":"org.checkerframework.framework.util","c":"JavaExpressionParseUtil","l":"parse(String, TypeMirror, ThisReference, List<FormalParameter>, TreePath, TreePath, ProcessingEnvironment)","u":"parse(java.lang.String,javax.lang.model.type.TypeMirror,org.checkerframework.dataflow.expression.ThisReference,java.util.List,com.sun.source.util.TreePath,com.sun.source.util.TreePath,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileParser","l":"parseAjavaFile(String, InputStream, CompilationUnitTree, AnnotatedTypeFactory, ProcessingEnvironment, AnnotationFileParser.AnnotationFileAnnotations, AnnotationFileElementTypes)","u":"parseAjavaFile(java.lang.String,java.io.InputStream,com.sun.source.tree.CompilationUnitTree,org.checkerframework.framework.type.AnnotatedTypeFactory,javax.annotation.processing.ProcessingEnvironment,org.checkerframework.framework.stub.AnnotationFileParser.AnnotationFileAnnotations,org.checkerframework.framework.stub.AnnotationFileElementTypes)"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileElementTypes","l":"parseAjavaFiles()"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileElementTypes","l":"parseAjavaFileWithTree(String, CompilationUnitTree)","u":"parseAjavaFileWithTree(java.lang.String,com.sun.source.tree.CompilationUnitTree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"parseAnnotationFiles()"},{"p":"org.checkerframework.framework.util","c":"JavaParserUtil","l":"parseCompilationUnit(File)","u":"parseCompilationUnit(java.io.File)"},{"p":"org.checkerframework.framework.util","c":"JavaParserUtil","l":"parseCompilationUnit(InputStream)","u":"parseCompilationUnit(java.io.InputStream)"},{"p":"org.checkerframework.framework.util","c":"JavaParserUtil","l":"parseCompilationUnit(String)","u":"parseCompilationUnit(java.lang.String)"},{"p":"org.checkerframework.framework.util","c":"JavaParserUtil","l":"parseExpression(String)","u":"parseExpression(java.lang.String)"},{"p":"org.checkerframework.framework.util","c":"JavaParserUtil","l":"parseExpression(String, ParserConfiguration.LanguageLevel)","u":"parseExpression(java.lang.String,com.github.javaparser.ParserConfiguration.LanguageLevel)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"parseJavaExpressionString(String, TreePath)","u":"parseJavaExpressionString(java.lang.String,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileParser","l":"parseJdkFileAsStub(String, InputStream, AnnotatedTypeFactory, ProcessingEnvironment, AnnotationFileParser.AnnotationFileAnnotations, AnnotationFileElementTypes)","u":"parseJdkFileAsStub(java.lang.String,java.io.InputStream,org.checkerframework.framework.type.AnnotatedTypeFactory,javax.annotation.processing.ProcessingEnvironment,org.checkerframework.framework.stub.AnnotationFileParser.AnnotationFileAnnotations,org.checkerframework.framework.stub.AnnotationFileElementTypes)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"DiagnosticKind","l":"parseString"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileParser","l":"parseStubFile(String, InputStream, AnnotatedTypeFactory, ProcessingEnvironment, AnnotationFileParser.AnnotationFileAnnotations, AnnotationFileUtil.AnnotationFileType, AnnotationFileElementTypes)","u":"parseStubFile(java.lang.String,java.io.InputStream,org.checkerframework.framework.type.AnnotatedTypeFactory,javax.annotation.processing.ProcessingEnvironment,org.checkerframework.framework.stub.AnnotationFileParser.AnnotationFileAnnotations,org.checkerframework.framework.stub.AnnotationFileUtil.AnnotationFileType,org.checkerframework.framework.stub.AnnotationFileElementTypes)"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileElementTypes","l":"parseStubFiles()"},{"p":"org.checkerframework.framework.util","c":"JavaParserUtil","l":"parseStubUnit(InputStream)","u":"parseStubUnit(java.io.InputStream)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeParser","l":"parseTree(String)","u":"parseTree(java.lang.String)"},{"p":"org.checkerframework.checker.regex","c":"RegexAnnotatedTypeFactory","l":"PARTIALREGEX"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileUtil","l":"partitionQualifiedName(String)","u":"partitionQualifiedName(java.lang.String)"},{"p":"org.checkerframework.javacutil","c":"TreePathUtil","l":"pathTillClass(TreePath)","u":"pathTillClass(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.javacutil","c":"TreePathUtil","l":"pathTillMethod(TreePath)","u":"pathTillMethod(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.javacutil","c":"TreePathUtil","l":"pathTillOfKind(TreePath, Set<Tree.Kind>)","u":"pathTillOfKind(com.sun.source.util.TreePath,java.util.Set)"},{"p":"org.checkerframework.javacutil","c":"TreePathUtil","l":"pathTillOfKind(TreePath, Tree.Kind)","u":"pathTillOfKind(com.sun.source.util.TreePath,com.sun.source.tree.Tree.Kind)"},{"p":"org.checkerframework.framework.test","c":"PerDirectorySuite","l":"PerDirectorySuite(Class<?>)","u":"%3Cinit%3E(java.lang.Class)"},{"p":"org.checkerframework.framework.test","c":"PerFileSuite","l":"PerFileSuite(Class<?>)","u":"%3Cinit%3E(java.lang.Class)"},{"p":"org.checkerframework.dataflow.analysis","c":"Analysis","l":"performAnalysis(ControlFlowGraph)","u":"performAnalysis(org.checkerframework.dataflow.cfg.ControlFlowGraph)"},{"p":"org.checkerframework.dataflow.analysis","c":"BackwardAnalysisImpl","l":"performAnalysis(ControlFlowGraph)","u":"performAnalysis(org.checkerframework.dataflow.cfg.ControlFlowGraph)"},{"p":"org.checkerframework.dataflow.analysis","c":"ForwardAnalysisImpl","l":"performAnalysis(ControlFlowGraph)","u":"performAnalysis(org.checkerframework.dataflow.cfg.ControlFlowGraph)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis","l":"performAnalysis(ControlFlowGraph, List<CFAbstractAnalysis.FieldInitialValue<V>>)","u":"performAnalysis(org.checkerframework.dataflow.cfg.ControlFlowGraph,java.util.List)"},{"p":"org.checkerframework.dataflow.analysis","c":"Analysis","l":"performAnalysisBlock(Block)","u":"performAnalysisBlock(org.checkerframework.dataflow.cfg.block.Block)"},{"p":"org.checkerframework.dataflow.analysis","c":"BackwardAnalysisImpl","l":"performAnalysisBlock(Block)","u":"performAnalysisBlock(org.checkerframework.dataflow.cfg.block.Block)"},{"p":"org.checkerframework.dataflow.analysis","c":"ForwardAnalysisImpl","l":"performAnalysisBlock(Block)","u":"performAnalysisBlock(org.checkerframework.dataflow.cfg.block.Block)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"performFlowAnalysis(ClassTree)","u":"performFlowAnalysis(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.checker.units.qual","c":"Prefix","l":"peta"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"PhaseOneResult","l":"PhaseOneResult(UnderlyingAST, IdentityHashMap<Tree, Set<Node>>, IdentityHashMap<Tree, Set<Node>>, IdentityHashMap<UnaryTree, BinaryTree>, ArrayList<ExtendedNode>, Map<Label, Integer>, Set<Integer>, List<ReturnNode>, Label, Label, List<ClassTree>, List<LambdaExpressionTree>)","u":"%3Cinit%3E(org.checkerframework.dataflow.cfg.UnderlyingAST,java.util.IdentityHashMap,java.util.IdentityHashMap,java.util.IdentityHashMap,java.util.ArrayList,java.util.Map,java.util.Set,java.util.List,org.checkerframework.dataflow.cfg.builder.Label,org.checkerframework.dataflow.cfg.builder.Label,java.util.List,java.util.List)"},{"p":"org.checkerframework.checker.units.qual","c":"Prefix","l":"pico"},{"p":"org.checkerframework.common.value.util","c":"ByteMath","l":"plus(Number)","u":"plus(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"DoubleMath","l":"plus(Number)","u":"plus(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"FloatMath","l":"plus(Number)","u":"plus(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"IntegerMath","l":"plus(Number)","u":"plus(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"LongMath","l":"plus(Number)","u":"plus(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"NumberMath","l":"plus(Number)","u":"plus(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"ShortMath","l":"plus(Number)","u":"plus(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"plus(Range)","u":"plus(org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"plusOffset(int)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"plusOffset(int)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"plusOffset(Node, UpperBoundAnnotatedTypeFactory)","u":"plusOffset(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.checker.index.upperbound.UpperBoundAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"plusOffset(Node, UpperBoundAnnotatedTypeFactory)","u":"plusOffset(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.checker.index.upperbound.UpperBoundAnnotatedTypeFactory)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis.Worklist","l":"poll()"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"pollFirst()"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"pollLast()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"poly"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy.DefaultQualifierKind","l":"poly"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundAnnotatedTypeFactory","l":"POLY"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"POLY"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"POLY"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"POLY"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"POLY_NAME"},{"p":"org.checkerframework.checker.signedness","c":"SignednessAnnotatedTypeFactory","l":"POLY_SIGNED"},{"p":"org.checkerframework.framework.type.poly","c":"AbstractQualifierPolymorphism","l":"polyInstantiationForQualifierParameter"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"POLYNULL"},{"p":"org.checkerframework.checker.nullness","c":"NullnessTransfer","l":"POLYNULL"},{"p":"org.checkerframework.framework.type.poly","c":"AbstractQualifierPolymorphism","l":"polyQuals"},{"p":"org.checkerframework.checker.regex","c":"RegexAnnotatedTypeFactory","l":"POLYREGEX"},{"p":"org.checkerframework.framework.type.poly","c":"AbstractQualifierPolymorphism","l":"polyScanner"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundAnnotatedTypeFactory","l":"POS"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"POS"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"positions"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakAnnotatedTypeFactory","l":"postAnalyze(ControlFlowGraph)","u":"postAnalyze(org.checkerframework.dataflow.cfg.ControlFlowGraph)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"postAnalyze(ControlFlowGraph)","u":"postAnalyze(org.checkerframework.dataflow.cfg.ControlFlowGraph)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"postAsMemberOf(AnnotatedTypeMirror, AnnotatedTypeMirror, Element)","u":"postAsMemberOf(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"postAsMemberOf(AnnotatedTypeMirror, AnnotatedTypeMirror, Element)","u":"postAsMemberOf(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"postAsMemberOf(AnnotatedTypeMirror, AnnotatedTypeMirror, Element)","u":"postAsMemberOf(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.util","c":"Contract.Kind","l":"POSTCONDITION"},{"p":"org.checkerframework.framework.util","c":"Contract.Postcondition","l":"Postcondition(String, AnnotationMirror, AnnotationMirror)","u":"%3Cinit%3E(java.lang.String,javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"postDirectSuperTypes(AnnotatedTypeMirror, List<? extends AnnotatedTypeMirror>)","u":"postDirectSuperTypes(org.checkerframework.framework.type.AnnotatedTypeMirror,java.util.List)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"postDirectSuperTypes(AnnotatedTypeMirror, List<? extends AnnotatedTypeMirror>)","u":"postDirectSuperTypes(org.checkerframework.framework.type.AnnotatedTypeMirror,java.util.List)"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"postfixLookup"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"postfixNodeLookup"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"postInit()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"postInit()"},{"p":"org.checkerframework.common.util.debug","c":"TypeOutputtingChecker.GeneralAnnotatedTypeFactory","l":"postProcessClassTree(ClassTree)","u":"postProcessClassTree(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"postProcessClassTree(ClassTree)","u":"postProcessClassTree(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.framework.util","c":"Heuristics.PreceededBy","l":"PreceededBy(Heuristics.Matcher)","u":"%3Cinit%3E(org.checkerframework.framework.util.Heuristics.Matcher)"},{"p":"org.checkerframework.framework.util","c":"Contract.Kind","l":"PRECONDITION"},{"p":"org.checkerframework.framework.util","c":"Contract.Precondition","l":"Precondition(String, AnnotationMirror, AnnotationMirror)","u":"%3Cinit%3E(java.lang.String,javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"BlockImpl","l":"predecessors"},{"p":"org.checkerframework.checker.nullness","c":"SystemGetPropertyHandler","l":"predefinedSystemProperties"},{"p":"org.checkerframework.checker.units.qual","c":"UnitsMultiple","l":"prefix()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"preProcessClassTree(ClassTree)","u":"preProcessClassTree(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"preProcessClassTree(ClassTree)","u":"preProcessClassTree(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"TargetConstraints.Equalities","l":"primaries"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"TargetConstraints.Subtypes","l":"primaries"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"TargetConstraints.Supertypes","l":"primaries"},{"p":"org.checkerframework.framework.qual","c":"LiteralKind","l":"PRIMITIVE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"PRIMITIVE_ARRAY"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"PRIMITIVE_DECLARED"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"PRIMITIVE_EXECUTABLE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"PRIMITIVE_INTERSECTION"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"PRIMITIVE_NONE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"PRIMITIVE_NULL"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"PRIMITIVE_PRIMITIVE"},{"p":"org.checkerframework.checker.signature","c":"SignatureAnnotatedTypeFactory","l":"PRIMITIVE_TYPE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"PRIMITIVE_TYPEVAR"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"PRIMITIVE_UNION"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"PRIMITIVE_WILDCARD"},{"p":"org.checkerframework.framework.qual","c":"LiteralKind","l":"primitiveLiteralKinds()"},{"p":"org.checkerframework.javacutil","c":"TypeKindUtils","l":"primitiveOrBoxedToTypeKind(TypeMirror)","u":"primitiveOrBoxedToTypeKind(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"PrimitiveTypeNode","l":"PrimitiveTypeNode(PrimitiveTypeTree, Types)","u":"%3Cinit%3E(com.sun.source.tree.PrimitiveTypeTree,javax.lang.model.util.Types)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGBuilder","l":"printBlocks(Set<Block>)","u":"printBlocks(java.util.Set)"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter.FormattingVisitor","l":"printBound(String, AnnotatedTypeMirror, Set<AnnotatedTypeMirror>, StringBuilder)","u":"printBound(java.lang.String,org.checkerframework.framework.type.AnnotatedTypeMirror,java.util.Set,java.lang.StringBuilder)"},{"p":"org.checkerframework.common.util.debug","c":"TypeOutputtingChecker","l":"printClassType(TypeElement, AnnotatedTypeFactory)","u":"printClassType(javax.lang.model.element.TypeElement,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"printOrStoreMessage(Diagnostic.Kind, String, Tree, CompilationUnitTree)","u":"printOrStoreMessage(javax.tools.Diagnostic.Kind,java.lang.String,com.sun.source.tree.Tree,com.sun.source.tree.CompilationUnitTree)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"printOrStoreMessage(Diagnostic.Kind, String, Tree, CompilationUnitTree)","u":"printOrStoreMessage(javax.tools.Diagnostic.Kind,java.lang.String,com.sun.source.tree.Tree,com.sun.source.tree.CompilationUnitTree)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"printOrStoreMessage(Diagnostic.Kind, String, Tree, CompilationUnitTree, StackTraceElement[])","u":"printOrStoreMessage(javax.tools.Diagnostic.Kind,java.lang.String,com.sun.source.tree.Tree,com.sun.source.tree.CompilationUnitTree,java.lang.StackTraceElement[])"},{"p":"org.checkerframework.framework.type","c":"AnnotationClassLoader","l":"printPaths()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"printStats()"},{"p":"org.checkerframework.common.util","c":"TypeVisualizer","l":"printTypevarToDotIfMatches(AnnotatedTypeMirror.AnnotatedTypeVariable, List<String>, String)","u":"printTypevarToDotIfMatches(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,java.util.List,java.lang.String)"},{"p":"org.checkerframework.common.util","c":"TypeVisualizer","l":"printTypevarToPngIfMatches(AnnotatedTypeMirror.AnnotatedTypeVariable, List<String>, String)","u":"printTypevarToPngIfMatches(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,java.util.List,java.lang.String)"},{"p":"org.checkerframework.common.util.debug","c":"SignaturePrinter","l":"printUsage()"},{"p":"org.checkerframework.framework.util","c":"TypeInformationPresenter","l":"process(ClassTree)","u":"process(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"process(CompilationUnitTree, UnderlyingAST)","u":"process(com.sun.source.tree.CompilationUnitTree,org.checkerframework.dataflow.cfg.UnderlyingAST)"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"ConstantPropagationTransfer","l":"process(ConstantPropagationStore, Node, Node)","u":"process(org.checkerframework.dataflow.constantpropagation.ConstantPropagationStore,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis.Worklist","l":"process(ControlFlowGraph)","u":"process(org.checkerframework.dataflow.cfg.ControlFlowGraph)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseThree","l":"process(ControlFlowGraph)","u":"process(org.checkerframework.dataflow.cfg.ControlFlowGraph)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseTwo","l":"process(PhaseOneResult)","u":"process(org.checkerframework.dataflow.cfg.builder.PhaseOneResult)"},{"p":"org.checkerframework.common.util.debug","c":"EmptyProcessor","l":"process(Set<? extends TypeElement>, RoundEnvironment)","u":"process(java.util.Set,javax.annotation.processing.RoundEnvironment)"},{"p":"org.checkerframework.common.util.debug","c":"TreeDebug","l":"process(Set<? extends TypeElement>, RoundEnvironment)","u":"process(java.util.Set,javax.annotation.processing.RoundEnvironment)"},{"p":"org.checkerframework.common.util.report","c":"DoNothingChecker","l":"process(Set<? extends TypeElement>, RoundEnvironment)","u":"process(java.util.Set,javax.annotation.processing.RoundEnvironment)"},{"p":"org.checkerframework.javacutil","c":"AbstractTypeProcessor","l":"process(Set<? extends TypeElement>, RoundEnvironment)","u":"process(java.util.Set,javax.annotation.processing.RoundEnvironment)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"process(TreePath, UnderlyingAST)","u":"process(com.sun.source.util.TreePath,org.checkerframework.dataflow.cfg.UnderlyingAST)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processAnnotatedType(AnnotatedTypeTree, Node)","u":"processAnnotatedType(com.sun.source.tree.AnnotatedTypeTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processAnnotatedType(AnnotatedTypeTree, Node)","u":"processAnnotatedType(com.sun.source.tree.AnnotatedTypeTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processAnnotatedType(AnnotatedTypeTree, Node)","u":"processAnnotatedType(com.sun.source.tree.AnnotatedTypeTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processAnnotation(AnnotationTree, MarkerAnnotationExpr)","u":"processAnnotation(com.sun.source.tree.AnnotationTree,com.github.javaparser.ast.expr.MarkerAnnotationExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processAnnotation(AnnotationTree, MarkerAnnotationExpr)","u":"processAnnotation(com.sun.source.tree.AnnotationTree,com.github.javaparser.ast.expr.MarkerAnnotationExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processAnnotation(AnnotationTree, MarkerAnnotationExpr)","u":"processAnnotation(com.sun.source.tree.AnnotationTree,com.github.javaparser.ast.expr.MarkerAnnotationExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processAnnotation(AnnotationTree, NormalAnnotationExpr)","u":"processAnnotation(com.sun.source.tree.AnnotationTree,com.github.javaparser.ast.expr.NormalAnnotationExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processAnnotation(AnnotationTree, NormalAnnotationExpr)","u":"processAnnotation(com.sun.source.tree.AnnotationTree,com.github.javaparser.ast.expr.NormalAnnotationExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processAnnotation(AnnotationTree, NormalAnnotationExpr)","u":"processAnnotation(com.sun.source.tree.AnnotationTree,com.github.javaparser.ast.expr.NormalAnnotationExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processAnnotation(AnnotationTree, SingleMemberAnnotationExpr)","u":"processAnnotation(com.sun.source.tree.AnnotationTree,com.github.javaparser.ast.expr.SingleMemberAnnotationExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processAnnotation(AnnotationTree, SingleMemberAnnotationExpr)","u":"processAnnotation(com.sun.source.tree.AnnotationTree,com.github.javaparser.ast.expr.SingleMemberAnnotationExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processAnnotation(AnnotationTree, SingleMemberAnnotationExpr)","u":"processAnnotation(com.sun.source.tree.AnnotationTree,com.github.javaparser.ast.expr.SingleMemberAnnotationExpr)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"processArg(Object)","u":"processArg(java.lang.Object)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"processArg(Object)","u":"processArg(java.lang.Object)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processArrayAccess(ArrayAccessTree, ArrayAccessExpr)","u":"processArrayAccess(com.sun.source.tree.ArrayAccessTree,com.github.javaparser.ast.expr.ArrayAccessExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processArrayAccess(ArrayAccessTree, ArrayAccessExpr)","u":"processArrayAccess(com.sun.source.tree.ArrayAccessTree,com.github.javaparser.ast.expr.ArrayAccessExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processArrayAccess(ArrayAccessTree, ArrayAccessExpr)","u":"processArrayAccess(com.sun.source.tree.ArrayAccessTree,com.github.javaparser.ast.expr.ArrayAccessExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processArrayType(ArrayTypeTree, ArrayType)","u":"processArrayType(com.sun.source.tree.ArrayTypeTree,com.github.javaparser.ast.type.ArrayType)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processArrayType(ArrayTypeTree, ArrayType)","u":"processArrayType(com.sun.source.tree.ArrayTypeTree,com.github.javaparser.ast.type.ArrayType)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processArrayType(ArrayTypeTree, ArrayType)","u":"processArrayType(com.sun.source.tree.ArrayTypeTree,com.github.javaparser.ast.type.ArrayType)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processAssert(AssertTree, AssertStmt)","u":"processAssert(com.sun.source.tree.AssertTree,com.github.javaparser.ast.stmt.AssertStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processAssert(AssertTree, AssertStmt)","u":"processAssert(com.sun.source.tree.AssertTree,com.github.javaparser.ast.stmt.AssertStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processAssert(AssertTree, AssertStmt)","u":"processAssert(com.sun.source.tree.AssertTree,com.github.javaparser.ast.stmt.AssertStmt)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processAssignment(AssignmentTree, AssignExpr)","u":"processAssignment(com.sun.source.tree.AssignmentTree,com.github.javaparser.ast.expr.AssignExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processAssignment(AssignmentTree, AssignExpr)","u":"processAssignment(com.sun.source.tree.AssignmentTree,com.github.javaparser.ast.expr.AssignExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processAssignment(AssignmentTree, AssignExpr)","u":"processAssignment(com.sun.source.tree.AssignmentTree,com.github.javaparser.ast.expr.AssignExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processBinary(BinaryTree, BinaryExpr)","u":"processBinary(com.sun.source.tree.BinaryTree,com.github.javaparser.ast.expr.BinaryExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processBinary(BinaryTree, BinaryExpr)","u":"processBinary(com.sun.source.tree.BinaryTree,com.github.javaparser.ast.expr.BinaryExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processBinary(BinaryTree, BinaryExpr)","u":"processBinary(com.sun.source.tree.BinaryTree,com.github.javaparser.ast.expr.BinaryExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processBindingPattern(Tree, PatternExpr)","u":"processBindingPattern(com.sun.source.tree.Tree,com.github.javaparser.ast.expr.PatternExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processBindingPattern(Tree, PatternExpr)","u":"processBindingPattern(com.sun.source.tree.Tree,com.github.javaparser.ast.expr.PatternExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processBindingPattern(Tree, PatternExpr)","u":"processBindingPattern(com.sun.source.tree.Tree,com.github.javaparser.ast.expr.PatternExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processBlock(BlockTree, BlockStmt)","u":"processBlock(com.sun.source.tree.BlockTree,com.github.javaparser.ast.stmt.BlockStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processBlock(BlockTree, BlockStmt)","u":"processBlock(com.sun.source.tree.BlockTree,com.github.javaparser.ast.stmt.BlockStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processBlock(BlockTree, BlockStmt)","u":"processBlock(com.sun.source.tree.BlockTree,com.github.javaparser.ast.stmt.BlockStmt)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processBreak(BreakTree, BreakStmt)","u":"processBreak(com.sun.source.tree.BreakTree,com.github.javaparser.ast.stmt.BreakStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processBreak(BreakTree, BreakStmt)","u":"processBreak(com.sun.source.tree.BreakTree,com.github.javaparser.ast.stmt.BreakStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processBreak(BreakTree, BreakStmt)","u":"processBreak(com.sun.source.tree.BreakTree,com.github.javaparser.ast.stmt.BreakStmt)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processCase(CaseTree, SwitchEntry)","u":"processCase(com.sun.source.tree.CaseTree,com.github.javaparser.ast.stmt.SwitchEntry)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processCase(CaseTree, SwitchEntry)","u":"processCase(com.sun.source.tree.CaseTree,com.github.javaparser.ast.stmt.SwitchEntry)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processCase(CaseTree, SwitchEntry)","u":"processCase(com.sun.source.tree.CaseTree,com.github.javaparser.ast.stmt.SwitchEntry)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processCatch(CatchTree, CatchClause)","u":"processCatch(com.sun.source.tree.CatchTree,com.github.javaparser.ast.stmt.CatchClause)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processCatch(CatchTree, CatchClause)","u":"processCatch(com.sun.source.tree.CatchTree,com.github.javaparser.ast.stmt.CatchClause)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processCatch(CatchTree, CatchClause)","u":"processCatch(com.sun.source.tree.CatchTree,com.github.javaparser.ast.stmt.CatchClause)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processClass(ClassTree, AnnotationDeclaration)","u":"processClass(com.sun.source.tree.ClassTree,com.github.javaparser.ast.body.AnnotationDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processClass(ClassTree, AnnotationDeclaration)","u":"processClass(com.sun.source.tree.ClassTree,com.github.javaparser.ast.body.AnnotationDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processClass(ClassTree, AnnotationDeclaration)","u":"processClass(com.sun.source.tree.ClassTree,com.github.javaparser.ast.body.AnnotationDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processClass(ClassTree, ClassOrInterfaceDeclaration)","u":"processClass(com.sun.source.tree.ClassTree,com.github.javaparser.ast.body.ClassOrInterfaceDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processClass(ClassTree, ClassOrInterfaceDeclaration)","u":"processClass(com.sun.source.tree.ClassTree,com.github.javaparser.ast.body.ClassOrInterfaceDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processClass(ClassTree, ClassOrInterfaceDeclaration)","u":"processClass(com.sun.source.tree.ClassTree,com.github.javaparser.ast.body.ClassOrInterfaceDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processClass(ClassTree, EnumDeclaration)","u":"processClass(com.sun.source.tree.ClassTree,com.github.javaparser.ast.body.EnumDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processClass(ClassTree, EnumDeclaration)","u":"processClass(com.sun.source.tree.ClassTree,com.github.javaparser.ast.body.EnumDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processClass(ClassTree, EnumDeclaration)","u":"processClass(com.sun.source.tree.ClassTree,com.github.javaparser.ast.body.EnumDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processClass(ClassTree, RecordDeclaration)","u":"processClass(com.sun.source.tree.ClassTree,com.github.javaparser.ast.body.RecordDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processClass(ClassTree, RecordDeclaration)","u":"processClass(com.sun.source.tree.ClassTree,com.github.javaparser.ast.body.RecordDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processClass(ClassTree, RecordDeclaration)","u":"processClass(com.sun.source.tree.ClassTree,com.github.javaparser.ast.body.RecordDeclaration)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"processClassTree(ClassTree)","u":"processClassTree(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationVisitor","l":"processClassTree(ClassTree)","u":"processClassTree(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.checker.interning","c":"InterningVisitor","l":"processClassTree(ClassTree)","u":"processClassTree(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"processClassTree(ClassTree)","u":"processClassTree(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"processClassTree(ClassTree)","u":"processClassTree(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.common.util.debug","c":"TypeOutputtingChecker.Visitor","l":"processClassTree(ClassTree)","u":"processClassTree(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.common.util.report","c":"ReportVisitor","l":"processClassTree(ClassTree)","u":"processClassTree(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"processCommonAssignment(TransferInput<V, S>, Node, Node, S, V)","u":"processCommonAssignment(org.checkerframework.dataflow.analysis.TransferInput,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node,S,V)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processCompilationUnit(CompilationUnitTree, CompilationUnit)","u":"processCompilationUnit(com.sun.source.tree.CompilationUnitTree,com.github.javaparser.ast.CompilationUnit)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processCompilationUnit(CompilationUnitTree, CompilationUnit)","u":"processCompilationUnit(com.sun.source.tree.CompilationUnitTree,com.github.javaparser.ast.CompilationUnit)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processCompilationUnit(CompilationUnitTree, CompilationUnit)","u":"processCompilationUnit(com.sun.source.tree.CompilationUnitTree,com.github.javaparser.ast.CompilationUnit)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processCompoundAssignment(CompoundAssignmentTree, AssignExpr)","u":"processCompoundAssignment(com.sun.source.tree.CompoundAssignmentTree,com.github.javaparser.ast.expr.AssignExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processCompoundAssignment(CompoundAssignmentTree, AssignExpr)","u":"processCompoundAssignment(com.sun.source.tree.CompoundAssignmentTree,com.github.javaparser.ast.expr.AssignExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processCompoundAssignment(CompoundAssignmentTree, AssignExpr)","u":"processCompoundAssignment(com.sun.source.tree.CompoundAssignmentTree,com.github.javaparser.ast.expr.AssignExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processConditionalExpression(ConditionalExpressionTree, ConditionalExpr)","u":"processConditionalExpression(com.sun.source.tree.ConditionalExpressionTree,com.github.javaparser.ast.expr.ConditionalExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processConditionalExpression(ConditionalExpressionTree, ConditionalExpr)","u":"processConditionalExpression(com.sun.source.tree.ConditionalExpressionTree,com.github.javaparser.ast.expr.ConditionalExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processConditionalExpression(ConditionalExpressionTree, ConditionalExpr)","u":"processConditionalExpression(com.sun.source.tree.ConditionalExpressionTree,com.github.javaparser.ast.expr.ConditionalExpr)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"processConditionalPostconditions(MethodInvocationNode, ExecutableElement, ExpressionTree, CFStore, CFStore)","u":"processConditionalPostconditions(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,javax.lang.model.element.ExecutableElement,com.sun.source.tree.ExpressionTree,org.checkerframework.framework.flow.CFStore,org.checkerframework.framework.flow.CFStore)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"processConditionalPostconditions(MethodInvocationNode, ExecutableElement, ExpressionTree, S, S)","u":"processConditionalPostconditions(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,javax.lang.model.element.ExecutableElement,com.sun.source.tree.ExpressionTree,S,S)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processContinue(ContinueTree, ContinueStmt)","u":"processContinue(com.sun.source.tree.ContinueTree,com.github.javaparser.ast.stmt.ContinueStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processContinue(ContinueTree, ContinueStmt)","u":"processContinue(com.sun.source.tree.ContinueTree,com.github.javaparser.ast.stmt.ContinueStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processContinue(ContinueTree, ContinueStmt)","u":"processContinue(com.sun.source.tree.ContinueTree,com.github.javaparser.ast.stmt.ContinueStmt)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processDoWhileLoop(DoWhileLoopTree, DoStmt)","u":"processDoWhileLoop(com.sun.source.tree.DoWhileLoopTree,com.github.javaparser.ast.stmt.DoStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processDoWhileLoop(DoWhileLoopTree, DoStmt)","u":"processDoWhileLoop(com.sun.source.tree.DoWhileLoopTree,com.github.javaparser.ast.stmt.DoStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processDoWhileLoop(DoWhileLoopTree, DoStmt)","u":"processDoWhileLoop(com.sun.source.tree.DoWhileLoopTree,com.github.javaparser.ast.stmt.DoStmt)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processEmptyStatement(EmptyStatementTree, EmptyStmt)","u":"processEmptyStatement(com.sun.source.tree.EmptyStatementTree,com.github.javaparser.ast.stmt.EmptyStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processEmptyStatement(EmptyStatementTree, EmptyStmt)","u":"processEmptyStatement(com.sun.source.tree.EmptyStatementTree,com.github.javaparser.ast.stmt.EmptyStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processEmptyStatement(EmptyStatementTree, EmptyStmt)","u":"processEmptyStatement(com.sun.source.tree.EmptyStatementTree,com.github.javaparser.ast.stmt.EmptyStmt)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processEnhancedForLoop(EnhancedForLoopTree, ForEachStmt)","u":"processEnhancedForLoop(com.sun.source.tree.EnhancedForLoopTree,com.github.javaparser.ast.stmt.ForEachStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processEnhancedForLoop(EnhancedForLoopTree, ForEachStmt)","u":"processEnhancedForLoop(com.sun.source.tree.EnhancedForLoopTree,com.github.javaparser.ast.stmt.ForEachStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processEnhancedForLoop(EnhancedForLoopTree, ForEachStmt)","u":"processEnhancedForLoop(com.sun.source.tree.EnhancedForLoopTree,com.github.javaparser.ast.stmt.ForEachStmt)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processExports(ExportsTree, ModuleExportsDirective)","u":"processExports(com.sun.source.tree.ExportsTree,com.github.javaparser.ast.modules.ModuleExportsDirective)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processExports(ExportsTree, ModuleExportsDirective)","u":"processExports(com.sun.source.tree.ExportsTree,com.github.javaparser.ast.modules.ModuleExportsDirective)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processExports(ExportsTree, ModuleExportsDirective)","u":"processExports(com.sun.source.tree.ExportsTree,com.github.javaparser.ast.modules.ModuleExportsDirective)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processExpressionStatemen(ExpressionStatementTree, ExpressionStmt)","u":"processExpressionStatemen(com.sun.source.tree.ExpressionStatementTree,com.github.javaparser.ast.stmt.ExpressionStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processExpressionStatemen(ExpressionStatementTree, ExpressionStmt)","u":"processExpressionStatemen(com.sun.source.tree.ExpressionStatementTree,com.github.javaparser.ast.stmt.ExpressionStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processExpressionStatemen(ExpressionStatementTree, ExpressionStmt)","u":"processExpressionStatemen(com.sun.source.tree.ExpressionStatementTree,com.github.javaparser.ast.stmt.ExpressionStmt)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processForLoop(ForLoopTree, ForStmt)","u":"processForLoop(com.sun.source.tree.ForLoopTree,com.github.javaparser.ast.stmt.ForStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processForLoop(ForLoopTree, ForStmt)","u":"processForLoop(com.sun.source.tree.ForLoopTree,com.github.javaparser.ast.stmt.ForStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processForLoop(ForLoopTree, ForStmt)","u":"processForLoop(com.sun.source.tree.ForLoopTree,com.github.javaparser.ast.stmt.ForStmt)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processIdentifier(IdentifierTree, ClassOrInterfaceType)","u":"processIdentifier(com.sun.source.tree.IdentifierTree,com.github.javaparser.ast.type.ClassOrInterfaceType)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processIdentifier(IdentifierTree, ClassOrInterfaceType)","u":"processIdentifier(com.sun.source.tree.IdentifierTree,com.github.javaparser.ast.type.ClassOrInterfaceType)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processIdentifier(IdentifierTree, ClassOrInterfaceType)","u":"processIdentifier(com.sun.source.tree.IdentifierTree,com.github.javaparser.ast.type.ClassOrInterfaceType)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processIdentifier(IdentifierTree, Name)","u":"processIdentifier(com.sun.source.tree.IdentifierTree,com.github.javaparser.ast.expr.Name)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processIdentifier(IdentifierTree, Name)","u":"processIdentifier(com.sun.source.tree.IdentifierTree,com.github.javaparser.ast.expr.Name)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processIdentifier(IdentifierTree, Name)","u":"processIdentifier(com.sun.source.tree.IdentifierTree,com.github.javaparser.ast.expr.Name)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processIdentifier(IdentifierTree, NameExpr)","u":"processIdentifier(com.sun.source.tree.IdentifierTree,com.github.javaparser.ast.expr.NameExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processIdentifier(IdentifierTree, NameExpr)","u":"processIdentifier(com.sun.source.tree.IdentifierTree,com.github.javaparser.ast.expr.NameExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processIdentifier(IdentifierTree, NameExpr)","u":"processIdentifier(com.sun.source.tree.IdentifierTree,com.github.javaparser.ast.expr.NameExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processIdentifier(IdentifierTree, SimpleName)","u":"processIdentifier(com.sun.source.tree.IdentifierTree,com.github.javaparser.ast.expr.SimpleName)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processIdentifier(IdentifierTree, SimpleName)","u":"processIdentifier(com.sun.source.tree.IdentifierTree,com.github.javaparser.ast.expr.SimpleName)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processIdentifier(IdentifierTree, SimpleName)","u":"processIdentifier(com.sun.source.tree.IdentifierTree,com.github.javaparser.ast.expr.SimpleName)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processIdentifier(IdentifierTree, SuperExpr)","u":"processIdentifier(com.sun.source.tree.IdentifierTree,com.github.javaparser.ast.expr.SuperExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processIdentifier(IdentifierTree, SuperExpr)","u":"processIdentifier(com.sun.source.tree.IdentifierTree,com.github.javaparser.ast.expr.SuperExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processIdentifier(IdentifierTree, SuperExpr)","u":"processIdentifier(com.sun.source.tree.IdentifierTree,com.github.javaparser.ast.expr.SuperExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processIdentifier(IdentifierTree, ThisExpr)","u":"processIdentifier(com.sun.source.tree.IdentifierTree,com.github.javaparser.ast.expr.ThisExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processIdentifier(IdentifierTree, ThisExpr)","u":"processIdentifier(com.sun.source.tree.IdentifierTree,com.github.javaparser.ast.expr.ThisExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processIdentifier(IdentifierTree, ThisExpr)","u":"processIdentifier(com.sun.source.tree.IdentifierTree,com.github.javaparser.ast.expr.ThisExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processIf(IfTree, IfStmt)","u":"processIf(com.sun.source.tree.IfTree,com.github.javaparser.ast.stmt.IfStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processIf(IfTree, IfStmt)","u":"processIf(com.sun.source.tree.IfTree,com.github.javaparser.ast.stmt.IfStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processIf(IfTree, IfStmt)","u":"processIf(com.sun.source.tree.IfTree,com.github.javaparser.ast.stmt.IfStmt)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processImport(ImportTree, ImportDeclaration)","u":"processImport(com.sun.source.tree.ImportTree,com.github.javaparser.ast.ImportDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processImport(ImportTree, ImportDeclaration)","u":"processImport(com.sun.source.tree.ImportTree,com.github.javaparser.ast.ImportDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processImport(ImportTree, ImportDeclaration)","u":"processImport(com.sun.source.tree.ImportTree,com.github.javaparser.ast.ImportDeclaration)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil","l":"processingEnv"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"processingEnv"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"processingEnv"},{"p":"org.checkerframework.framework.type","c":"AnnotationClassLoader","l":"processingEnv"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processInstanceOf(InstanceOfTree, InstanceOfExpr)","u":"processInstanceOf(com.sun.source.tree.InstanceOfTree,com.github.javaparser.ast.expr.InstanceOfExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processInstanceOf(InstanceOfTree, InstanceOfExpr)","u":"processInstanceOf(com.sun.source.tree.InstanceOfTree,com.github.javaparser.ast.expr.InstanceOfExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processInstanceOf(InstanceOfTree, InstanceOfExpr)","u":"processInstanceOf(com.sun.source.tree.InstanceOfTree,com.github.javaparser.ast.expr.InstanceOfExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processIntersectionType(IntersectionTypeTree, IntersectionType)","u":"processIntersectionType(com.sun.source.tree.IntersectionTypeTree,com.github.javaparser.ast.type.IntersectionType)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processIntersectionType(IntersectionTypeTree, IntersectionType)","u":"processIntersectionType(com.sun.source.tree.IntersectionTypeTree,com.github.javaparser.ast.type.IntersectionType)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processIntersectionType(IntersectionTypeTree, IntersectionType)","u":"processIntersectionType(com.sun.source.tree.IntersectionTypeTree,com.github.javaparser.ast.type.IntersectionType)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processLabeledStatement(LabeledStatementTree, LabeledStmt)","u":"processLabeledStatement(com.sun.source.tree.LabeledStatementTree,com.github.javaparser.ast.stmt.LabeledStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processLabeledStatement(LabeledStatementTree, LabeledStmt)","u":"processLabeledStatement(com.sun.source.tree.LabeledStatementTree,com.github.javaparser.ast.stmt.LabeledStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processLabeledStatement(LabeledStatementTree, LabeledStmt)","u":"processLabeledStatement(com.sun.source.tree.LabeledStatementTree,com.github.javaparser.ast.stmt.LabeledStmt)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processLambdaExpression(LambdaExpressionTree, LambdaExpr)","u":"processLambdaExpression(com.sun.source.tree.LambdaExpressionTree,com.github.javaparser.ast.expr.LambdaExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processLambdaExpression(LambdaExpressionTree, LambdaExpr)","u":"processLambdaExpression(com.sun.source.tree.LambdaExpressionTree,com.github.javaparser.ast.expr.LambdaExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processLambdaExpression(LambdaExpressionTree, LambdaExpr)","u":"processLambdaExpression(com.sun.source.tree.LambdaExpressionTree,com.github.javaparser.ast.expr.LambdaExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processLiteral(LiteralTree, BinaryExpr)","u":"processLiteral(com.sun.source.tree.LiteralTree,com.github.javaparser.ast.expr.BinaryExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processLiteral(LiteralTree, BinaryExpr)","u":"processLiteral(com.sun.source.tree.LiteralTree,com.github.javaparser.ast.expr.BinaryExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processLiteral(LiteralTree, BinaryExpr)","u":"processLiteral(com.sun.source.tree.LiteralTree,com.github.javaparser.ast.expr.BinaryExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processLiteral(LiteralTree, LiteralExpr)","u":"processLiteral(com.sun.source.tree.LiteralTree,com.github.javaparser.ast.expr.LiteralExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processLiteral(LiteralTree, LiteralExpr)","u":"processLiteral(com.sun.source.tree.LiteralTree,com.github.javaparser.ast.expr.LiteralExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processLiteral(LiteralTree, LiteralExpr)","u":"processLiteral(com.sun.source.tree.LiteralTree,com.github.javaparser.ast.expr.LiteralExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processLiteral(LiteralTree, UnaryExpr)","u":"processLiteral(com.sun.source.tree.LiteralTree,com.github.javaparser.ast.expr.UnaryExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processLiteral(LiteralTree, UnaryExpr)","u":"processLiteral(com.sun.source.tree.LiteralTree,com.github.javaparser.ast.expr.UnaryExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processLiteral(LiteralTree, UnaryExpr)","u":"processLiteral(com.sun.source.tree.LiteralTree,com.github.javaparser.ast.expr.UnaryExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processMemberReference(MemberReferenceTree, MethodReferenceExpr)","u":"processMemberReference(com.sun.source.tree.MemberReferenceTree,com.github.javaparser.ast.expr.MethodReferenceExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processMemberReference(MemberReferenceTree, MethodReferenceExpr)","u":"processMemberReference(com.sun.source.tree.MemberReferenceTree,com.github.javaparser.ast.expr.MethodReferenceExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processMemberReference(MemberReferenceTree, MethodReferenceExpr)","u":"processMemberReference(com.sun.source.tree.MemberReferenceTree,com.github.javaparser.ast.expr.MethodReferenceExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processMemberSelect(MemberSelectTree, ClassExpr)","u":"processMemberSelect(com.sun.source.tree.MemberSelectTree,com.github.javaparser.ast.expr.ClassExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processMemberSelect(MemberSelectTree, ClassExpr)","u":"processMemberSelect(com.sun.source.tree.MemberSelectTree,com.github.javaparser.ast.expr.ClassExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processMemberSelect(MemberSelectTree, ClassExpr)","u":"processMemberSelect(com.sun.source.tree.MemberSelectTree,com.github.javaparser.ast.expr.ClassExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processMemberSelect(MemberSelectTree, ClassOrInterfaceType)","u":"processMemberSelect(com.sun.source.tree.MemberSelectTree,com.github.javaparser.ast.type.ClassOrInterfaceType)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processMemberSelect(MemberSelectTree, ClassOrInterfaceType)","u":"processMemberSelect(com.sun.source.tree.MemberSelectTree,com.github.javaparser.ast.type.ClassOrInterfaceType)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processMemberSelect(MemberSelectTree, ClassOrInterfaceType)","u":"processMemberSelect(com.sun.source.tree.MemberSelectTree,com.github.javaparser.ast.type.ClassOrInterfaceType)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processMemberSelect(MemberSelectTree, FieldAccessExpr)","u":"processMemberSelect(com.sun.source.tree.MemberSelectTree,com.github.javaparser.ast.expr.FieldAccessExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processMemberSelect(MemberSelectTree, FieldAccessExpr)","u":"processMemberSelect(com.sun.source.tree.MemberSelectTree,com.github.javaparser.ast.expr.FieldAccessExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processMemberSelect(MemberSelectTree, FieldAccessExpr)","u":"processMemberSelect(com.sun.source.tree.MemberSelectTree,com.github.javaparser.ast.expr.FieldAccessExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processMemberSelect(MemberSelectTree, Name)","u":"processMemberSelect(com.sun.source.tree.MemberSelectTree,com.github.javaparser.ast.expr.Name)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processMemberSelect(MemberSelectTree, Name)","u":"processMemberSelect(com.sun.source.tree.MemberSelectTree,com.github.javaparser.ast.expr.Name)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processMemberSelect(MemberSelectTree, Name)","u":"processMemberSelect(com.sun.source.tree.MemberSelectTree,com.github.javaparser.ast.expr.Name)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processMemberSelect(MemberSelectTree, SuperExpr)","u":"processMemberSelect(com.sun.source.tree.MemberSelectTree,com.github.javaparser.ast.expr.SuperExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processMemberSelect(MemberSelectTree, SuperExpr)","u":"processMemberSelect(com.sun.source.tree.MemberSelectTree,com.github.javaparser.ast.expr.SuperExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processMemberSelect(MemberSelectTree, SuperExpr)","u":"processMemberSelect(com.sun.source.tree.MemberSelectTree,com.github.javaparser.ast.expr.SuperExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processMemberSelect(MemberSelectTree, ThisExpr)","u":"processMemberSelect(com.sun.source.tree.MemberSelectTree,com.github.javaparser.ast.expr.ThisExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processMemberSelect(MemberSelectTree, ThisExpr)","u":"processMemberSelect(com.sun.source.tree.MemberSelectTree,com.github.javaparser.ast.expr.ThisExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processMemberSelect(MemberSelectTree, ThisExpr)","u":"processMemberSelect(com.sun.source.tree.MemberSelectTree,com.github.javaparser.ast.expr.ThisExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processMethod(MethodTree, AnnotationMemberDeclaration)","u":"processMethod(com.sun.source.tree.MethodTree,com.github.javaparser.ast.body.AnnotationMemberDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processMethod(MethodTree, AnnotationMemberDeclaration)","u":"processMethod(com.sun.source.tree.MethodTree,com.github.javaparser.ast.body.AnnotationMemberDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processMethod(MethodTree, AnnotationMemberDeclaration)","u":"processMethod(com.sun.source.tree.MethodTree,com.github.javaparser.ast.body.AnnotationMemberDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processMethod(MethodTree, CompactConstructorDeclaration)","u":"processMethod(com.sun.source.tree.MethodTree,com.github.javaparser.ast.body.CompactConstructorDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processMethod(MethodTree, CompactConstructorDeclaration)","u":"processMethod(com.sun.source.tree.MethodTree,com.github.javaparser.ast.body.CompactConstructorDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processMethod(MethodTree, CompactConstructorDeclaration)","u":"processMethod(com.sun.source.tree.MethodTree,com.github.javaparser.ast.body.CompactConstructorDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processMethod(MethodTree, ConstructorDeclaration)","u":"processMethod(com.sun.source.tree.MethodTree,com.github.javaparser.ast.body.ConstructorDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processMethod(MethodTree, ConstructorDeclaration)","u":"processMethod(com.sun.source.tree.MethodTree,com.github.javaparser.ast.body.ConstructorDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processMethod(MethodTree, ConstructorDeclaration)","u":"processMethod(com.sun.source.tree.MethodTree,com.github.javaparser.ast.body.ConstructorDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processMethod(MethodTree, MethodDeclaration)","u":"processMethod(com.sun.source.tree.MethodTree,com.github.javaparser.ast.body.MethodDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processMethod(MethodTree, MethodDeclaration)","u":"processMethod(com.sun.source.tree.MethodTree,com.github.javaparser.ast.body.MethodDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processMethod(MethodTree, MethodDeclaration)","u":"processMethod(com.sun.source.tree.MethodTree,com.github.javaparser.ast.body.MethodDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processMethodInvocation(MethodInvocationTree, ExplicitConstructorInvocationStmt)","u":"processMethodInvocation(com.sun.source.tree.MethodInvocationTree,com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processMethodInvocation(MethodInvocationTree, ExplicitConstructorInvocationStmt)","u":"processMethodInvocation(com.sun.source.tree.MethodInvocationTree,com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processMethodInvocation(MethodInvocationTree, ExplicitConstructorInvocationStmt)","u":"processMethodInvocation(com.sun.source.tree.MethodInvocationTree,com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processMethodInvocation(MethodInvocationTree, MethodCallExpr)","u":"processMethodInvocation(com.sun.source.tree.MethodInvocationTree,com.github.javaparser.ast.expr.MethodCallExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processMethodInvocation(MethodInvocationTree, MethodCallExpr)","u":"processMethodInvocation(com.sun.source.tree.MethodInvocationTree,com.github.javaparser.ast.expr.MethodCallExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processMethodInvocation(MethodInvocationTree, MethodCallExpr)","u":"processMethodInvocation(com.sun.source.tree.MethodInvocationTree,com.github.javaparser.ast.expr.MethodCallExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processModule(ModuleTree, ModuleDeclaration)","u":"processModule(com.sun.source.tree.ModuleTree,com.github.javaparser.ast.modules.ModuleDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processModule(ModuleTree, ModuleDeclaration)","u":"processModule(com.sun.source.tree.ModuleTree,com.github.javaparser.ast.modules.ModuleDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processModule(ModuleTree, ModuleDeclaration)","u":"processModule(com.sun.source.tree.ModuleTree,com.github.javaparser.ast.modules.ModuleDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processNewClass(NewClassTree, ObjectCreationExpr)","u":"processNewClass(com.sun.source.tree.NewClassTree,com.github.javaparser.ast.expr.ObjectCreationExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processNewClass(NewClassTree, ObjectCreationExpr)","u":"processNewClass(com.sun.source.tree.NewClassTree,com.github.javaparser.ast.expr.ObjectCreationExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processNewClass(NewClassTree, ObjectCreationExpr)","u":"processNewClass(com.sun.source.tree.NewClassTree,com.github.javaparser.ast.expr.ObjectCreationExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processOpens(OpensTree, ModuleOpensDirective)","u":"processOpens(com.sun.source.tree.OpensTree,com.github.javaparser.ast.modules.ModuleOpensDirective)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processOpens(OpensTree, ModuleOpensDirective)","u":"processOpens(com.sun.source.tree.OpensTree,com.github.javaparser.ast.modules.ModuleOpensDirective)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processOpens(OpensTree, ModuleOpensDirective)","u":"processOpens(com.sun.source.tree.OpensTree,com.github.javaparser.ast.modules.ModuleOpensDirective)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processOther(Tree, Node)","u":"processOther(com.sun.source.tree.Tree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processOther(Tree, Node)","u":"processOther(com.sun.source.tree.Tree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processOther(Tree, Node)","u":"processOther(com.sun.source.tree.Tree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processPackage(PackageTree, PackageDeclaration)","u":"processPackage(com.sun.source.tree.PackageTree,com.github.javaparser.ast.PackageDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processPackage(PackageTree, PackageDeclaration)","u":"processPackage(com.sun.source.tree.PackageTree,com.github.javaparser.ast.PackageDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processPackage(PackageTree, PackageDeclaration)","u":"processPackage(com.sun.source.tree.PackageTree,com.github.javaparser.ast.PackageDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processParameterizedType(ParameterizedTypeTree, ClassOrInterfaceType)","u":"processParameterizedType(com.sun.source.tree.ParameterizedTypeTree,com.github.javaparser.ast.type.ClassOrInterfaceType)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processParameterizedType(ParameterizedTypeTree, ClassOrInterfaceType)","u":"processParameterizedType(com.sun.source.tree.ParameterizedTypeTree,com.github.javaparser.ast.type.ClassOrInterfaceType)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processParameterizedType(ParameterizedTypeTree, ClassOrInterfaceType)","u":"processParameterizedType(com.sun.source.tree.ParameterizedTypeTree,com.github.javaparser.ast.type.ClassOrInterfaceType)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processParenthesized(ParenthesizedTree, EnclosedExpr)","u":"processParenthesized(com.sun.source.tree.ParenthesizedTree,com.github.javaparser.ast.expr.EnclosedExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processParenthesized(ParenthesizedTree, EnclosedExpr)","u":"processParenthesized(com.sun.source.tree.ParenthesizedTree,com.github.javaparser.ast.expr.EnclosedExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processParenthesized(ParenthesizedTree, EnclosedExpr)","u":"processParenthesized(com.sun.source.tree.ParenthesizedTree,com.github.javaparser.ast.expr.EnclosedExpr)"},{"p":"org.checkerframework.common.aliasing","c":"AliasingTransfer","l":"processPostconditions(Node, CFStore, ExecutableElement, ExpressionTree)","u":"processPostconditions(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.framework.flow.CFStore,javax.lang.model.element.ExecutableElement,com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"processPostconditions(Node, S, ExecutableElement, ExpressionTree)","u":"processPostconditions(org.checkerframework.dataflow.cfg.node.Node,S,javax.lang.model.element.ExecutableElement,com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processPrimitiveType(PrimitiveTypeTree, PrimitiveType)","u":"processPrimitiveType(com.sun.source.tree.PrimitiveTypeTree,com.github.javaparser.ast.type.PrimitiveType)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processPrimitiveType(PrimitiveTypeTree, PrimitiveType)","u":"processPrimitiveType(com.sun.source.tree.PrimitiveTypeTree,com.github.javaparser.ast.type.PrimitiveType)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processPrimitiveType(PrimitiveTypeTree, PrimitiveType)","u":"processPrimitiveType(com.sun.source.tree.PrimitiveTypeTree,com.github.javaparser.ast.type.PrimitiveType)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processPrimitiveType(PrimitiveTypeTree, VoidType)","u":"processPrimitiveType(com.sun.source.tree.PrimitiveTypeTree,com.github.javaparser.ast.type.VoidType)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processPrimitiveType(PrimitiveTypeTree, VoidType)","u":"processPrimitiveType(com.sun.source.tree.PrimitiveTypeTree,com.github.javaparser.ast.type.VoidType)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processPrimitiveType(PrimitiveTypeTree, VoidType)","u":"processPrimitiveType(com.sun.source.tree.PrimitiveTypeTree,com.github.javaparser.ast.type.VoidType)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processProvides(ProvidesTree, ModuleProvidesDirective)","u":"processProvides(com.sun.source.tree.ProvidesTree,com.github.javaparser.ast.modules.ModuleProvidesDirective)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processProvides(ProvidesTree, ModuleProvidesDirective)","u":"processProvides(com.sun.source.tree.ProvidesTree,com.github.javaparser.ast.modules.ModuleProvidesDirective)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processProvides(ProvidesTree, ModuleProvidesDirective)","u":"processProvides(com.sun.source.tree.ProvidesTree,com.github.javaparser.ast.modules.ModuleProvidesDirective)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processRequires(RequiresTree, ModuleRequiresDirective)","u":"processRequires(com.sun.source.tree.RequiresTree,com.github.javaparser.ast.modules.ModuleRequiresDirective)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processRequires(RequiresTree, ModuleRequiresDirective)","u":"processRequires(com.sun.source.tree.RequiresTree,com.github.javaparser.ast.modules.ModuleRequiresDirective)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processRequires(RequiresTree, ModuleRequiresDirective)","u":"processRequires(com.sun.source.tree.RequiresTree,com.github.javaparser.ast.modules.ModuleRequiresDirective)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processReturn(ReturnTree, ReturnStmt)","u":"processReturn(com.sun.source.tree.ReturnTree,com.github.javaparser.ast.stmt.ReturnStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processReturn(ReturnTree, ReturnStmt)","u":"processReturn(com.sun.source.tree.ReturnTree,com.github.javaparser.ast.stmt.ReturnStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processReturn(ReturnTree, ReturnStmt)","u":"processReturn(com.sun.source.tree.ReturnTree,com.github.javaparser.ast.stmt.ReturnStmt)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processSwitch(SwitchTree, SwitchStmt)","u":"processSwitch(com.sun.source.tree.SwitchTree,com.github.javaparser.ast.stmt.SwitchStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processSwitch(SwitchTree, SwitchStmt)","u":"processSwitch(com.sun.source.tree.SwitchTree,com.github.javaparser.ast.stmt.SwitchStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processSwitch(SwitchTree, SwitchStmt)","u":"processSwitch(com.sun.source.tree.SwitchTree,com.github.javaparser.ast.stmt.SwitchStmt)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processSwitchExpression(Tree, SwitchExpr)","u":"processSwitchExpression(com.sun.source.tree.Tree,com.github.javaparser.ast.expr.SwitchExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processSwitchExpression(Tree, SwitchExpr)","u":"processSwitchExpression(com.sun.source.tree.Tree,com.github.javaparser.ast.expr.SwitchExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processSwitchExpression(Tree, SwitchExpr)","u":"processSwitchExpression(com.sun.source.tree.Tree,com.github.javaparser.ast.expr.SwitchExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processSynchronized(SynchronizedTree, SynchronizedStmt)","u":"processSynchronized(com.sun.source.tree.SynchronizedTree,com.github.javaparser.ast.stmt.SynchronizedStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processSynchronized(SynchronizedTree, SynchronizedStmt)","u":"processSynchronized(com.sun.source.tree.SynchronizedTree,com.github.javaparser.ast.stmt.SynchronizedStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processSynchronized(SynchronizedTree, SynchronizedStmt)","u":"processSynchronized(com.sun.source.tree.SynchronizedTree,com.github.javaparser.ast.stmt.SynchronizedStmt)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processThrow(ThrowTree, ThrowStmt)","u":"processThrow(com.sun.source.tree.ThrowTree,com.github.javaparser.ast.stmt.ThrowStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processThrow(ThrowTree, ThrowStmt)","u":"processThrow(com.sun.source.tree.ThrowTree,com.github.javaparser.ast.stmt.ThrowStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processThrow(ThrowTree, ThrowStmt)","u":"processThrow(com.sun.source.tree.ThrowTree,com.github.javaparser.ast.stmt.ThrowStmt)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processTry(TryTree, TryStmt)","u":"processTry(com.sun.source.tree.TryTree,com.github.javaparser.ast.stmt.TryStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processTry(TryTree, TryStmt)","u":"processTry(com.sun.source.tree.TryTree,com.github.javaparser.ast.stmt.TryStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processTry(TryTree, TryStmt)","u":"processTry(com.sun.source.tree.TryTree,com.github.javaparser.ast.stmt.TryStmt)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processTypeCast(TypeCastTree, CastExpr)","u":"processTypeCast(com.sun.source.tree.TypeCastTree,com.github.javaparser.ast.expr.CastExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processTypeCast(TypeCastTree, CastExpr)","u":"processTypeCast(com.sun.source.tree.TypeCastTree,com.github.javaparser.ast.expr.CastExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processTypeCast(TypeCastTree, CastExpr)","u":"processTypeCast(com.sun.source.tree.TypeCastTree,com.github.javaparser.ast.expr.CastExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processTypeParameter(TypeParameterTree, TypeParameter)","u":"processTypeParameter(com.sun.source.tree.TypeParameterTree,com.github.javaparser.ast.type.TypeParameter)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processTypeParameter(TypeParameterTree, TypeParameter)","u":"processTypeParameter(com.sun.source.tree.TypeParameterTree,com.github.javaparser.ast.type.TypeParameter)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processTypeParameter(TypeParameterTree, TypeParameter)","u":"processTypeParameter(com.sun.source.tree.TypeParameterTree,com.github.javaparser.ast.type.TypeParameter)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processUnary(UnaryTree, UnaryExpr)","u":"processUnary(com.sun.source.tree.UnaryTree,com.github.javaparser.ast.expr.UnaryExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processUnary(UnaryTree, UnaryExpr)","u":"processUnary(com.sun.source.tree.UnaryTree,com.github.javaparser.ast.expr.UnaryExpr)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processUnary(UnaryTree, UnaryExpr)","u":"processUnary(com.sun.source.tree.UnaryTree,com.github.javaparser.ast.expr.UnaryExpr)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processUnionType(UnionTypeTree, UnionType)","u":"processUnionType(com.sun.source.tree.UnionTypeTree,com.github.javaparser.ast.type.UnionType)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processUnionType(UnionTypeTree, UnionType)","u":"processUnionType(com.sun.source.tree.UnionTypeTree,com.github.javaparser.ast.type.UnionType)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processUnionType(UnionTypeTree, UnionType)","u":"processUnionType(com.sun.source.tree.UnionTypeTree,com.github.javaparser.ast.type.UnionType)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processUses(UsesTree, ModuleUsesDirective)","u":"processUses(com.sun.source.tree.UsesTree,com.github.javaparser.ast.modules.ModuleUsesDirective)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processUses(UsesTree, ModuleUsesDirective)","u":"processUses(com.sun.source.tree.UsesTree,com.github.javaparser.ast.modules.ModuleUsesDirective)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processUses(UsesTree, ModuleUsesDirective)","u":"processUses(com.sun.source.tree.UsesTree,com.github.javaparser.ast.modules.ModuleUsesDirective)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processVariable(VariableTree, EnumConstantDeclaration)","u":"processVariable(com.sun.source.tree.VariableTree,com.github.javaparser.ast.body.EnumConstantDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processVariable(VariableTree, EnumConstantDeclaration)","u":"processVariable(com.sun.source.tree.VariableTree,com.github.javaparser.ast.body.EnumConstantDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processVariable(VariableTree, EnumConstantDeclaration)","u":"processVariable(com.sun.source.tree.VariableTree,com.github.javaparser.ast.body.EnumConstantDeclaration)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processVariable(VariableTree, Parameter)","u":"processVariable(com.sun.source.tree.VariableTree,com.github.javaparser.ast.body.Parameter)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processVariable(VariableTree, Parameter)","u":"processVariable(com.sun.source.tree.VariableTree,com.github.javaparser.ast.body.Parameter)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processVariable(VariableTree, Parameter)","u":"processVariable(com.sun.source.tree.VariableTree,com.github.javaparser.ast.body.Parameter)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processVariable(VariableTree, ReceiverParameter)","u":"processVariable(com.sun.source.tree.VariableTree,com.github.javaparser.ast.body.ReceiverParameter)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processVariable(VariableTree, ReceiverParameter)","u":"processVariable(com.sun.source.tree.VariableTree,com.github.javaparser.ast.body.ReceiverParameter)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processVariable(VariableTree, ReceiverParameter)","u":"processVariable(com.sun.source.tree.VariableTree,com.github.javaparser.ast.body.ReceiverParameter)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processVariable(VariableTree, VariableDeclarator)","u":"processVariable(com.sun.source.tree.VariableTree,com.github.javaparser.ast.body.VariableDeclarator)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processVariable(VariableTree, VariableDeclarator)","u":"processVariable(com.sun.source.tree.VariableTree,com.github.javaparser.ast.body.VariableDeclarator)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processVariable(VariableTree, VariableDeclarator)","u":"processVariable(com.sun.source.tree.VariableTree,com.github.javaparser.ast.body.VariableDeclarator)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processWhileLoop(WhileLoopTree, WhileStmt)","u":"processWhileLoop(com.sun.source.tree.WhileLoopTree,com.github.javaparser.ast.stmt.WhileStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processWhileLoop(WhileLoopTree, WhileStmt)","u":"processWhileLoop(com.sun.source.tree.WhileLoopTree,com.github.javaparser.ast.stmt.WhileStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processWhileLoop(WhileLoopTree, WhileStmt)","u":"processWhileLoop(com.sun.source.tree.WhileLoopTree,com.github.javaparser.ast.stmt.WhileStmt)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processWildcard(WildcardTree, WildcardType)","u":"processWildcard(com.sun.source.tree.WildcardTree,com.github.javaparser.ast.type.WildcardType)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processWildcard(WildcardTree, WildcardType)","u":"processWildcard(com.sun.source.tree.WildcardTree,com.github.javaparser.ast.type.WildcardType)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processWildcard(WildcardTree, WildcardType)","u":"processWildcard(com.sun.source.tree.WildcardTree,com.github.javaparser.ast.type.WildcardType)"},{"p":"org.checkerframework.framework.ajava","c":"DefaultJointVisitor","l":"processYield(Tree, YieldStmt)","u":"processYield(com.sun.source.tree.Tree,com.github.javaparser.ast.stmt.YieldStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"processYield(Tree, YieldStmt)","u":"processYield(com.sun.source.tree.Tree,com.github.javaparser.ast.stmt.YieldStmt)"},{"p":"org.checkerframework.framework.ajava","c":"JointVisitorWithDefaultAction","l":"processYield(Tree, YieldStmt)","u":"processYield(com.sun.source.tree.Tree,com.github.javaparser.ast.stmt.YieldStmt)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForPropagator","l":"propagate(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedDeclaredType, KeyForPropagator.PropagationDirection, AnnotatedTypeFactory)","u":"propagate(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.checker.nullness.KeyForPropagator.PropagationDirection,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForPropagator","l":"propagateNewClassTree(NewClassTree, AnnotatedTypeMirror, KeyForAnnotatedTypeFactory)","u":"propagateNewClassTree(com.sun.source.tree.NewClassTree,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.checker.nullness.KeyForAnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"SubtypesSolver","l":"propagatePreviousGlbs(TargetConstraints.Subtypes, InferenceResult, Map<AnnotatedTypeMirror, AnnotationMirrorSet>)","u":"propagatePreviousGlbs(org.checkerframework.framework.util.typeinference.solver.TargetConstraints.Subtypes,org.checkerframework.framework.util.typeinference.solver.InferenceResult,java.util.Map)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"SupertypesSolver","l":"propagatePreviousLubs(TargetConstraints, SupertypesSolver.Lubs, Map<AnnotatedTypeMirror, AnnotationMirrorSet>)","u":"propagatePreviousLubs(org.checkerframework.framework.util.typeinference.solver.TargetConstraints,org.checkerframework.framework.util.typeinference.solver.SupertypesSolver.Lubs,java.util.Map)"},{"p":"org.checkerframework.dataflow.analysis","c":"BackwardAnalysisImpl","l":"propagateStoresTo(Block, Node, TransferInput<V, S>, Store.FlowRule, boolean)","u":"propagateStoresTo(org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.TransferInput,org.checkerframework.dataflow.analysis.Store.FlowRule,boolean)"},{"p":"org.checkerframework.dataflow.analysis","c":"ForwardAnalysisImpl","l":"propagateStoresTo(Block, Node, TransferInput<V, S>, Store.FlowRule, boolean)","u":"propagateStoresTo(org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.TransferInput,org.checkerframework.dataflow.analysis.Store.FlowRule,boolean)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"propagateStoresTo(Block, Node, TransferInput<V, S>, Store.FlowRule, boolean)","u":"propagateStoresTo(org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.TransferInput,org.checkerframework.dataflow.analysis.Store.FlowRule,boolean)"},{"p":"org.checkerframework.framework.type.treeannotator","c":"PropagationTreeAnnotator","l":"PropagationTreeAnnotator(AnnotatedTypeFactory)","u":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.type.typeannotator","c":"PropagationTypeAnnotator","l":"PropagationTypeAnnotator(AnnotatedTypeFactory)","u":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.propkey","c":"PropertyKeyAnnotatedTypeFactory","l":"PropertyKeyAnnotatedTypeFactory(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.propkey","c":"PropertyKeyChecker","l":"PropertyKeyChecker()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"PURE"},{"p":"org.checkerframework.framework.util","c":"PurityAnnotatedTypeFactory","l":"PurityAnnotatedTypeFactory(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker","l":"PurityChecker()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.util","c":"PurityChecker","l":"PurityChecker()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker.PurityCheckerHelper","l":"PurityCheckerHelper(AnnotationProvider, boolean, boolean)","u":"%3Cinit%3E(org.checkerframework.javacutil.AnnotationProvider,boolean,boolean)"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker.PurityResult","l":"PurityResult()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.util","c":"PurityUtils","l":"PurityUtils()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.type","c":"StructuralEqualityVisitHistory","l":"put(AnnotatedTypeMirror, AnnotatedTypeMirror, AnnotationMirror, boolean)","u":"put(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror,boolean)"},{"p":"org.checkerframework.framework.type","c":"SubtypeVisitHistory","l":"put(AnnotatedTypeMirror, AnnotatedTypeMirror, AnnotationMirror, boolean)","u":"put(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror,boolean)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorMap","l":"put(AnnotationMirror, V)","u":"put(javax.lang.model.element.AnnotationMirror,V)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorMap","l":"putAll(Map<? extends AnnotationMirror, ? extends V>)","u":"putAll(java.util.Map)"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileParser","l":"putAllNew(Map<K, V>, Map<K, V>)","u":"putAllNew(java.util.Map,java.util.Map)"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprStore","l":"putBusyExpr(BusyExprValue)","u":"putBusyExpr(org.checkerframework.dataflow.busyexpr.BusyExprValue)"},{"p":"org.checkerframework.dataflow.reachingdef","c":"ReachingDefinitionStore","l":"putDef(ReachingDefinitionNode)","u":"putDef(org.checkerframework.dataflow.reachingdef.ReachingDefinitionNode)"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileParser","l":"putIfAbsent(Map<K, V>, K, V)","u":"putIfAbsent(java.util.Map,K,V)"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarStore","l":"putLiveVar(LiveVarNode)","u":"putLiveVar(org.checkerframework.dataflow.livevariable.LiveVarNode)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"putUnsigned(ByteBuffer, byte)","u":"putUnsigned(java.nio.ByteBuffer,byte)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"putUnsigned(ByteBuffer, int, byte)","u":"putUnsigned(java.nio.ByteBuffer,int,byte)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"putUnsigned(IntBuffer, int)","u":"putUnsigned(java.nio.IntBuffer,int)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"putUnsigned(IntBuffer, int, int)","u":"putUnsigned(java.nio.IntBuffer,int,int)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"putUnsigned(IntBuffer, int[])","u":"putUnsigned(java.nio.IntBuffer,int[])"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"putUnsigned(IntBuffer, int[], int, int)","u":"putUnsigned(java.nio.IntBuffer,int[],int,int)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"putUnsignedInt(ByteBuffer, int)","u":"putUnsignedInt(java.nio.ByteBuffer,int)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"putUnsignedInt(ByteBuffer, int, int)","u":"putUnsignedInt(java.nio.ByteBuffer,int,int)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"putUnsignedLong(ByteBuffer, int, long)","u":"putUnsignedLong(java.nio.ByteBuffer,int,long)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"putUnsignedShort(ByteBuffer, int, short)","u":"putUnsignedShort(java.nio.ByteBuffer,int,short)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"putUnsignedShort(ByteBuffer, short)","u":"putUnsignedShort(java.nio.ByteBuffer,short)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"qualHierarchy"},{"p":"org.checkerframework.framework.type.poly","c":"AbstractQualifierPolymorphism","l":"qualHierarchy"},{"p":"org.checkerframework.framework.type.treeannotator","c":"LiteralTreeAnnotator","l":"qualHierarchy"},{"p":"org.checkerframework.framework.qual","c":"ConditionalPostconditionAnnotation","l":"qualifier()"},{"p":"org.checkerframework.framework.qual","c":"EnsuresQualifier","l":"qualifier()"},{"p":"org.checkerframework.framework.qual","c":"EnsuresQualifierIf","l":"qualifier()"},{"p":"org.checkerframework.framework.qual","c":"FieldInvariant","l":"qualifier()"},{"p":"org.checkerframework.framework.qual","c":"PostconditionAnnotation","l":"qualifier()"},{"p":"org.checkerframework.framework.qual","c":"PreconditionAnnotation","l":"qualifier()"},{"p":"org.checkerframework.framework.qual","c":"RequiresQualifier","l":"qualifier()"},{"p":"org.checkerframework.framework.util","c":"ContractsFromMethod","l":"qualifierArgumentValueElement"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"QualifierDefaults(Elements, AnnotatedTypeFactory)","u":"%3Cinit%3E(javax.lang.model.util.Elements,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis","l":"qualifierHierarchy"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"qualifierHierarchy"},{"p":"org.checkerframework.framework.type","c":"ElementQualifierHierarchy","l":"qualifierKindHierarchy"},{"p":"org.checkerframework.framework.type","c":"NoElementQualifierHierarchy","l":"qualifierKindHierarchy"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy","l":"qualifierKinds"},{"p":"org.checkerframework.framework.type","c":"NoElementQualifierHierarchy","l":"qualifiers"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"qualifierUpperBounds"},{"p":"org.checkerframework.framework.type","c":"QualifierUpperBounds","l":"QualifierUpperBounds(AnnotatedTypeFactory)","u":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.units.qual","c":"UnitsMultiple","l":"quantity()"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis.Worklist","l":"queue"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"rad"},{"p":"org.checkerframework.dataflow.reachingdef","c":"ReachingDefinitionNode","l":"ReachingDefinitionNode(AssignmentNode)","u":"%3Cinit%3E(org.checkerframework.dataflow.cfg.node.AssignmentNode)"},{"p":"org.checkerframework.dataflow.cfg.playground","c":"ReachingDefinitionPlayground","l":"ReachingDefinitionPlayground()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.reachingdef","c":"ReachingDefinitionStore","l":"ReachingDefinitionStore()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.reachingdef","c":"ReachingDefinitionStore","l":"ReachingDefinitionStore(LinkedHashSet<ReachingDefinitionNode>)","u":"%3Cinit%3E(java.util.LinkedHashSet)"},{"p":"org.checkerframework.dataflow.reachingdef","c":"ReachingDefinitionTransfer","l":"ReachingDefinitionTransfer()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.test.diagnostics","c":"JavaDiagnosticReader","l":"readDiagnosticFiles(Iterable<? extends File>)","u":"readDiagnosticFiles(java.lang.Iterable)"},{"p":"org.checkerframework.framework.test","c":"TypecheckExecutor","l":"readDiagnostics(TestConfiguration, CompilationResult)","u":"readDiagnostics(org.checkerframework.framework.test.TestConfiguration,org.checkerframework.framework.test.CompilationResult)"},{"p":"org.checkerframework.javacutil","c":"SystemUtil","l":"readFile(File)","u":"readFile(java.io.File)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"readFromStore(Map<Block, S>, Block)","u":"readFromStore(java.util.Map,org.checkerframework.dataflow.cfg.block.Block)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"readFullyUnsigned(RandomAccessFile, byte[])","u":"readFullyUnsigned(java.io.RandomAccessFile,byte[])"},{"p":"org.checkerframework.framework.test.diagnostics","c":"JavaDiagnosticReader","l":"readJavaSourceFiles(Iterable<? extends Object>)","u":"readJavaSourceFiles(java.lang.Iterable)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"readUnsigned(RandomAccessFile, byte[], int, int)","u":"readUnsigned(java.io.RandomAccessFile,byte[],int,int)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"readUnsignedChar(RandomAccessFile)","u":"readUnsignedChar(java.io.RandomAccessFile)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"readUnsignedInt(RandomAccessFile)","u":"readUnsignedInt(java.io.RandomAccessFile)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"readUnsignedLong(RandomAccessFile)","u":"readUnsignedLong(java.io.RandomAccessFile)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FieldAccessNode","l":"receiver"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LocalVariableNode","l":"receiver"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodAccessNode","l":"receiver"},{"p":"org.checkerframework.dataflow.expression","c":"FieldAccess","l":"receiver"},{"p":"org.checkerframework.dataflow.expression","c":"MethodCall","l":"receiver"},{"p":"org.checkerframework.framework.qual","c":"TypeUseLocation","l":"RECEIVER"},{"p":"org.checkerframework.framework.util.element","c":"ParamApplier","l":"RECEIVER_PARAM_INDEX"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileParser.RecordComponentStub","l":"RecordComponentStub(AnnotatedTypeMirror, AnnotationMirrorSet)","u":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.javacutil.AnnotationMirrorSet)"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileParser.AnnotationFileAnnotations","l":"records"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileParser.RecordStub","l":"RecordStub(Map<String, AnnotationFileParser.RecordComponentStub>)","u":"%3Cinit%3E(java.util.Map)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"recreateTransferResult(V, TransferResult<V, S>)","u":"recreateTransferResult(V,org.checkerframework.dataflow.analysis.TransferResult)"},{"p":"org.checkerframework.framework.util","c":"ExecUtil.Redirection","l":"redirect(InputStream)","u":"redirect(java.io.InputStream)"},{"p":"org.checkerframework.framework.util","c":"ExecUtil.Redirection","l":"Redirection(OutputStream, int)","u":"%3Cinit%3E(java.io.OutputStream,int)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"A2FReducer","l":"reduce(AFConstraint, Set<AFConstraint>)","u":"reduce(org.checkerframework.framework.util.typeinference.constraint.AFConstraint,java.util.Set)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"AFReducer","l":"reduce(AFConstraint, Set<AFConstraint>)","u":"reduce(org.checkerframework.framework.util.typeinference.constraint.AFConstraint,java.util.Set)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"F2AReducer","l":"reduce(AFConstraint, Set<AFConstraint>)","u":"reduce(org.checkerframework.framework.util.typeinference.constraint.AFConstraint,java.util.Set)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"FIsAReducer","l":"reduce(AFConstraint, Set<AFConstraint>)","u":"reduce(org.checkerframework.framework.util.typeinference.constraint.AFConstraint,java.util.Set)"},{"p":"org.checkerframework.framework.type","c":"EqualityAtmComparer","l":"reduce(Boolean, Boolean)","u":"reduce(java.lang.Boolean,java.lang.Boolean)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"reduce(R, R)","u":"reduce(R,R)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner.Reduce","l":"reduce(R, R)","u":"reduce(R,R)"},{"p":"org.checkerframework.javacutil","c":"SwitchExpressionScanner.YieldVisitor","l":"reduce(R, R)","u":"reduce(R,R)"},{"p":"org.checkerframework.framework.type.visitor","c":"EquivalentAtmComboScanner","l":"reduce(RETURN_TYPE, RETURN_TYPE)","u":"reduce(RETURN_TYPE,RETURN_TYPE)"},{"p":"org.checkerframework.framework.util.typeinference","c":"DefaultTypeArgumentInference","l":"reduceAfConstraints(AnnotatedTypeFactory, Set<AFConstraint>, Queue<AFConstraint>, Set<TypeVariable>)","u":"reduceAfConstraints(org.checkerframework.framework.type.AnnotatedTypeFactory,java.util.Set,java.util.Queue,java.util.Set)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"reduceFunction"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"refineEqualTo(Range)","u":"refineEqualTo(org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"refineGreaterThan(Range)","u":"refineGreaterThan(org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"refineGreaterThanEq(Range)","u":"refineGreaterThanEq(org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.checker.index","c":"IndexAbstractTransfer","l":"refineGT(Node, AnnotationMirror, Node, AnnotationMirror, CFStore, TransferInput<CFValue, CFStore>)","u":"refineGT(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.flow.CFStore,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanTransfer","l":"refineGT(Node, AnnotationMirror, Node, AnnotationMirror, CFStore, TransferInput<CFValue, CFStore>)","u":"refineGT(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.flow.CFStore,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"refineGT(Node, AnnotationMirror, Node, AnnotationMirror, CFStore, TransferInput<CFValue, CFStore>)","u":"refineGT(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.flow.CFStore,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.searchindex","c":"SearchIndexTransfer","l":"refineGT(Node, AnnotationMirror, Node, AnnotationMirror, CFStore, TransferInput<CFValue, CFStore>)","u":"refineGT(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.flow.CFStore,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundTransfer","l":"refineGT(Node, AnnotationMirror, Node, AnnotationMirror, CFStore, TransferInput<CFValue, CFStore>)","u":"refineGT(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.flow.CFStore,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index","c":"IndexAbstractTransfer","l":"refineGTE(Node, AnnotationMirror, Node, AnnotationMirror, CFStore, TransferInput<CFValue, CFStore>)","u":"refineGTE(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.flow.CFStore,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanTransfer","l":"refineGTE(Node, AnnotationMirror, Node, AnnotationMirror, CFStore, TransferInput<CFValue, CFStore>)","u":"refineGTE(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.flow.CFStore,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"refineGTE(Node, AnnotationMirror, Node, AnnotationMirror, CFStore, TransferInput<CFValue, CFStore>)","u":"refineGTE(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.flow.CFStore,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.searchindex","c":"SearchIndexTransfer","l":"refineGTE(Node, AnnotationMirror, Node, AnnotationMirror, CFStore, TransferInput<CFValue, CFStore>)","u":"refineGTE(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.flow.CFStore,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundTransfer","l":"refineGTE(Node, AnnotationMirror, Node, AnnotationMirror, CFStore, TransferInput<CFValue, CFStore>)","u":"refineGTE(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.element.AnnotationMirror,org.checkerframework.framework.flow.CFStore,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"refineLessThan(Range)","u":"refineLessThan(org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"refineLessThanEq(Range)","u":"refineLessThanEq(org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"refineNotEqualTo(Range)","u":"refineNotEqualTo(org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessTransfer","l":"refineToNonNull(TransferResult<NullnessValue, NullnessStore>)","u":"refineToNonNull(org.checkerframework.dataflow.analysis.TransferResult)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"reflectionResolver"},{"p":"org.checkerframework.common.value","c":"ReflectiveEvaluator","l":"ReflectiveEvaluator(BaseTypeChecker, ValueAnnotatedTypeFactory, boolean)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,org.checkerframework.common.value.ValueAnnotatedTypeFactory,boolean)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"InstanceOfNode","l":"refType"},{"p":"org.checkerframework.checker.regex","c":"RegexAnnotatedTypeFactory","l":"REGEX"},{"p":"org.checkerframework.checker.regex","c":"RegexAnnotatedTypeFactory","l":"RegexAnnotatedTypeFactory(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.regex","c":"RegexAnnotatedTypeFactory","l":"REGEXBOTTOM"},{"p":"org.checkerframework.checker.regex","c":"RegexChecker","l":"RegexChecker()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.regex.util","c":"RegexUtil","l":"regexError(String)","u":"regexError(java.lang.String)"},{"p":"org.checkerframework.checker.regex.util","c":"RegexUtil","l":"regexError(String, int)","u":"regexError(java.lang.String,int)"},{"p":"org.checkerframework.checker.regex.util","c":"RegexUtil","l":"regexException(String)","u":"regexException(java.lang.String)"},{"p":"org.checkerframework.checker.regex.util","c":"RegexUtil","l":"regexException(String, int)","u":"regexException(java.lang.String,int)"},{"p":"org.checkerframework.checker.regex","c":"RegexTransfer","l":"RegexTransfer(CFAbstractAnalysis<CFValue, CFStore, CFTransfer>)","u":"%3Cinit%3E(org.checkerframework.framework.flow.CFAbstractAnalysis)"},{"p":"org.checkerframework.checker.regex","c":"RegexAnnotatedTypeFactory","l":"regexValueElement"},{"p":"org.checkerframework.checker.regex","c":"RegexVisitor","l":"RegexVisitor(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"Block.BlockType","l":"REGULAR_BLOCK"},{"p":"org.checkerframework.dataflow.cfg.block","c":"RegularBlockImpl","l":"RegularBlockImpl()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"regularExitBlock"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"regularExitStores"},{"p":"org.checkerframework.dataflow.analysis","c":"RegularTransferResult","l":"RegularTransferResult(V, S)","u":"%3Cinit%3E(V,S)"},{"p":"org.checkerframework.dataflow.analysis","c":"RegularTransferResult","l":"RegularTransferResult(V, S, boolean)","u":"%3Cinit%3E(V,S,boolean)"},{"p":"org.checkerframework.dataflow.analysis","c":"RegularTransferResult","l":"RegularTransferResult(V, S, Map<TypeMirror, S>)","u":"%3Cinit%3E(V,S,java.util.Map)"},{"p":"org.checkerframework.dataflow.analysis","c":"RegularTransferResult","l":"RegularTransferResult(V, S, Map<TypeMirror, S>, boolean)","u":"%3Cinit%3E(V,S,java.util.Map,boolean)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"TUConstraint","l":"relatedType"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"relevantJavaTypes"},{"p":"org.checkerframework.common.value.util","c":"ByteMath","l":"remainder(Number)","u":"remainder(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"DoubleMath","l":"remainder(Number)","u":"remainder(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"FloatMath","l":"remainder(Number)","u":"remainder(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"IntegerMath","l":"remainder(Number)","u":"remainder(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"LongMath","l":"remainder(Number)","u":"remainder(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"NumberMath","l":"remainder(Number)","u":"remainder(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"ShortMath","l":"remainder(Number)","u":"remainder(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"remainder(Range)","u":"remainder(org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"JavaDiagnosticReader","l":"remove()"},{"p":"org.checkerframework.framework.type","c":"SubtypeVisitHistory","l":"remove(AnnotatedTypeMirror, AnnotatedTypeMirror, AnnotationMirror)","u":"remove(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"remove(Object)","u":"remove(java.lang.Object)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorMap","l":"remove(Object)","u":"remove(java.lang.Object)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"removeAll(Collection<?>)","u":"removeAll(java.util.Collection)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedIntersectionType","l":"removeAnnotation(AnnotationMirror)","u":"removeAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedTypeVariable","l":"removeAnnotation(AnnotationMirror)","u":"removeAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedWildcardType","l":"removeAnnotation(AnnotationMirror)","u":"removeAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"removeAnnotation(AnnotationMirror)","u":"removeAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"removeAnnotationByClass(Class<? extends Annotation>)","u":"removeAnnotationByClass(java.lang.Class)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"removeAnnotationInHierarchy(AnnotationMirror)","u":"removeAnnotationInHierarchy(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"removeAnnotations(Iterable<? extends AnnotationMirror>)","u":"removeAnnotations(java.lang.Iterable)"},{"p":"org.checkerframework.dataflow.util","c":"NodeUtils","l":"removeCasts(Node)","u":"removeCasts(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"removeConflicting(ArrayAccess, V)","u":"removeConflicting(org.checkerframework.dataflow.expression.ArrayAccess,V)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"removeConflicting(FieldAccess, V)","u":"removeConflicting(org.checkerframework.dataflow.expression.FieldAccess,V)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"removeConflicting(LocalVariable)","u":"removeConflicting(org.checkerframework.dataflow.expression.LocalVariable)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"removeDiagnosticsOfKind(DiagnosticKind, List<TestDiagnostic>)","u":"removeDiagnosticsOfKind(org.checkerframework.framework.test.diagnostics.DiagnosticKind,java.util.List)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"removeElement(CharSequence)","u":"removeElement(java.lang.CharSequence)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"removeNonTopAnnotationInHierarchy(AnnotationMirror)","u":"removeNonTopAnnotationInHierarchy(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"removeOffset(String, int)","u":"removeOffset(java.lang.String,int)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"BlockImpl","l":"removePredecessor(BlockImpl)","u":"removePredecessor(org.checkerframework.dataflow.cfg.block.BlockImpl)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsTools","l":"removePrefix(Elements, AnnotatedTypeMirror)","u":"removePrefix(javax.lang.model.util.Elements,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsTools","l":"removePrefix(Elements, AnnotationMirror)","u":"removePrefix(javax.lang.model.util.Elements,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"removeSequenceLengthAccess(List<String>)","u":"removeSequenceLengthAccess(java.util.List)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"removeSequenceLengthAccessAndNeg1(List<String>)","u":"removeSequenceLengthAccessAndNeg1(java.util.List)"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"removeSequenceLengths(List<String>)","u":"removeSequenceLengths(java.util.List)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeReplacer","l":"replace(AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"replace(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeReplacer","l":"replace(AnnotatedTypeMirror, AnnotatedTypeMirror, AnnotationMirror)","u":"replace(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type.poly","c":"AbstractQualifierPolymorphism","l":"replace(AnnotatedTypeMirror, AnnotationMirrorMap<AnnotationMirror>)","u":"replace(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.javacutil.AnnotationMirrorMap)"},{"p":"org.checkerframework.framework.type.poly","c":"DefaultQualifierPolymorphism","l":"replace(AnnotatedTypeMirror, AnnotationMirrorMap<AnnotationMirror>)","u":"replace(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.javacutil.AnnotationMirrorMap)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeCopierWithReplacement","l":"replace(AnnotatedTypeMirror, IdentityHashMap<? extends AnnotatedTypeMirror, ? extends AnnotatedTypeMirror>)","u":"replace(org.checkerframework.framework.type.AnnotatedTypeMirror,java.util.IdentityHashMap)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"replaceAnnotation(AnnotationMirror)","u":"replaceAnnotation(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"replaceAnnotations(AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"replaceAnnotations(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeReplacer","l":"replaceAnnotations(AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"replaceAnnotations(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"replaceAnnotations(AnnotatedTypeMirror, AnnotatedTypeMirror, AnnotationMirror)","u":"replaceAnnotations(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"replaceAnnotations(Iterable<? extends AnnotationMirror>)","u":"replaceAnnotations(java.lang.Iterable)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"replacePolyQualifier(AnnotatedTypeMirror, Tree)","u":"replacePolyQualifier(org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.type","c":"SyntheticArrays","l":"replaceReturnType(Element, AnnotatedTypeMirror.AnnotatedArrayType)","u":"replaceReturnType(javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType)"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"replaceShorthandProcessor(List<String>)","u":"replaceShorthandProcessor(java.util.List)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"replaceValue(JavaExpression, V)","u":"replaceValue(org.checkerframework.dataflow.expression.JavaExpression,V)"},{"p":"org.checkerframework.common.value","c":"ValueChecker","l":"REPORT_EVAL_WARNS"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"report(Object, DiagMessage)","u":"report(java.lang.Object,org.checkerframework.framework.source.DiagMessage)"},{"p":"org.checkerframework.common.util.report","c":"ReportChecker","l":"ReportChecker()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakChecker","l":"reportError(Object, String, Object...)","u":"reportError(java.lang.Object,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"reportError(Object, String, Object...)","u":"reportError(java.lang.Object,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"reportErrors(Tree, List<DependentTypesError>)","u":"reportErrors(com.sun.source.tree.Tree,java.util.List)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"reportInvalidAnnotationsOnUse(AnnotatedTypeMirror, Tree)","u":"reportInvalidAnnotationsOnUse(org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"reportInvalidBounds(AnnotatedTypeMirror, Tree)","u":"reportInvalidBounds(org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"reportInvalidType(AnnotatedTypeMirror, Tree)","u":"reportInvalidType(org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"reportJavacError(TreePath)","u":"reportJavacError(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"reportJavacError(TreePath)","u":"reportJavacError(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsVisitor","l":"reportMethodInvocabilityError(MethodInvocationTree, AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"reportMethodInvocabilityError(com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"reportMethodInvocabilityError(MethodInvocationTree, AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"reportMethodInvocabilityError(com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"reportPurityErrors(PurityChecker.PurityResult, MethodTree, EnumSet<Pure.Kind>)","u":"reportPurityErrors(org.checkerframework.dataflow.util.PurityChecker.PurityResult,com.sun.source.tree.MethodTree,java.util.EnumSet)"},{"p":"org.checkerframework.common.util.report","c":"ReportVisitor.ReportTypeValidator","l":"ReportTypeValidator(BaseTypeChecker, BaseTypeVisitor<?>, AnnotatedTypeFactory)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,org.checkerframework.common.basetype.BaseTypeVisitor,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"reportValidityResult(String, AnnotatedTypeMirror, Tree)","u":"reportValidityResult(java.lang.String,org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"reportValidityResultOnUnannotatedType(String, AnnotatedTypeMirror, Tree)","u":"reportValidityResultOnUnannotatedType(java.lang.String,org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.common.util.report","c":"ReportVisitor","l":"ReportVisitor(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"reportWarning(Object, String, Object...)","u":"reportWarning(java.lang.Object,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnostic","l":"repr()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"requiresQualifierExpressionElement"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"requiresQualifierListTM"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"requiresQualifierListValueElement"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"requiresQualifierTM"},{"p":"org.checkerframework.framework.type.poly","c":"AbstractQualifierPolymorphism","l":"reset()"},{"p":"org.checkerframework.framework.type.typeannotator","c":"PropagationTypeAnnotator","l":"reset()"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"reset()"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults.DefaultApplierElement.DefaultApplierElementImpl","l":"reset()"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter.FormattingVisitor","l":"resetPrintVerboseSettings()"},{"p":"org.checkerframework.framework.type.poly","c":"AbstractQualifierPolymorphism","l":"resolve(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedExecutableType)","u":"resolve(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.framework.type.poly","c":"QualifierPolymorphism","l":"resolve(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedExecutableType)","u":"resolve(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.framework.type.poly","c":"AbstractQualifierPolymorphism","l":"resolve(MethodInvocationTree, AnnotatedTypeMirror.AnnotatedExecutableType)","u":"resolve(com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.framework.type.poly","c":"QualifierPolymorphism","l":"resolve(MethodInvocationTree, AnnotatedTypeMirror.AnnotatedExecutableType)","u":"resolve(com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.framework.type.poly","c":"AbstractQualifierPolymorphism","l":"resolve(NewClassTree, AnnotatedTypeMirror.AnnotatedExecutableType)","u":"resolve(com.sun.source.tree.NewClassTree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.framework.type.poly","c":"QualifierPolymorphism","l":"resolve(NewClassTree, AnnotatedTypeMirror.AnnotatedExecutableType)","u":"resolve(com.sun.source.tree.NewClassTree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.framework.type.poly","c":"AbstractQualifierPolymorphism","l":"resolve(VariableElement, AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"resolve(javax.lang.model.element.VariableElement,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.poly","c":"QualifierPolymorphism","l":"resolve(VariableElement, AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"resolve(javax.lang.model.element.VariableElement,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"InferenceResult","l":"resolveChainedTargets()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeReplacer","l":"resolvePrimaries(AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"resolvePrimaries(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.javacutil","c":"Resolver","l":"Resolver(ProcessingEnvironment)","u":"%3Cinit%3E(javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.common.reflection","c":"DefaultReflectionResolver","l":"resolveReflectiveCall(AnnotatedTypeFactory, MethodInvocationTree, AnnotatedTypeFactory.ParameterizedExecutableType)","u":"resolveReflectiveCall(org.checkerframework.framework.type.AnnotatedTypeFactory,com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeFactory.ParameterizedExecutableType)"},{"p":"org.checkerframework.common.reflection","c":"ReflectionResolver","l":"resolveReflectiveCall(AnnotatedTypeFactory, MethodInvocationTree, AnnotatedTypeFactory.ParameterizedExecutableType)","u":"resolveReflectiveCall(org.checkerframework.framework.type.AnnotatedTypeFactory,com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeFactory.ParameterizedExecutableType)"},{"p":"org.checkerframework.framework.qual","c":"TypeUseLocation","l":"RESOURCE_VARIABLE"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakAnalysis","l":"ResourceLeakAnalysis(BaseTypeChecker, CalledMethodsAnnotatedTypeFactory)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,org.checkerframework.checker.calledmethods.CalledMethodsAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakAnnotatedTypeFactory","l":"ResourceLeakAnnotatedTypeFactory(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakChecker","l":"ResourceLeakChecker()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakTransfer","l":"ResourceLeakTransfer(ResourceLeakAnalysis)","u":"%3Cinit%3E(org.checkerframework.checker.resourceleak.ResourceLeakAnalysis)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakVisitor","l":"ResourceLeakVisitor(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LambdaResultExpressionNode","l":"result"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ReturnNode","l":"result"},{"p":"org.checkerframework.checker.calledmethods.qual","c":"EnsuresCalledMethodsIf","l":"result()"},{"p":"org.checkerframework.checker.index.qual","c":"EnsuresLTLengthOfIf","l":"result()"},{"p":"org.checkerframework.checker.lock.qual","c":"EnsuresLockHeldIf","l":"result()"},{"p":"org.checkerframework.checker.nullness.qual","c":"EnsuresKeyForIf","l":"result()"},{"p":"org.checkerframework.checker.nullness.qual","c":"EnsuresNonNullIf","l":"result()"},{"p":"org.checkerframework.common.value.qual","c":"EnsuresMinLenIf","l":"result()"},{"p":"org.checkerframework.framework.qual","c":"EnsuresQualifierIf","l":"result()"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil.Result","l":"Result(E, ExpressionTree)","u":"%3Cinit%3E(E,com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferResult","l":"resultValue"},{"p":"org.checkerframework.framework.util","c":"Contract.ConditionalPostcondition","l":"resultValue"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"retainAll(Collection<?>)","u":"retainAll(java.util.Collection)"},{"p":"org.checkerframework.framework.qual","c":"TypeUseLocation","l":"RETURN"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ReturnNode","l":"ReturnNode(ReturnTree, Node, Types)","u":"%3Cinit%3E(com.sun.source.tree.ReturnTree,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.util.Types)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ReturnNode","l":"ReturnNode(ReturnTree, Node, Types, LambdaExpressionTree, Symbol.MethodSymbol)","u":"%3Cinit%3E(com.sun.source.tree.ReturnTree,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.util.Types,com.sun.source.tree.LambdaExpressionTree,com.sun.tools.javac.code.Symbol.MethodSymbol)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ReturnNode","l":"ReturnNode(ReturnTree, Node, Types, MethodTree)","u":"%3Cinit%3E(com.sun.source.tree.ReturnTree,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.util.Types,com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"returnNodes"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationChecker.AliasAnalysis","l":"RETURNS_RECEIVER"},{"p":"org.checkerframework.common.returnsreceiver","c":"ReturnsReceiverAnnotatedTypeFactory","l":"ReturnsReceiverAnnotatedTypeFactory(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.common.returnsreceiver","c":"ReturnsReceiverChecker","l":"ReturnsReceiverChecker()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.common.returnsreceiver","c":"ReturnsReceiverVisitor","l":"ReturnsReceiverVisitor(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"returnStatementStores"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsAnnotatedTypeFactory","l":"returnsThis(MethodInvocationTree)","u":"returnsThis(com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory","l":"returnsThis(MethodInvocationTree)","u":"returnsThis(com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ReturnNode","l":"returnTree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssignmentNode","l":"rhs"},{"p":"org.checkerframework.checker.index","c":"IndexRefinementInfo","l":"right"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BinaryOperationNode","l":"right"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringConcatenateAssignmentNode","l":"right"},{"p":"org.checkerframework.dataflow.expression","c":"BinaryOperation","l":"right"},{"p":"org.checkerframework.checker.index","c":"IndexRefinementInfo","l":"rightAnno"},{"p":"org.checkerframework.framework.source","c":"SourceVisitor","l":"root"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"root"},{"p":"org.checkerframework.framework.test","c":"AinferValidatePerDirectoryTest","l":"run()"},{"p":"org.checkerframework.framework.test","c":"CheckerFrameworkPerDirectoryTest","l":"run()"},{"p":"org.checkerframework.framework.test","c":"CheckerFrameworkPerFileTest","l":"run()"},{"p":"org.checkerframework.common.util.debug","c":"TypeOutputtingChecker","l":"run(String[])","u":"run(java.lang.String[])"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"runAnalysisFor(Node, Analysis.BeforeOrAfter)","u":"runAnalysisFor(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.Analysis.BeforeOrAfter)"},{"p":"org.checkerframework.dataflow.analysis","c":"Analysis","l":"runAnalysisFor(Node, Analysis.BeforeOrAfter, TransferInput<V, S>, IdentityHashMap<Node, V>, Map<TransferInput<V, S>, IdentityHashMap<Node, TransferResult<V, S>>>)","u":"runAnalysisFor(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.Analysis.BeforeOrAfter,org.checkerframework.dataflow.analysis.TransferInput,java.util.IdentityHashMap,java.util.Map)"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"runAnalysisFor(Node, Analysis.BeforeOrAfter, TransferInput<V, S>, IdentityHashMap<Node, V>, Map<TransferInput<V, S>, IdentityHashMap<Node, TransferResult<V, S>>>)","u":"runAnalysisFor(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.Analysis.BeforeOrAfter,org.checkerframework.dataflow.analysis.TransferInput,java.util.IdentityHashMap,java.util.Map)"},{"p":"org.checkerframework.dataflow.analysis","c":"BackwardAnalysisImpl","l":"runAnalysisFor(Node, Analysis.BeforeOrAfter, TransferInput<V, S>, IdentityHashMap<Node, V>, Map<TransferInput<V, S>, IdentityHashMap<Node, TransferResult<V, S>>>)","u":"runAnalysisFor(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.Analysis.BeforeOrAfter,org.checkerframework.dataflow.analysis.TransferInput,java.util.IdentityHashMap,java.util.Map)"},{"p":"org.checkerframework.dataflow.analysis","c":"ForwardAnalysisImpl","l":"runAnalysisFor(Node, Analysis.BeforeOrAfter, TransferInput<V, S>, IdentityHashMap<Node, V>, Map<TransferInput<V, S>, IdentityHashMap<Node, TransferResult<V, S>>>)","u":"runAnalysisFor(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.Analysis.BeforeOrAfter,org.checkerframework.dataflow.analysis.TransferInput,java.util.IdentityHashMap,java.util.Map)"},{"p":"org.checkerframework.framework.test","c":"TypecheckExecutor","l":"runTest(TestConfiguration)","u":"runTest(org.checkerframework.framework.test.TestConfiguration)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"s"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"s"},{"p":"org.checkerframework.javacutil","c":"TypeKindUtils.PrimitiveConversionKind","l":"SAME"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"sameAnnotatedTypeFactory(AnnotatedTypeFactory)","u":"sameAnnotatedTypeFactory(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"sameAnnotationValue(AnnotationValue, AnnotationValue)","u":"sameAnnotationValue(javax.lang.model.element.AnnotationValue,javax.lang.model.element.AnnotationValue)"},{"p":"org.checkerframework.dataflow.expression","c":"LocalVariable","l":"sameElement(VariableElement, VariableElement)","u":"sameElement(javax.lang.model.element.VariableElement,javax.lang.model.element.VariableElement)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"sameElementValues(AnnotationMirror, AnnotationMirror)","u":"sameElementValues(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenAnnotatedTypeFactory","l":"SameLenAnnotatedTypeFactory(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"sameLenAnnotationFromTree(Tree)","u":"sameLenAnnotationFromTree(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenChecker","l":"SameLenChecker()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenTransfer","l":"SameLenTransfer(CFAnalysis)","u":"%3Cinit%3E(org.checkerframework.framework.flow.CFAnalysis)"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenAnnotatedTypeFactory.SameLenTreeAnnotator","l":"SameLenTreeAnnotator(SameLenAnnotatedTypeFactory)","u":"%3Cinit%3E(org.checkerframework.checker.index.samelen.SameLenAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"sameLenValueElement"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenVisitor","l":"SameLenVisitor(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"sameTree(ExpressionTree, ExpressionTree)","u":"sameTree(com.sun.source.tree.ExpressionTree,com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.framework.type.visitor","c":"DoubleAnnotatedTypeScanner","l":"scan(AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"scan(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.visitor","c":"EquivalentAtmComboScanner","l":"scan(AnnotatedTypeMirror, AnnotatedTypeMirror, PARAM)","u":"scan(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,PARAM)"},{"p":"org.checkerframework.framework.type","c":"EqualityAtmComparer","l":"scan(AnnotatedTypeMirror, AnnotatedTypeMirror, Void)","u":"scan(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,java.lang.Void)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults.DefaultApplierElement.DefaultApplierElementImpl","l":"scan(AnnotatedTypeMirror, AnnotationMirror)","u":"scan(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"scan(AnnotatedTypeMirror, P)","u":"scan(org.checkerframework.framework.type.AnnotatedTypeMirror,P)"},{"p":"org.checkerframework.framework.type.typeannotator","c":"DefaultForTypeAnnotator","l":"scan(AnnotatedTypeMirror, Void)","u":"scan(org.checkerframework.framework.type.AnnotatedTypeMirror,java.lang.Void)"},{"p":"org.checkerframework.framework.type.typeannotator","c":"IrrelevantTypeAnnotator","l":"scan(AnnotatedTypeMirror, Void)","u":"scan(org.checkerframework.framework.type.AnnotatedTypeMirror,java.lang.Void)"},{"p":"org.checkerframework.framework.type.typeannotator","c":"ListTypeAnnotator","l":"scan(AnnotatedTypeMirror, Void)","u":"scan(org.checkerframework.framework.type.AnnotatedTypeMirror,java.lang.Void)"},{"p":"org.checkerframework.framework.type.typeannotator","c":"PropagationTypeAnnotator","l":"scan(AnnotatedTypeMirror, Void)","u":"scan(org.checkerframework.framework.type.AnnotatedTypeMirror,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"DoubleAnnotatedTypeScanner","l":"scan(Iterable<? extends AnnotatedTypeMirror>, Iterable<? extends AnnotatedTypeMirror>)","u":"scan(java.lang.Iterable,java.lang.Iterable)"},{"p":"org.checkerframework.framework.type.visitor","c":"EquivalentAtmComboScanner","l":"scan(Iterable<? extends AnnotatedTypeMirror>, Iterable<? extends AnnotatedTypeMirror>, PARAM)","u":"scan(java.lang.Iterable,java.lang.Iterable,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"scan(Iterable<? extends AnnotatedTypeMirror>, P)","u":"scan(java.lang.Iterable,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionScanner","l":"scan(JavaExpression, P)","u":"scan(org.checkerframework.dataflow.expression.JavaExpression,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionScanner","l":"scan(List<? extends JavaExpression>, P)","u":"scan(java.util.List,P)"},{"p":"org.checkerframework.framework.source","c":"SourceVisitor","l":"scan(Tree, P)","u":"scan(com.sun.source.tree.Tree,P)"},{"p":"org.checkerframework.javacutil","c":"SwitchExpressionScanner.YieldVisitor","l":"scan(Tree, P)","u":"scan(com.sun.source.tree.Tree,P)"},{"p":"org.checkerframework.framework.util","c":"TreePathCacher","l":"scan(Tree, Tree)","u":"scan(com.sun.source.tree.Tree,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"scan(Tree, Void)","u":"scan(com.sun.source.tree.Tree,java.lang.Void)"},{"p":"org.checkerframework.common.util.debug","c":"TreeDebug.Visitor","l":"scan(Tree, Void)","u":"scan(com.sun.source.tree.Tree,java.lang.Void)"},{"p":"org.checkerframework.common.util.report","c":"ReportVisitor","l":"scan(Tree, Void)","u":"scan(com.sun.source.tree.Tree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"scan(Tree, Void)","u":"scan(com.sun.source.tree.Tree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"scan(Tree, Void)","u":"scan(com.sun.source.tree.Tree,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"EquivalentAtmComboScanner","l":"scanAndReduce(AnnotatedTypeMirror, AnnotatedTypeMirror, PARAM, RETURN_TYPE)","u":"scanAndReduce(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,PARAM,RETURN_TYPE)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"scanAndReduce(AnnotatedTypeMirror, P, R)","u":"scanAndReduce(org.checkerframework.framework.type.AnnotatedTypeMirror,P,R)"},{"p":"org.checkerframework.framework.type.visitor","c":"DoubleAnnotatedTypeScanner","l":"scanAndReduce(Iterable<? extends AnnotatedTypeMirror>, AnnotatedTypeMirror, R)","u":"scanAndReduce(java.lang.Iterable,org.checkerframework.framework.type.AnnotatedTypeMirror,R)"},{"p":"org.checkerframework.framework.type.visitor","c":"EquivalentAtmComboScanner","l":"scanAndReduce(Iterable<? extends AnnotatedTypeMirror>, Iterable<? extends AnnotatedTypeMirror>, PARAM, RETURN_TYPE)","u":"scanAndReduce(java.lang.Iterable,java.lang.Iterable,PARAM,RETURN_TYPE)"},{"p":"org.checkerframework.framework.type.visitor","c":"DoubleAnnotatedTypeScanner","l":"scanAndReduce(Iterable<? extends AnnotatedTypeMirror>, Iterable<? extends AnnotatedTypeMirror>, R)","u":"scanAndReduce(java.lang.Iterable,java.lang.Iterable,R)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"scanAndReduce(Iterable<? extends AnnotatedTypeMirror>, P, R)","u":"scanAndReduce(java.lang.Iterable,P,R)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"scannedClasses"},{"p":"org.checkerframework.javacutil","c":"SwitchExpressionScanner","l":"scanSwitchExpression(Tree, P)","u":"scanSwitchExpression(com.sun.source.tree.Tree,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"EquivalentAtmComboScanner","l":"scanWithNull(AnnotatedTypeMirror, AnnotatedTypeMirror, PARAM)","u":"scanWithNull(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,PARAM)"},{"p":"org.checkerframework.framework.type","c":"EqualityAtmComparer","l":"scanWithNull(AnnotatedTypeMirror, AnnotatedTypeMirror, Void)","u":"scanWithNull(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,java.lang.Void)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults.DefaultApplierElement","l":"scope"},{"p":"org.checkerframework.checker.index.searchindex","c":"SearchIndexAnnotatedTypeFactory","l":"SearchIndexAnnotatedTypeFactory(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.index.searchindex","c":"SearchIndexChecker","l":"SearchIndexChecker()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.index.searchindex","c":"SearchIndexAnnotatedTypeFactory","l":"searchIndexForValueElement"},{"p":"org.checkerframework.checker.index.searchindex","c":"SearchIndexTransfer","l":"SearchIndexTransfer(CFAnalysis)","u":"%3Cinit%3E(org.checkerframework.framework.flow.CFAnalysis)"},{"p":"org.checkerframework.javacutil","c":"Pair","l":"second"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"Select(TreeMaker, Tree, Name)","u":"Select(com.sun.tools.javac.tree.TreeMaker,com.sun.source.tree.Tree,com.sun.tools.javac.util.Name)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"Select(TreeMaker, Tree, Symbol)","u":"Select(com.sun.tools.javac.tree.TreeMaker,com.sun.source.tree.Tree,com.sun.tools.javac.code.Symbol)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"CaseNode","l":"selectorExprAssignment"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"SELF_RECEIVER_PATTERN"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"sequentialSemantics"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"sequentialSemantics"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayAccessNode","l":"setArrayExpression(ExpressionTree)","u":"setArrayExpression(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"Node","l":"setBlock(Block)","u":"setBlock(org.checkerframework.dataflow.cfg.block.Block)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ExtendedNode","l":"setBlock(BlockImpl)","u":"setBlock(org.checkerframework.dataflow.cfg.block.BlockImpl)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedIntersectionType","l":"setBounds(List<AnnotatedTypeMirror>)","u":"setBounds(java.util.List)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedArrayType","l":"setComponentType(AnnotatedTypeMirror)","u":"setComponentType(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"setCurrentNode(Node)","u":"setCurrentNode(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"setCurrentTree(Tree)","u":"setCurrentTree(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedTypeVariable","l":"setDeclaration(boolean)"},{"p":"org.checkerframework.javacutil.trees","c":"DetachedVarSymbol","l":"setDeclaration(VariableTree)","u":"setDeclaration(com.sun.source.tree.VariableTree)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"setDiagnosticFiles(List<File>)","u":"setDiagnosticFiles(java.util.List)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedExecutableType","l":"setElement(ExecutableElement)","u":"setElement(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ConditionalBlock","l":"setElseFlowRule(Store.FlowRule)","u":"setElseFlowRule(org.checkerframework.dataflow.analysis.Store.FlowRule)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ConditionalBlockImpl","l":"setElseFlowRule(Store.FlowRule)","u":"setElseFlowRule(org.checkerframework.dataflow.analysis.Store.FlowRule)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ConditionalBlockImpl","l":"setElseSuccessor(BlockImpl)","u":"setElseSuccessor(org.checkerframework.dataflow.cfg.block.BlockImpl)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedDeclaredType","l":"setEnclosingType(AnnotatedTypeMirror.AnnotatedDeclaredType)","u":"setEnclosingType(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ConditionalJump","l":"setFalseFlowRule(Store.FlowRule)","u":"setFalseFlowRule(org.checkerframework.dataflow.analysis.Store.FlowRule)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"setFixedInitialStore(S)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"SingleSuccessorBlock","l":"setFlowRule(Store.FlowRule)","u":"setFlowRule(org.checkerframework.dataflow.analysis.Store.FlowRule)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"SingleSuccessorBlockImpl","l":"setFlowRule(Store.FlowRule)","u":"setFlowRule(org.checkerframework.dataflow.analysis.Store.FlowRule)"},{"p":"org.checkerframework.checker.lock","c":"LockStore","l":"setInConstructorOrInitializer()"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"ConstantPropagationStore","l":"setInformation(Node, Constant)","u":"setInformation(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.constantpropagation.Constant)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"Node","l":"setInSource(boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedDeclaredType","l":"setIsUnderlyingTypeRaw()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodInvocationNode","l":"setIterableExpression(ExpressionTree)","u":"setIterableExpression(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"setLintOption(String, boolean)","u":"setLintOption(java.lang.String,boolean)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"Node","l":"setLValue()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ExceptionBlockImpl","l":"setNode(Node)","u":"setNode(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.framework.test","c":"SimpleOptionMap","l":"setOptions(Map<String, String>)","u":"setOptions(java.util.Map)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"setOptions(Map<String, String>)","u":"setOptions(java.util.Map)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"setParentChecker(SourceChecker)","u":"setParentChecker(org.checkerframework.framework.source.SourceChecker)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"setPathForArtificialTree(Tree, TreePath)","u":"setPathForArtificialTree(com.sun.source.tree.Tree,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessStore","l":"setPolyNullNonNull(boolean)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessStore","l":"setPolyNullNull(boolean)"},{"p":"org.checkerframework.framework.source","c":"AggregateChecker","l":"setProcessingEnvironment(ProcessingEnvironment)","u":"setProcessingEnvironment(javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"setProcessingEnvironment(ProcessingEnvironment)","u":"setProcessingEnvironment(javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"setProcessors(Iterable<String>)","u":"setProcessors(java.lang.Iterable)"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferResult","l":"setResultValue(V)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"setRoot(CompilationUnitTree)","u":"setRoot(com.sun.source.tree.CompilationUnitTree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"setRoot(CompilationUnitTree)","u":"setRoot(com.sun.source.tree.CompilationUnitTree)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"setRoot(CompilationUnitTree)","u":"setRoot(com.sun.source.tree.CompilationUnitTree)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationVisitor","l":"setRoot(CompilationUnitTree)","u":"setRoot(com.sun.source.tree.CompilationUnitTree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"setRoot(CompilationUnitTree)","u":"setRoot(com.sun.source.tree.CompilationUnitTree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"setRoot(CompilationUnitTree)","u":"setRoot(com.sun.source.tree.CompilationUnitTree)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"setRoot(CompilationUnitTree)","u":"setRoot(com.sun.source.tree.CompilationUnitTree)"},{"p":"org.checkerframework.framework.source","c":"SourceVisitor","l":"setRoot(CompilationUnitTree)","u":"setRoot(com.sun.source.tree.CompilationUnitTree)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"setSelfTypeInInitializationCode(Tree, AnnotatedTypeMirror.AnnotatedDeclaredType, TreePath)","u":"setSelfTypeInInitializationCode(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"setShouldEmitDebugInfo(boolean)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"setSourceFiles(List<File>)","u":"setSourceFiles(java.util.List)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"SingleSuccessorBlockImpl","l":"setSuccessor(BlockImpl)","u":"setSuccessor(org.checkerframework.dataflow.cfg.block.BlockImpl)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseThree.PredecessorHolder","l":"setSuccessor(BlockImpl)","u":"setSuccessor(org.checkerframework.dataflow.cfg.block.BlockImpl)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"setSupportedLintOptions(Set<String>)","u":"setSupportedLintOptions(java.util.Set)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ExtendedNode","l":"setTerminatesExecution(boolean)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ConditionalBlock","l":"setThenFlowRule(Store.FlowRule)","u":"setThenFlowRule(org.checkerframework.dataflow.analysis.Store.FlowRule)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ConditionalBlockImpl","l":"setThenFlowRule(Store.FlowRule)","u":"setThenFlowRule(org.checkerframework.dataflow.analysis.Store.FlowRule)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ConditionalBlockImpl","l":"setThenSuccessor(BlockImpl)","u":"setThenSuccessor(org.checkerframework.dataflow.cfg.block.BlockImpl)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeReplacer","l":"setTop(AnnotationMirror)","u":"setTop(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ConditionalJump","l":"setTrueFlowRule(Store.FlowRule)","u":"setTrueFlowRule(org.checkerframework.dataflow.analysis.Store.FlowRule)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedDeclaredType","l":"setTypeArguments(List<? extends AnnotatedTypeMirror>)","u":"setTypeArguments(java.util.List)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedWildcardType","l":"setUninferredTypeArgument()"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtilExtra","l":"setUnsignedRGB(BufferedImage, int, int, int, int, int[], int, int)","u":"setUnsignedRGB(java.awt.image.BufferedImage,int,int,int,int,int[],int,int)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"setValue(CharSequence, AnnotationMirror)","u":"setValue(java.lang.CharSequence,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"setValue(CharSequence, Boolean)","u":"setValue(java.lang.CharSequence,java.lang.Boolean)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"setValue(CharSequence, Character)","u":"setValue(java.lang.CharSequence,java.lang.Character)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"setValue(CharSequence, Class<?>)","u":"setValue(java.lang.CharSequence,java.lang.Class)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"setValue(CharSequence, Double)","u":"setValue(java.lang.CharSequence,java.lang.Double)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"setValue(CharSequence, Enum<?>)","u":"setValue(java.lang.CharSequence,java.lang.Enum)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"setValue(CharSequence, Enum<?>[])","u":"setValue(java.lang.CharSequence,java.lang.Enum[])"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"setValue(CharSequence, Float)","u":"setValue(java.lang.CharSequence,java.lang.Float)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"setValue(CharSequence, Integer)","u":"setValue(java.lang.CharSequence,java.lang.Integer)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"setValue(CharSequence, List<? extends Object>)","u":"setValue(java.lang.CharSequence,java.util.List)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"setValue(CharSequence, Long)","u":"setValue(java.lang.CharSequence,java.lang.Long)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"setValue(CharSequence, Object[])","u":"setValue(java.lang.CharSequence,java.lang.Object[])"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"setValue(CharSequence, Short)","u":"setValue(java.lang.CharSequence,java.lang.Short)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"setValue(CharSequence, String)","u":"setValue(java.lang.CharSequence,java.lang.String)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"setValue(CharSequence, TypeMirror)","u":"setValue(java.lang.CharSequence,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"setValue(CharSequence, VariableElement)","u":"setValue(java.lang.CharSequence,javax.lang.model.element.VariableElement)"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"setValue(CharSequence, VariableElement[])","u":"setValue(java.lang.CharSequence,javax.lang.model.element.VariableElement[])"},{"p":"org.checkerframework.javacutil","c":"AnnotationBuilder","l":"setValue(ExecutableElement, List<? extends Object>)","u":"setValue(javax.lang.model.element.ExecutableElement,java.util.List)"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter.FormattingVisitor","l":"setVerboseSettings(boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"setVisitorTreePath(TreePath)","u":"setVisitorTreePath(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedDeclaredType","l":"setWasRaw()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedArrayType","l":"shallowCopy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedDeclaredType","l":"shallowCopy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedExecutableType","l":"shallowCopy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedIntersectionType","l":"shallowCopy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedNoType","l":"shallowCopy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedNullType","l":"shallowCopy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedPrimitiveType","l":"shallowCopy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedTypeVariable","l":"shallowCopy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedUnionType","l":"shallowCopy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedWildcardType","l":"shallowCopy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"shallowCopy()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedArrayType","l":"shallowCopy(boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedDeclaredType","l":"shallowCopy(boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedExecutableType","l":"shallowCopy(boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedIntersectionType","l":"shallowCopy(boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedNoType","l":"shallowCopy(boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedNullType","l":"shallowCopy(boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedPrimitiveType","l":"shallowCopy(boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedTypeVariable","l":"shallowCopy(boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedUnionType","l":"shallowCopy(boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedWildcardType","l":"shallowCopy(boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"shallowCopy(boolean)"},{"p":"org.checkerframework.common.value.util","c":"ByteMath","l":"shiftLeft(Number)","u":"shiftLeft(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"DoubleMath","l":"shiftLeft(Number)","u":"shiftLeft(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"FloatMath","l":"shiftLeft(Number)","u":"shiftLeft(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"IntegerMath","l":"shiftLeft(Number)","u":"shiftLeft(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"LongMath","l":"shiftLeft(Number)","u":"shiftLeft(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"NumberMath","l":"shiftLeft(Number)","u":"shiftLeft(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"ShortMath","l":"shiftLeft(Number)","u":"shiftLeft(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"shiftLeft(Range)","u":"shiftLeft(org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.framework.qual","c":"TypeKind","l":"SHORT"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"SHORT_EVERYTHING"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"shortFromDouble(double)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"shortFromFloat(float)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ShortLiteralNode","l":"ShortLiteralNode(LiteralTree)","u":"%3Cinit%3E(com.sun.source.tree.LiteralTree)"},{"p":"org.checkerframework.common.value.util","c":"ShortMath","l":"ShortMath(int)","u":"%3Cinit%3E(int)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"shortRange()"},{"p":"org.checkerframework.framework.type","c":"AbstractViewpointAdapter","l":"shouldAdaptMember(AnnotatedTypeMirror, Element)","u":"shouldAdaptMember(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.type","c":"AbstractViewpointAdapter","l":"shouldAdaptMethod(ExecutableElement)","u":"shouldAdaptMethod(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"shouldAddShutdownHook()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"shouldAddShutdownHook()"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults.DefaultApplierElement","l":"shouldBeAnnotated(AnnotatedTypeMirror, boolean)","u":"shouldBeAnnotated(org.checkerframework.framework.type.AnnotatedTypeMirror,boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"shouldCache"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"shouldCheckTopLevelDeclaredOrPrimitiveType(AnnotatedTypeMirror, Tree)","u":"shouldCheckTopLevelDeclaredOrPrimitiveType(org.checkerframework.framework.type.AnnotatedTypeMirror,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"shouldClearSubcheckerSharedCFGs"},{"p":"org.checkerframework.framework.test","c":"ImmutableTestConfiguration","l":"shouldEmitDebugInfo()"},{"p":"org.checkerframework.framework.test","c":"TestConfiguration","l":"shouldEmitDebugInfo()"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"shouldInsert(JavaExpression, V, boolean)","u":"shouldInsert(org.checkerframework.dataflow.expression.JavaExpression,V,boolean)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnostic","l":"shouldOmitParentheses()"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"shouldPassThroughExpression(String)","u":"shouldPassThroughExpression(java.lang.String)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"shouldResolveReflection()"},{"p":"org.checkerframework.common.reflection","c":"ClassValChecker","l":"shouldResolveReflection()"},{"p":"org.checkerframework.common.value","c":"ValueChecker","l":"shouldResolveReflection()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"shouldSkipDefs(ClassTree)","u":"shouldSkipDefs(com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"shouldSkipDefs(ClassTree, MethodTree)","u":"shouldSkipDefs(com.sun.source.tree.ClassTree,com.sun.source.tree.MethodTree)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"shouldSkipUses(Element)","u":"shouldSkipUses(javax.lang.model.element.Element)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"shouldSkipUses(ExpressionTree)","u":"shouldSkipUses(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundChecker","l":"shouldSkipUses(String)","u":"shouldSkipUses(java.lang.String)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundChecker","l":"shouldSkipUses(String)","u":"shouldSkipUses(java.lang.String)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"shouldSkipUses(String)","u":"shouldSkipUses(java.lang.String)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"shouldSuppressWarnings(Element, String)","u":"shouldSuppressWarnings(javax.lang.model.element.Element,java.lang.String)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"shouldSuppressWarnings(Tree, String)","u":"shouldSuppressWarnings(com.sun.source.tree.Tree,java.lang.String)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"shouldSuppressWarnings(TreePath, String)","u":"shouldSuppressWarnings(com.sun.source.util.TreePath,java.lang.String)"},{"p":"org.checkerframework.checker.signedness","c":"SignednessVisitor","l":"shouldWarnAboutIrrelevantJavaTypes()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"shouldWarnAboutIrrelevantJavaTypes()"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnnotatedTypeFactory","l":"shouldWarnIfStubRedundantWithBytecode()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"shouldWarnIfStubRedundantWithBytecode()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"showchecks"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizer","l":"shutdown()"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"shutdown()"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"StringCFGVisualizer","l":"shutdown()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"shutdownHook()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"shutdownHook()"},{"p":"org.checkerframework.dataflow.qual","c":"Pure.Kind","l":"SIDE_EFFECT_FREE"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"SIDE_EFFECT_FREE"},{"p":"org.checkerframework.checker.lock","c":"LockAnnotatedTypeFactory","l":"SIDEEFFECTFREE"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"sideEffectsUnrefineAliases"},{"p":"org.checkerframework.framework.util.element","c":"MethodTypeParamApplier","l":"sift(Iterable<Attribute.TypeCompound>)","u":"sift(java.lang.Iterable)"},{"p":"org.checkerframework.framework.util.element","c":"ParamApplier","l":"sift(Iterable<Attribute.TypeCompound>)","u":"sift(java.lang.Iterable)"},{"p":"org.checkerframework.framework.util.element","c":"TypeDeclarationApplier","l":"sift(Iterable<Attribute.TypeCompound>)","u":"sift(java.lang.Iterable)"},{"p":"org.checkerframework.checker.signature","c":"SignatureAnnotatedTypeFactory","l":"SIGNATURE_UNKNOWN"},{"p":"org.checkerframework.checker.signature","c":"SignatureAnnotatedTypeFactory","l":"SignatureAnnotatedTypeFactory(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.signature","c":"SignatureChecker","l":"SignatureChecker()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.common.util.debug","c":"SignaturePrinter","l":"SignaturePrinter()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.signature","c":"SignatureTransfer","l":"SignatureTransfer(CFAnalysis)","u":"%3Cinit%3E(org.checkerframework.framework.flow.CFAnalysis)"},{"p":"org.checkerframework.checker.signedness","c":"SignednessAnnotatedTypeFactory","l":"SIGNED"},{"p":"org.checkerframework.checker.signedness","c":"SignednessAnnotatedTypeFactory","l":"SIGNED_POSITIVE_FROM_UNSIGNED"},{"p":"org.checkerframework.checker.signedness","c":"SignednessAnnotatedTypeFactory","l":"SIGNEDNESS_BOTTOM"},{"p":"org.checkerframework.checker.signedness","c":"SignednessAnnotatedTypeFactory","l":"SignednessAnnotatedTypeFactory(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.signedness","c":"SignednessChecker","l":"SignednessChecker()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.signedness","c":"SignednessVisitor","l":"SignednessVisitor(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SignedRightShiftNode","l":"SignedRightShiftNode(BinaryTree, Node, Node)","u":"%3Cinit%3E(com.sun.source.tree.BinaryTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.common.value.util","c":"ByteMath","l":"signedShiftRight(Number)","u":"signedShiftRight(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"DoubleMath","l":"signedShiftRight(Number)","u":"signedShiftRight(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"FloatMath","l":"signedShiftRight(Number)","u":"signedShiftRight(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"IntegerMath","l":"signedShiftRight(Number)","u":"signedShiftRight(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"LongMath","l":"signedShiftRight(Number)","u":"signedShiftRight(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"NumberMath","l":"signedShiftRight(Number)","u":"signedShiftRight(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"ShortMath","l":"signedShiftRight(Number)","u":"signedShiftRight(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"signedShiftRight(Range)","u":"signedShiftRight(org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeScanner","l":"SimpleAnnotatedTypeScanner()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeScanner","l":"SimpleAnnotatedTypeScanner(AnnotatedTypeScanner.Reduce<R>, R)","u":"%3Cinit%3E(org.checkerframework.framework.type.visitor.AnnotatedTypeScanner.Reduce,R)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeScanner","l":"SimpleAnnotatedTypeScanner(SimpleAnnotatedTypeScanner.DefaultAction<R, P>)","u":"%3Cinit%3E(org.checkerframework.framework.type.visitor.SimpleAnnotatedTypeScanner.DefaultAction)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeScanner","l":"SimpleAnnotatedTypeScanner(SimpleAnnotatedTypeScanner.DefaultAction<R, P>, AnnotatedTypeScanner.Reduce<R>, R)","u":"%3Cinit%3E(org.checkerframework.framework.type.visitor.SimpleAnnotatedTypeScanner.DefaultAction,org.checkerframework.framework.type.visitor.AnnotatedTypeScanner.Reduce,R)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeVisitor","l":"SimpleAnnotatedTypeVisitor()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeVisitor","l":"SimpleAnnotatedTypeVisitor(R)","u":"%3Cinit%3E(R)"},{"p":"org.checkerframework.framework.test","c":"SimpleOptionMap","l":"SimpleOptionMap()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"simpleTypeName(TypeMirror)","u":"simpleTypeName(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"SingleSuccessorBlockImpl","l":"SingleSuccessorBlockImpl(Block.BlockType)","u":"%3Cinit%3E(org.checkerframework.dataflow.cfg.block.Block.BlockType)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseThree","l":"singleSuccessorHolder(SingleSuccessorBlockImpl, BlockImpl)","u":"singleSuccessorHolder(org.checkerframework.dataflow.cfg.block.SingleSuccessorBlockImpl,org.checkerframework.dataflow.cfg.block.BlockImpl)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"singleton(AnnotationMirror)","u":"singleton(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorMap","l":"size()"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"size()"},{"p":"org.checkerframework.checker.optional","c":"OptionalVisitor","l":"skipBlocks(StatementTree)","u":"skipBlocks(com.sun.source.tree.StatementTree)"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"skipReceiverSubtypeCheck(MethodInvocationTree, AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"skipReceiverSubtypeCheck(com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallVisitor","l":"skipReceiverSubtypeCheck(MethodInvocationTree, AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"skipReceiverSubtypeCheck(com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"skipReceiverSubtypeCheck(MethodInvocationTree, AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"skipReceiverSubtypeCheck(com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.javacutil","c":"SystemUtil","l":"sleep(long)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"EqualitiesSolver","l":"solveEqualities(Set<TypeVariable>, ConstraintMap, AnnotatedTypeFactory)","u":"solveEqualities(java.util.Set,org.checkerframework.framework.util.typeinference.solver.ConstraintMap,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"SubtypesSolver","l":"solveFromSubtypes(Set<TypeVariable>, ConstraintMap, AnnotatedTypeFactory)","u":"solveFromSubtypes(java.util.Set,org.checkerframework.framework.util.typeinference.solver.ConstraintMap,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"SupertypesSolver","l":"solveFromSupertypes(Set<TypeVariable>, ConstraintMap, AnnotatedTypeFactory)","u":"solveFromSupertypes(java.util.Set,org.checkerframework.framework.util.typeinference.solver.ConstraintMap,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util.typeinference","c":"GlbUtil","l":"sortForGlb(List<? extends AnnotatedTypeMirror>, AnnotatedTypeFactory)","u":"sortForGlb(java.util.List,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"SourceChecker()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.source","c":"SourceVisitor","l":"SourceVisitor(SourceChecker)","u":"%3Cinit%3E(org.checkerframework.framework.source.SourceChecker)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"Block.BlockType","l":"SPECIAL_BLOCK"},{"p":"org.checkerframework.dataflow.cfg.block","c":"SpecialBlockImpl","l":"SpecialBlockImpl(SpecialBlock.SpecialBlockType)","u":"%3Cinit%3E(org.checkerframework.dataflow.cfg.block.SpecialBlock.SpecialBlockType)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"SpecialBlockImpl","l":"specialType"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"splitAssignments(Node)","u":"splitAssignments(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"STANDARD_CLIMB_DEFAULTS_BOTTOM"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"STANDARD_CLIMB_DEFAULTS_TOP"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"STANDARD_UNCHECKED_DEFAULTS_BOTTOM"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"STANDARD_UNCHECKED_DEFAULTS_TOP"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SynchronizedNode","l":"startOfBlock"},{"p":"org.checkerframework.dataflow.analysis","c":"RegularTransferResult","l":"store"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferInput","l":"store"},{"p":"org.checkerframework.framework.type","c":"DeclarationsIntoElements","l":"store(ProcessingEnvironment, AnnotatedTypeFactory, ClassTree)","u":"store(javax.annotation.processing.ProcessingEnvironment,org.checkerframework.framework.type.AnnotatedTypeFactory,com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.framework.type","c":"TypesIntoElements","l":"store(ProcessingEnvironment, AnnotatedTypeFactory, ClassTree)","u":"store(javax.annotation.processing.ProcessingEnvironment,org.checkerframework.framework.type.AnnotatedTypeFactory,com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.dataflow.analysis","c":"BackwardAnalysisImpl","l":"storeAtEntry"},{"p":"org.checkerframework.dataflow.analysis","c":"ConditionalTransferResult","l":"storeChanged()"},{"p":"org.checkerframework.dataflow.analysis","c":"RegularTransferResult","l":"storeChanged()"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferResult","l":"storeChanged()"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer","l":"storeEntryIndent"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"stores"},{"p":"org.checkerframework.dataflow.analysis","c":"ForwardAnalysisImpl","l":"storesAtReturnStatements"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"strengthenAnnotationOfEqualTo(TransferResult<CFValue, CFStore>, Node, Node, CFValue, CFValue, boolean)","u":"strengthenAnnotationOfEqualTo(org.checkerframework.dataflow.analysis.TransferResult,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.framework.flow.CFValue,org.checkerframework.framework.flow.CFValue,boolean)"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenTransfer","l":"strengthenAnnotationOfEqualTo(TransferResult<CFValue, CFStore>, Node, Node, CFValue, CFValue, boolean)","u":"strengthenAnnotationOfEqualTo(org.checkerframework.dataflow.analysis.TransferResult,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.framework.flow.CFValue,org.checkerframework.framework.flow.CFValue,boolean)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundTransfer","l":"strengthenAnnotationOfEqualTo(TransferResult<CFValue, CFStore>, Node, Node, CFValue, CFValue, boolean)","u":"strengthenAnnotationOfEqualTo(org.checkerframework.dataflow.analysis.TransferResult,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.framework.flow.CFValue,org.checkerframework.framework.flow.CFValue,boolean)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"strengthenAnnotationOfEqualTo(TransferResult<CFValue, CFStore>, Node, Node, CFValue, CFValue, boolean)","u":"strengthenAnnotationOfEqualTo(org.checkerframework.dataflow.analysis.TransferResult,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.framework.flow.CFValue,org.checkerframework.framework.flow.CFValue,boolean)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessTransfer","l":"strengthenAnnotationOfEqualTo(TransferResult<NullnessValue, NullnessStore>, Node, Node, NullnessValue, NullnessValue, boolean)","u":"strengthenAnnotationOfEqualTo(org.checkerframework.dataflow.analysis.TransferResult,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.checker.nullness.NullnessValue,org.checkerframework.checker.nullness.NullnessValue,boolean)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"strengthenAnnotationOfEqualTo(TransferResult<V, S>, Node, Node, V, V, boolean)","u":"strengthenAnnotationOfEqualTo(org.checkerframework.dataflow.analysis.TransferResult,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node,V,V,boolean)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"strictEnclosingTypeElement(Element)","u":"strictEnclosingTypeElement(javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy.DefaultQualifierKind","l":"strictSuperTypes"},{"p":"org.checkerframework.framework.qual","c":"LiteralKind","l":"STRING"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"StringCFGVisualizer","l":"StringCFGVisualizer()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringConcatenateAssignmentNode","l":"StringConcatenateAssignmentNode(Tree, Node, Node)","u":"%3Cinit%3E(com.sun.source.tree.Tree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringConcatenateNode","l":"StringConcatenateNode(BinaryTree, Node, Node)","u":"%3Cinit%3E(com.sun.source.tree.BinaryTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"stringConcatenation(Node, Node, TransferInput<CFValue, CFStore>, TransferResult<CFValue, CFStore>)","u":"stringConcatenation(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.TransferInput,org.checkerframework.dataflow.analysis.TransferResult)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"stringConversion(Node)","u":"stringConversion(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringConversionNode","l":"StringConversionNode(Tree, Node, TypeMirror)","u":"%3Cinit%3E(com.sun.source.tree.Tree,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.util","c":"JavaParserUtil.StringLiteralConcatenateVisitor","l":"StringLiteralConcatenateVisitor()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringLiteralNode","l":"StringLiteralNode(LiteralTree)","u":"%3Cinit%3E(com.sun.source.tree.LiteralTree)"},{"p":"org.checkerframework.framework.qual","c":"QualifierForLiterals","l":"stringPatterns()"},{"p":"org.checkerframework.checker.i18nformatter.qual","c":"I18nConversionCategory","l":"strings"},{"p":"org.checkerframework.checker.i18nformatter.qual","c":"I18nConversionCategory","l":"stringToI18nConversionCategory(String)","u":"stringToI18nConversionCategory(java.lang.String)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"stringType"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"STRINGVAL_NAME"},{"p":"org.checkerframework.common.reflection","c":"MethodValAnnotatedTypeFactory","l":"stringValValueElement"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"stringValValueElement"},{"p":"org.checkerframework.framework.type","c":"StructuralEqualityComparer","l":"StructuralEqualityComparer(StructuralEqualityVisitHistory)","u":"%3Cinit%3E(org.checkerframework.framework.type.StructuralEqualityVisitHistory)"},{"p":"org.checkerframework.framework.type","c":"StructuralEqualityVisitHistory","l":"StructuralEqualityVisitHistory()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.stub","c":"StubGenerator","l":"stubFromField(Element)","u":"stubFromField(javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.stub","c":"StubGenerator","l":"stubFromMethod(ExecutableElement)","u":"stubFromMethod(javax.lang.model.element.ExecutableElement)"},{"p":"org.checkerframework.framework.stub","c":"StubGenerator","l":"stubFromPackage(PackageElement)","u":"stubFromPackage(javax.lang.model.element.PackageElement)"},{"p":"org.checkerframework.framework.stub","c":"StubGenerator","l":"stubFromType(TypeElement)","u":"stubFromType(javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.framework.stub","c":"StubGenerator","l":"StubGenerator()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.stub","c":"StubGenerator","l":"StubGenerator(OutputStream)","u":"%3Cinit%3E(java.io.OutputStream)"},{"p":"org.checkerframework.framework.stub","c":"StubGenerator","l":"StubGenerator(PrintStream)","u":"%3Cinit%3E(java.io.PrintStream)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"stubTypes"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"subcheckerSharedCFG"},{"p":"org.checkerframework.checker.index.qual","c":"HasSubsequence","l":"subsequence()"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"subSet(AnnotationMirror, AnnotationMirror)","u":"subSet(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"subSet(AnnotationMirror, boolean, AnnotationMirror, boolean)","u":"subSet(javax.lang.model.element.AnnotationMirror,boolean,javax.lang.model.element.AnnotationMirror,boolean)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"AFConstraint","l":"substitute(Map<TypeVariable, AnnotatedTypeMirror>)","u":"substitute(java.util.Map)"},{"p":"org.checkerframework.framework.type","c":"TypeVariableSubstitutor","l":"substitute(Map<TypeVariable, AnnotatedTypeMirror>, AnnotatedTypeMirror)","u":"substitute(java.util.Map,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.typeinference","c":"TypeArgInferenceUtil","l":"substitute(Map<TypeVariable, AnnotatedTypeMirror>, AnnotatedTypeMirror)","u":"substitute(java.util.Map,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"substitute(TypeMirror, List<? extends TypeMirror>, List<? extends TypeMirror>, ProcessingEnvironment)","u":"substitute(javax.lang.model.type.TypeMirror,java.util.List,java.util.List,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.framework.util.typeinference","c":"TypeArgInferenceUtil","l":"substitute(TypeVariable, AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"substitute(javax.lang.model.type.TypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"substituteMethodReturnType(Element, TypeMirror, ProcessingEnvironment)","u":"substituteMethodReturnType(javax.lang.model.element.Element,javax.lang.model.type.TypeMirror,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.framework.type","c":"TypeVariableSubstitutor","l":"substituteTypeVariable(AnnotatedTypeMirror, AnnotatedTypeMirror.AnnotatedTypeVariable)","u":"substituteTypeVariable(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable)"},{"p":"org.checkerframework.framework.type","c":"TypeVariableSubstitutor","l":"substituteWithoutCopyingTypeArguments(Map<TypeVariable, AnnotatedTypeMirror>, AnnotatedTypeMirror)","u":"substituteWithoutCopyingTypeArguments(java.util.Map,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.index.substringindex","c":"SubstringIndexAnnotatedTypeFactory","l":"SubstringIndexAnnotatedTypeFactory(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.index.substringindex","c":"SubstringIndexChecker","l":"SubstringIndexChecker()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundChecker","l":"substringIndexForOffsetElement"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundChecker","l":"substringIndexForValueElement"},{"p":"org.checkerframework.framework.type","c":"SubtypeIsSubsetQualifierHierarchy","l":"SubtypeIsSubsetQualifierHierarchy(Collection<Class<? extends Annotation>>, ProcessingEnvironment)","u":"%3Cinit%3E(java.util.Collection,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.framework.type","c":"SubtypeIsSupersetQualifierHierarchy","l":"SubtypeIsSupersetQualifierHierarchy(Collection<Class<? extends Annotation>>, ProcessingEnvironment)","u":"%3Cinit%3E(java.util.Collection,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"TargetConstraints","l":"subtypes"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"TargetConstraints.Subtypes","l":"Subtypes()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"SubtypesSolver","l":"SubtypesSolver()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.type","c":"SubtypeVisitHistory","l":"SubtypeVisitHistory()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.common.subtyping","c":"SubtypingAnnotatedTypeFactory","l":"SubtypingAnnotatedTypeFactory(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.common.subtyping","c":"SubtypingAnnotationClassLoader","l":"SubtypingAnnotationClassLoader(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.common.subtyping","c":"SubtypingChecker","l":"SubtypingChecker()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"SingleSuccessorBlockImpl","l":"successor"},{"p":"org.checkerframework.framework.test","c":"TypecheckResult","l":"summarize()"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"summarizeSourceFiles(List<File>)","u":"summarizeSourceFiles(java.util.List)"},{"p":"org.checkerframework.framework.util.element","c":"TypeDeclarationApplier","l":"SUPERCLASS_INDEX"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SuperNode","l":"SuperNode(IdentifierTree)","u":"%3Cinit%3E(com.sun.source.tree.IdentifierTree)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessStore","l":"supersetOf(CFAbstractStore<NullnessValue, NullnessStore>)","u":"supersetOf(org.checkerframework.framework.flow.CFAbstractStore)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationStore","l":"supersetOf(CFAbstractStore<V, S>)","u":"supersetOf(org.checkerframework.framework.flow.CFAbstractStore)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"supersetOf(CFAbstractStore<V, S>)","u":"supersetOf(org.checkerframework.framework.flow.CFAbstractStore)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"TargetConstraints","l":"supertypes"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"TargetConstraints.Supertypes","l":"Supertypes()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"SupertypesSolver","l":"SupertypesSolver()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.type.typeannotator","c":"DefaultQualifierForUseTypeAnnotator","l":"supportedAnnosFromAnnotationMirror(AnnotationMirror)","u":"supportedAnnosFromAnnotationMirror(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type.typeannotator","c":"DefaultQualifierForUseTypeAnnotator","l":"supportedAnnosFromAnnotationMirror(List<Name>)","u":"supportedAnnosFromAnnotationMirror(java.util.List)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"SUPPRESS_ALL_MESSAGE_KEY"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"SUPPRESS_ALL_PREFIX"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SwitchExpressionNode","l":"SwitchExpressionNode(TypeMirror, Tree, LocalVariableNode)","u":"%3Cinit%3E(javax.lang.model.type.TypeMirror,com.sun.source.tree.Tree,org.checkerframework.dataflow.cfg.node.LocalVariableNode)"},{"p":"org.checkerframework.javacutil","c":"SwitchExpressionScanner","l":"SwitchExpressionScanner()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"switchExpressionTreeGetCases(Tree)","u":"switchExpressionTreeGetCases(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"switchExpressionTreeGetExpression(Tree)","u":"switchExpressionTreeGetExpression(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"symtab"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SynchronizedNode","l":"SynchronizedNode(SynchronizedTree, Node, boolean, Types)","u":"%3Cinit%3E(com.sun.source.tree.SynchronizedTree,org.checkerframework.dataflow.cfg.node.Node,boolean,javax.lang.model.util.Types)"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayAccess","l":"syntacticEquals(JavaExpression)","u":"syntacticEquals(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayCreation","l":"syntacticEquals(JavaExpression)","u":"syntacticEquals(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"BinaryOperation","l":"syntacticEquals(JavaExpression)","u":"syntacticEquals(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"ClassName","l":"syntacticEquals(JavaExpression)","u":"syntacticEquals(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"FieldAccess","l":"syntacticEquals(JavaExpression)","u":"syntacticEquals(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"FormalParameter","l":"syntacticEquals(JavaExpression)","u":"syntacticEquals(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"syntacticEquals(JavaExpression)","u":"syntacticEquals(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"LocalVariable","l":"syntacticEquals(JavaExpression)","u":"syntacticEquals(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"MethodCall","l":"syntacticEquals(JavaExpression)","u":"syntacticEquals(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"ThisReference","l":"syntacticEquals(JavaExpression)","u":"syntacticEquals(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"UnaryOperation","l":"syntacticEquals(JavaExpression)","u":"syntacticEquals(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"Unknown","l":"syntacticEquals(JavaExpression)","u":"syntacticEquals(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"ValueLiteral","l":"syntacticEquals(JavaExpression)","u":"syntacticEquals(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"syntacticEqualsList(List<? extends JavaExpression>, List<? extends JavaExpression>)","u":"syntacticEqualsList(java.util.List,java.util.List)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssignmentNode","l":"synthetic"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory","l":"systemGetPropertyHandler"},{"p":"org.checkerframework.checker.nullness","c":"SystemGetPropertyHandler","l":"SystemGetPropertyHandler(ProcessingEnvironment, NullnessAnnotatedTypeFactory, boolean)","u":"%3Cinit%3E(javax.annotation.processing.ProcessingEnvironment,org.checkerframework.checker.nullness.NullnessAnnotatedTypeFactory,boolean)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"t"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"t"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"tailSet(AnnotationMirror)","u":"tailSet(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"tailSet(AnnotationMirror, boolean)","u":"tailSet(javax.lang.model.element.AnnotationMirror,boolean)"},{"p":"org.checkerframework.checker.tainting","c":"TaintingChecker","l":"TaintingChecker()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.tainting","c":"TaintingVisitor","l":"TaintingVisitor(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodInvocationNode","l":"target"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"InferredValue.InferredTarget","l":"target"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"TargetConstraints","l":"target"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"TARGET"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"TargetConstraints","l":"TargetConstraints(TypeVariable)","u":"%3Cinit%3E(javax.lang.model.type.TypeVariable)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"TargetConstraints.Equalities","l":"targets"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"TargetConstraints.Subtypes","l":"targets"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"TargetConstraints.Supertypes","l":"targets"},{"p":"org.checkerframework.checker.index.qual","c":"EnsuresLTLengthOf","l":"targetValue()"},{"p":"org.checkerframework.checker.index.qual","c":"EnsuresLTLengthOfIf","l":"targetValue()"},{"p":"org.checkerframework.common.value.qual","c":"EnsuresMinLenIf","l":"targetValue()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"targetValueElement"},{"p":"org.checkerframework.checker.units.qual","c":"Prefix","l":"tera"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ExtendedNode","l":"terminatesExecution"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TernaryExpressionNode","l":"TernaryExpressionNode(ConditionalExpressionTree, Node, Node, Node, LocalVariableNode)","u":"%3Cinit%3E(com.sun.source.tree.ConditionalExpressionTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.LocalVariableNode)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"testAnnotationInsertion()"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"TestConfigurationBuilder()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"TestConfigurationBuilder(TestConfiguration)","u":"%3Cinit%3E(org.checkerframework.framework.test.TestConfiguration)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnostic","l":"TestDiagnostic(String, long, DiagnosticKind, String, boolean, boolean)","u":"%3Cinit%3E(java.lang.String,long,org.checkerframework.framework.test.diagnostics.DiagnosticKind,java.lang.String,boolean,boolean)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticLine","l":"TestDiagnosticLine(String, long, String, List<TestDiagnostic>)","u":"%3Cinit%3E(java.lang.String,long,java.lang.String,java.util.List)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnosticUtils","l":"TestDiagnosticUtils()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.test","c":"CheckerFrameworkPerDirectoryTest","l":"testDir"},{"p":"org.checkerframework.framework.test","c":"CheckerFrameworkPerFileTest","l":"testDir"},{"p":"org.checkerframework.framework.test","c":"CheckerFrameworkPerFileTest","l":"testFile"},{"p":"org.checkerframework.framework.test","c":"CheckerFrameworkPerDirectoryTest","l":"testFiles"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"testJointJavacJavaParserVisitor()"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"TESTS_OUTPUTDIR"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"testTypevarContainment(AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"testTypevarContainment(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"TestUtilities()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.analysis","c":"Store.Kind","l":"THEN"},{"p":"org.checkerframework.dataflow.analysis","c":"Store.FlowRule","l":"THEN_TO_BOTH"},{"p":"org.checkerframework.dataflow.analysis","c":"Store.FlowRule","l":"THEN_TO_THEN"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ConditionalBlockImpl","l":"thenFlowRule"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TernaryExpressionNode","l":"thenOperand"},{"p":"org.checkerframework.checker.index","c":"IndexRefinementInfo","l":"thenStore"},{"p":"org.checkerframework.dataflow.analysis","c":"ConditionalTransferResult","l":"thenStore"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferInput","l":"thenStore"},{"p":"org.checkerframework.dataflow.analysis","c":"ForwardAnalysisImpl","l":"thenStores"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ConditionalBlockImpl","l":"thenSuccessor"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ThisNode","l":"ThisNode(TypeMirror)","u":"%3Cinit%3E(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.dataflow.expression","c":"ThisReference","l":"ThisReference(TypeMirror)","u":"%3Cinit%3E(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"thisValue"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"throwableType"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ThrowNode","l":"ThrowNode(ThrowTree, Node, Types)","u":"%3Cinit%3E(com.sun.source.tree.ThrowTree,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.util.Types)"},{"p":"org.checkerframework.checker.formatter.qual","c":"ConversionCategory","l":"TIME"},{"p":"org.checkerframework.common.value.util","c":"ByteMath","l":"times(Number)","u":"times(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"DoubleMath","l":"times(Number)","u":"times(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"FloatMath","l":"times(Number)","u":"times(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"IntegerMath","l":"times(Number)","u":"times(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"LongMath","l":"times(Number)","u":"times(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"NumberMath","l":"times(Number)","u":"times(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"ShortMath","l":"times(Number)","u":"times(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"times(Range)","u":"times(org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"TIsU","l":"TIsU(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror)","u":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"TIsU","l":"TIsU(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror, boolean)","u":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror,boolean)"},{"p":"org.checkerframework.checker.index","c":"Subsequence","l":"to"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"to"},{"p":"org.checkerframework.checker.nullness","c":"KeyForPropagator.PropagationDirection","l":"TO_SUBTYPE"},{"p":"org.checkerframework.checker.nullness","c":"KeyForPropagator.PropagationDirection","l":"TO_SUPERTYPE"},{"p":"org.checkerframework.checker.index.qual","c":"HasSubsequence","l":"to()"},{"p":"org.checkerframework.common.value.qual","c":"ArrayLenRange","l":"to()"},{"p":"org.checkerframework.common.value.qual","c":"IntRange","l":"to()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"toAnnotatedType(TypeMirror, boolean)","u":"toAnnotatedType(javax.lang.model.type.TypeMirror,boolean)"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"toArray()"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"toArray(T[])"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"InferenceResult","l":"toAtmMap()"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"toDegrees(double)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"toDouble(byte)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"toDouble(int)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"toDouble(long)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"toDouble(short)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"toFloat(byte)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"toFloat(int)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"toFloat(long)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"toFloat(short)"},{"p":"org.checkerframework.framework.util","c":"StringToJavaExpression","l":"toJavaExpression(String)","u":"toJavaExpression(java.lang.String)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory","l":"top"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy.DefaultQualifierKind","l":"top"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"Constant.Type","l":"TOP"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"TOP"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory","l":"TOP"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"toplevelEnclosingTypeElement(Element)","u":"toplevelEnclosingTypeElement(javax.lang.model.element.Element)"},{"p":"org.checkerframework.framework.type.poly","c":"AbstractQualifierPolymorphism","l":"topQuals"},{"p":"org.checkerframework.framework.type","c":"ElementQualifierHierarchy","l":"tops"},{"p":"org.checkerframework.framework.type","c":"NoElementQualifierHierarchy","l":"tops"},{"p":"org.checkerframework.framework.type","c":"ElementQualifierHierarchy","l":"topsMap"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"toRadians(double)"},{"p":"org.checkerframework.checker.formatter.qual","c":"ConversionCategory","l":"toString()"},{"p":"org.checkerframework.checker.guieffect","c":"Effect","l":"toString()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil.I18nFormatCall","l":"toString()"},{"p":"org.checkerframework.checker.i18nformatter.qual","c":"I18nConversionCategory","l":"toString()"},{"p":"org.checkerframework.checker.index","c":"Subsequence","l":"toString()"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"toString()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"toString()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.UpperBoundLiteralQualifier","l":"toString()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.UpperBoundUnknownQualifier","l":"toString()"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"toString()"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis.Worklist","l":"toString()"},{"p":"org.checkerframework.dataflow.analysis","c":"ConditionalTransferResult","l":"toString()"},{"p":"org.checkerframework.dataflow.analysis","c":"RegularTransferResult","l":"toString()"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferInput","l":"toString()"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprStore","l":"toString()"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprValue","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ConditionalBlockImpl","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"ExceptionBlockImpl","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"RegularBlockImpl","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"SpecialBlockImpl","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ConditionalJump","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ExtendedNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"Label","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"PhaseOneResult","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayAccessNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayCreationNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayTypeNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssertionErrorNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssignmentNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BitwiseAndNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BitwiseComplementNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BitwiseOrNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BitwiseXorNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"CaseNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ClassDeclarationNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ClassNameNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ConditionalAndNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ConditionalNotNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ConditionalOrNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"EqualToNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ExplicitThisNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ExpressionStatementNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FieldAccessNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FloatingDivisionNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FloatingRemainderNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FunctionalInterfaceNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"GreaterThanNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"GreaterThanOrEqualNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ImplicitThisNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"InstanceOfNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"IntegerDivisionNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"IntegerRemainderNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LambdaResultExpressionNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LeftShiftNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LessThanNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LessThanOrEqualNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LocalVariableNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MarkerNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodAccessNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodInvocationNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NarrowingConversionNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NotEqualNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NullChkNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalAdditionNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalMinusNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalMultiplicationNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalPlusNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NumericalSubtractionNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ObjectCreationNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"PackageNameNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ParameterizedTypeNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"PrimitiveTypeNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ReturnNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SignedRightShiftNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringConcatenateAssignmentNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringConcatenateNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringConversionNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringLiteralNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SuperNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SwitchExpressionNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SynchronizedNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TernaryExpressionNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ThrowNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TypeCastNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"UnsignedRightShiftNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ValueLiteralNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"VariableDeclarationNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"WideningConversionNode","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGLambda","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGMethod","l":"toString()"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.CFGStatement","l":"toString()"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"Constant","l":"toString()"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"ConstantPropagationStore","l":"toString()"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayAccess","l":"toString()"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayCreation","l":"toString()"},{"p":"org.checkerframework.dataflow.expression","c":"BinaryOperation","l":"toString()"},{"p":"org.checkerframework.dataflow.expression","c":"ClassName","l":"toString()"},{"p":"org.checkerframework.dataflow.expression","c":"FieldAccess","l":"toString()"},{"p":"org.checkerframework.dataflow.expression","c":"FormalParameter","l":"toString()"},{"p":"org.checkerframework.dataflow.expression","c":"LocalVariable","l":"toString()"},{"p":"org.checkerframework.dataflow.expression","c":"MethodCall","l":"toString()"},{"p":"org.checkerframework.dataflow.expression","c":"ThisReference","l":"toString()"},{"p":"org.checkerframework.dataflow.expression","c":"UnaryOperation","l":"toString()"},{"p":"org.checkerframework.dataflow.expression","c":"Unknown","l":"toString()"},{"p":"org.checkerframework.dataflow.expression","c":"ValueLiteral","l":"toString()"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarNode","l":"toString()"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarStore","l":"toString()"},{"p":"org.checkerframework.dataflow.reachingdef","c":"ReachingDefinitionNode","l":"toString()"},{"p":"org.checkerframework.dataflow.reachingdef","c":"ReachingDefinitionStore","l":"toString()"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker.PurityResult","l":"toString()"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"toString()"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue","l":"toString()"},{"p":"org.checkerframework.framework.source","c":"DiagMessage","l":"toString()"},{"p":"org.checkerframework.framework.test.diagnostics","c":"TestDiagnostic","l":"toString()"},{"p":"org.checkerframework.framework.test","c":"ImmutableTestConfiguration","l":"toString()"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"toString()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory.ParameterizedExecutableType","l":"toString()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"toString()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"toString()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeParameterBounds","l":"toString()"},{"p":"org.checkerframework.framework.type","c":"SubtypeVisitHistory","l":"toString()"},{"p":"org.checkerframework.framework.type.treeannotator","c":"ListTreeAnnotator","l":"toString()"},{"p":"org.checkerframework.framework.type.typeannotator","c":"ListTypeAnnotator","l":"toString()"},{"p":"org.checkerframework.framework.util","c":"Contract.ConditionalPostcondition","l":"toString()"},{"p":"org.checkerframework.framework.util","c":"Contract","l":"toString()"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy.DefaultQualifierKind","l":"toString()"},{"p":"org.checkerframework.framework.util.defaults","c":"Default","l":"toString()"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"toString()"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesError","l":"toString()"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"A2F","l":"toString()"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"F2A","l":"toString()"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"FIsA","l":"toString()"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"TIsU","l":"toString()"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"TSubU","l":"toString()"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"TSuperU","l":"toString()"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorMap","l":"toString()"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"toString()"},{"p":"org.checkerframework.javacutil","c":"Pair","l":"toString()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"toString(boolean)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeParameterBounds","l":"toString(boolean)"},{"p":"org.checkerframework.taglet","c":"ManualTaglet","l":"toString(List<? extends DocTree>, Element)","u":"toString(java.util.List,javax.lang.model.element.Element)"},{"p":"org.checkerframework.javacutil","c":"TreePathUtil","l":"toString(TreePath)","u":"toString(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"toStringDebug()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ConditionalJump","l":"toStringDebug()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ExtendedNode","l":"toStringDebug()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"PhaseOneResult","l":"toStringDebug()"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"toStringDebug()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"Node","l":"toStringDebug()"},{"p":"org.checkerframework.dataflow.expression","c":"ArrayCreation","l":"toStringDebug()"},{"p":"org.checkerframework.dataflow.expression","c":"FieldAccess","l":"toStringDebug()"},{"p":"org.checkerframework.dataflow.expression","c":"FormalParameter","l":"toStringDebug()"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"toStringDebug()"},{"p":"org.checkerframework.dataflow.expression","c":"LocalVariable","l":"toStringDebug()"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue","l":"toStringFullyQualified()"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"toStringOneLine(Tree)","u":"toStringOneLine(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessValue","l":"toStringSimple()"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue","l":"toStringSimple()"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"toStringSimple(AnnotationMirror)","u":"toStringSimple(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"toStringSimple(AnnotationMirror, StringBuilder)","u":"toStringSimple(javax.lang.model.element.AnnotationMirror,java.lang.StringBuilder)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"toStringSimple(AnnotationMirrorSet)","u":"toStringSimple(org.checkerframework.javacutil.AnnotationMirrorSet)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"toStringTruncated(Tree, int)","u":"toStringTruncated(com.sun.source.tree.Tree,int)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"A2F","l":"toTUConstraint()"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"AFConstraint","l":"toTUConstraint()"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"F2A","l":"toTUConstraint()"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"FIsA","l":"toTUConstraint()"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"toUnsignedInt(char)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"toUnsignedLong(char)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"toUnsignedShort(byte)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"toUnsignedShort(char)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"toUnsignedString(byte)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"toUnsignedString(byte, int)","u":"toUnsignedString(byte,int)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"toUnsignedString(short)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"toUnsignedString(short, int)","u":"toUnsignedString(short,int)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"transfer"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"transferFunction"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferInput","l":"TransferInput(Node, Analysis<V, S, ?>, S)","u":"%3Cinit%3E(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.Analysis,S)"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferInput","l":"TransferInput(Node, Analysis<V, S, ?>, S, S)","u":"%3Cinit%3E(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.Analysis,S,S)"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferInput","l":"TransferInput(Node, Analysis<V, S, ?>, TransferResult<V, S>)","u":"%3Cinit%3E(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.Analysis,org.checkerframework.dataflow.analysis.TransferResult)"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferInput","l":"TransferInput(TransferInput<V, S>)","u":"%3Cinit%3E(org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.analysis","c":"TransferResult","l":"TransferResult(V, Map<TypeMirror, S>)","u":"%3Cinit%3E(V,java.util.Map)"},{"p":"org.checkerframework.checker.index","c":"OffsetDependentTypesHelper","l":"transform(JavaExpression)","u":"transform(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesHelper","l":"transform(JavaExpression)","u":"transform(org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"translateAssertWithAssertionsEnabled(AssertTree)","u":"translateAssertWithAssertionsEnabled(com.sun.source.tree.AssertTree)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"translateAssignment(Tree, Node, ExpressionTree)","u":"translateAssignment(com.sun.source.tree.Tree,org.checkerframework.dataflow.cfg.node.Node,com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"translateAssignment(Tree, Node, Node)","u":"translateAssignment(com.sun.source.tree.Tree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterAnnotatedTypeFactory","l":"translations"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayAccessNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayCreationNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayTypeNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssertionErrorNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AssignmentNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"BinaryOperationNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"CaseNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ClassDeclarationNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ClassNameNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ExplicitThisNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ExpressionStatementNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FieldAccessNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"FunctionalInterfaceNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"InstanceOfNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LambdaResultExpressionNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"LocalVariableNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MarkerNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodAccessNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodInvocationNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NarrowingConversionNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NullChkNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ObjectCreationNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"PackageNameNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ParameterizedTypeNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"PrimitiveTypeNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringConcatenateAssignmentNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"StringConversionNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SuperNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"SynchronizedNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TernaryExpressionNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ThrowNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TypeCastNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"UnaryOperationNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ValueLiteralNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"VariableDeclarationNode","l":"tree"},{"p":"org.checkerframework.dataflow.cfg.node","c":"WideningConversionNode","l":"tree"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"treeAnnotator"},{"p":"org.checkerframework.framework.type.treeannotator","c":"TreeAnnotator","l":"TreeAnnotator(AnnotatedTypeFactory)","u":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"treeBuilder"},{"p":"org.checkerframework.javacutil.trees","c":"TreeBuilder","l":"TreeBuilder(ProcessingEnvironment)","u":"%3Cinit%3E(javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.common.util.debug","c":"TreeDebug","l":"TreeDebug()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"treeLookup"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"treeLookup"},{"p":"org.checkerframework.dataflow.analysis","c":"AnalysisResult","l":"treeLookupToString(Map<Tree, Set<Node>>)","u":"treeLookupToString(java.util.Map)"},{"p":"org.checkerframework.javacutil.trees","c":"TreeParser","l":"TreeParser(ProcessingEnvironment)","u":"%3Cinit%3E(javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"MethodInvocationNode","l":"treePath"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"treePathCacher"},{"p":"org.checkerframework.framework.util","c":"TreePathCacher","l":"TreePathCacher()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.common.util.debug","c":"TreePrinter","l":"TreePrinter()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"trees"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"trees"},{"p":"org.checkerframework.framework.source","c":"SourceVisitor","l":"trees"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"trees"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"TreeScannerWithDefaults()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.source","c":"SourceVisitor","l":"treesWithSuppressWarnings"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"treeUids"},{"p":"org.checkerframework.checker.formatter","c":"FormatterAnnotatedTypeFactory","l":"treeUtil"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterAnnotatedTypeFactory","l":"treeUtil"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ConditionalJump","l":"trueFlowRule"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ConditionalJump","l":"trueSucc"},{"p":"org.checkerframework.checker.formatter.util","c":"FormatUtil","l":"tryFormatSatisfiability(String)","u":"tryFormatSatisfiability(java.lang.String)"},{"p":"org.checkerframework.checker.i18nformatter.util","c":"I18nFormatUtil","l":"tryFormatSatisfiability(String)","u":"tryFormatSatisfiability(java.lang.String)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"TSubU","l":"TSubU(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror)","u":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"TSubU","l":"TSubU(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror, boolean)","u":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror,boolean)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"TSuperU","l":"TSuperU(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror)","u":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"TSuperU","l":"TSuperU(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror, boolean)","u":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror,boolean)"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"TUConstraint","l":"TUConstraint(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror, boolean)","u":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror,boolean)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"BlockImpl","l":"type"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ExtendedNode","l":"type"},{"p":"org.checkerframework.dataflow.cfg.node","c":"Node","l":"type"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"Constant","l":"type"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpression","l":"type"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileParser.RecordComponentStub","l":"type"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults.DefaultApplierElement","l":"type"},{"p":"org.checkerframework.framework.util.element","c":"MethodTypeParamApplier","l":"type"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"InferredValue.InferredType","l":"type"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"type(Tree)","u":"type(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"type1Kind"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"type2Kind"},{"p":"org.checkerframework.framework.ajava","c":"TypeAnnotationMover","l":"TypeAnnotationMover(Map<String, TypeElement>, Elements)","u":"%3Cinit%3E(java.util.Map,javax.lang.model.util.Elements)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"typeAnnotator"},{"p":"org.checkerframework.framework.type.typeannotator","c":"TypeAnnotator","l":"TypeAnnotator(AnnotatedTypeFactory)","u":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util.typeinference","c":"TypeArgInferenceUtil","l":"TypeArgInferenceUtil()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory.ParameterizedExecutableType","l":"typeArgs"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedDeclaredType","l":"typeArgs"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"typeArgumentInference"},{"p":"org.checkerframework.framework.util","c":"TypeArgumentMapper","l":"TypeArgumentMapper()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TypeCastNode","l":"TypeCastNode(TypeCastTree, Node, TypeMirror, Types)","u":"%3Cinit%3E(com.sun.source.tree.TypeCastTree,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.type.TypeMirror,javax.lang.model.util.Types)"},{"p":"org.checkerframework.framework.test","c":"TypecheckExecutor","l":"TypecheckExecutor()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.test","c":"TypecheckResult","l":"TypecheckResult(TestConfiguration, CompilationResult, List<TestDiagnostic>, List<TestDiagnostic>, List<TestDiagnostic>)","u":"%3Cinit%3E(org.checkerframework.framework.test.TestConfiguration,org.checkerframework.framework.test.CompilationResult,java.util.List,java.util.List,java.util.List)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"typeCheckVectorCopyIntoArgument(MethodInvocationTree, List<? extends AnnotatedTypeMirror>)","u":"typeCheckVectorCopyIntoArgument(com.sun.source.tree.MethodInvocationTree,java.util.List)"},{"p":"org.checkerframework.javacutil","c":"ElementUtils","l":"typeElementKinds()"},{"p":"org.checkerframework.framework.type.typeannotator","c":"TypeAnnotator","l":"typeFactory"},{"p":"org.checkerframework.framework.util.element","c":"MethodTypeParamApplier","l":"typeFactory"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"typeFormatter"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"typeFromClass(Class<?>, Types, Elements)","u":"typeFromClass(java.lang.Class,javax.lang.model.util.Types,javax.lang.model.util.Elements)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"typeFromUse(MethodInvocationTree)","u":"typeFromUse(com.sun.source.tree.MethodInvocationTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"typeFromUse(NewClassTree)","u":"typeFromUse(com.sun.source.tree.NewClassTree)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis","l":"typeHierarchy"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"typeHierarchy"},{"p":"org.checkerframework.framework.util","c":"TypeInformationPresenter","l":"TypeInformationPresenter(AnnotatedTypeFactory)","u":"%3Cinit%3E(org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.qual","c":"DefaultFor","l":"typeKinds()"},{"p":"org.checkerframework.framework.qual","c":"UpperBoundFor","l":"typeKinds()"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"typeOf(Tree)","u":"typeOf(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.common.util.debug","c":"TypeOutputtingChecker","l":"TypeOutputtingChecker()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.util.element","c":"MethodTypeParamApplier","l":"typeParam"},{"p":"org.checkerframework.javacutil","c":"TypeAnnotationUtils","l":"typeParameterBoundTAPosition(int, int, int)","u":"typeParameterBoundTAPosition(int,int,int)"},{"p":"org.checkerframework.javacutil","c":"TypeAnnotationUtils","l":"typeParameterTAPosition(int, int)","u":"typeParameterTAPosition(int,int)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"typeProcess(TypeElement, TreePath)","u":"typeProcess(javax.lang.model.element.TypeElement,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.common.util.debug","c":"SignaturePrinter","l":"typeProcess(TypeElement, TreePath)","u":"typeProcess(javax.lang.model.element.TypeElement,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.common.util.debug","c":"TreePrinter","l":"typeProcess(TypeElement, TreePath)","u":"typeProcess(javax.lang.model.element.TypeElement,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.framework.source","c":"AggregateChecker","l":"typeProcess(TypeElement, TreePath)","u":"typeProcess(javax.lang.model.element.TypeElement,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"typeProcess(TypeElement, TreePath)","u":"typeProcess(javax.lang.model.element.TypeElement,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.javacutil","c":"AbstractTypeProcessor","l":"typeProcess(TypeElement, TreePath)","u":"typeProcess(javax.lang.model.element.TypeElement,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.javacutil","c":"BasicTypeProcessor","l":"typeProcess(TypeElement, TreePath)","u":"typeProcess(javax.lang.model.element.TypeElement,com.sun.source.util.TreePath)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsChecker","l":"typeProcessingOver()"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakChecker","l":"typeProcessingOver()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"typeProcessingOver()"},{"p":"org.checkerframework.common.util.count","c":"AnnotationStatistics","l":"typeProcessingOver()"},{"p":"org.checkerframework.common.util.count","c":"JavaCodeStatistics","l":"typeProcessingOver()"},{"p":"org.checkerframework.common.value","c":"ValueChecker","l":"typeProcessingOver()"},{"p":"org.checkerframework.dataflow.cfg","c":"CFGProcessor","l":"typeProcessingOver()"},{"p":"org.checkerframework.framework.source","c":"AggregateChecker","l":"typeProcessingOver()"},{"p":"org.checkerframework.javacutil","c":"AbstractTypeProcessor","l":"typeProcessingOver()"},{"p":"org.checkerframework.common.util.debug","c":"SignaturePrinter","l":"typeProcessingStart()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"typeProcessingStart()"},{"p":"org.checkerframework.javacutil","c":"AbstractTypeProcessor","l":"typeProcessingStart()"},{"p":"org.checkerframework.checker.formatter.qual","c":"ConversionCategory","l":"types"},{"p":"org.checkerframework.checker.i18nformatter.qual","c":"I18nConversionCategory","l":"types"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"types"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ArrayTypeNode","l":"types"},{"p":"org.checkerframework.dataflow.cfg.node","c":"InstanceOfNode","l":"types"},{"p":"org.checkerframework.dataflow.cfg.node","c":"PrimitiveTypeNode","l":"types"},{"p":"org.checkerframework.dataflow.cfg.node","c":"TypeCastNode","l":"types"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractAnalysis","l":"types"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"types"},{"p":"org.checkerframework.framework.source","c":"SourceVisitor","l":"types"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"types"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"TargetConstraints.Equalities","l":"types"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"TargetConstraints.Subtypes","l":"types"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"TargetConstraints.Supertypes","l":"types"},{"p":"org.checkerframework.framework.qual","c":"DefaultFor","l":"types()"},{"p":"org.checkerframework.framework.qual","c":"UpperBoundFor","l":"types()"},{"p":"org.checkerframework.javacutil","c":"TypeSystemError","l":"TypeSystemError(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.checkerframework.javacutil","c":"TypeSystemError","l":"TypeSystemError(String, Object...)","u":"%3Cinit%3E(java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"typeTreeKinds()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"typeValidator"},{"p":"org.checkerframework.framework.qual","c":"TypeKind","l":"TYPEVAR"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"TYPEVAR_ARRAY"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"TYPEVAR_DECLARED"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"TYPEVAR_EXECUTABLE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"TYPEVAR_INTERSECTION"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"TYPEVAR_NONE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"TYPEVAR_NULL"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"TYPEVAR_PRIMITIVE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"TYPEVAR_TYPEVAR"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"TYPEVAR_UNION"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"TYPEVAR_WILDCARD"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"TUConstraint","l":"typeVariable"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"typeVariablesFromUse(AnnotatedTypeMirror.AnnotatedDeclaredType, TypeElement)","u":"typeVariablesFromUse(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory","l":"typeVariablesFromUse(AnnotatedTypeMirror.AnnotatedDeclaredType, TypeElement)","u":"typeVariablesFromUse(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,javax.lang.model.element.TypeElement)"},{"p":"org.checkerframework.framework.type","c":"TypeVariableSubstitutor","l":"TypeVariableSubstitutor()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"typeVarSubstitutor"},{"p":"org.checkerframework.common.util","c":"TypeVisualizer","l":"TypeVisualizer()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"UBQualifier()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"uiAnonClasses"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallTransfer","l":"uid"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"uid"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"uid"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectTypeFactory","l":"uiLambdas"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"TUConstraint","l":"uIsArg"},{"p":"org.checkerframework.framework.util","c":"JavaExpressionParseUtil","l":"UNANCHORED_PARAMETER_PATTERN"},{"p":"org.checkerframework.javacutil","c":"TypeAnnotationUtils","l":"unannotatedType(TypeMirror)","u":"unannotatedType(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.common.value.util","c":"ByteMath","l":"unaryMinus()"},{"p":"org.checkerframework.common.value.util","c":"DoubleMath","l":"unaryMinus()"},{"p":"org.checkerframework.common.value.util","c":"FloatMath","l":"unaryMinus()"},{"p":"org.checkerframework.common.value.util","c":"IntegerMath","l":"unaryMinus()"},{"p":"org.checkerframework.common.value.util","c":"LongMath","l":"unaryMinus()"},{"p":"org.checkerframework.common.value.util","c":"NumberMath","l":"unaryMinus()"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"unaryMinus()"},{"p":"org.checkerframework.common.value.util","c":"ShortMath","l":"unaryMinus()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"unaryNumericPromotion(Node)","u":"unaryNumericPromotion(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.expression","c":"UnaryOperation","l":"UnaryOperation(TypeMirror, Tree.Kind, JavaExpression)","u":"%3Cinit%3E(javax.lang.model.type.TypeMirror,com.sun.source.tree.Tree.Kind,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"UnaryOperation","l":"UnaryOperation(UnaryOperationNode, JavaExpression)","u":"%3Cinit%3E(org.checkerframework.dataflow.cfg.node.UnaryOperationNode,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"UnaryOperationNode","l":"UnaryOperationNode(UnaryTree, Node)","u":"%3Cinit%3E(com.sun.source.tree.UnaryTree,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.common.value.util","c":"ByteMath","l":"unaryPlus()"},{"p":"org.checkerframework.common.value.util","c":"DoubleMath","l":"unaryPlus()"},{"p":"org.checkerframework.common.value.util","c":"FloatMath","l":"unaryPlus()"},{"p":"org.checkerframework.common.value.util","c":"IntegerMath","l":"unaryPlus()"},{"p":"org.checkerframework.common.value.util","c":"LongMath","l":"unaryPlus()"},{"p":"org.checkerframework.common.value.util","c":"NumberMath","l":"unaryPlus()"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"unaryPlus()"},{"p":"org.checkerframework.common.value.util","c":"ShortMath","l":"unaryPlus()"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults.BoundType","l":"UNBOUNDED"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"unbox(Node)","u":"unbox(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"uncheckedExceptionTypes"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ExtendedNode.ExtendedNodeType","l":"UNCONDITIONAL_JUMP"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"UNDER_INITALIZATION"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"underInitializationValueElement"},{"p":"org.checkerframework.dataflow.cfg","c":"ControlFlowGraph","l":"underlyingAST"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST","l":"UnderlyingAST(UnderlyingAST.Kind)","u":"%3Cinit%3E(org.checkerframework.dataflow.cfg.UnderlyingAST.Kind)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue","l":"underlyingType"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror","l":"underlyingType"},{"p":"org.checkerframework.framework.qual","c":"TypeKind","l":"UNION"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"UNION_ARRAY"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"UNION_DECLARED"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"UNION_EXECUTABLE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"UNION_INTERSECTION"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"UNION_NONE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"UNION_NULL"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"UNION_PRIMITIVE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"UNION_TYPEVAR"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"UNION_UNION"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"UNION_WILDCARD"},{"p":"org.checkerframework.checker.formatter.qual","c":"ConversionCategory","l":"union(ConversionCategory, ConversionCategory)","u":"union(org.checkerframework.checker.formatter.qual.ConversionCategory,org.checkerframework.checker.formatter.qual.ConversionCategory)"},{"p":"org.checkerframework.checker.i18nformatter.qual","c":"I18nConversionCategory","l":"union(I18nConversionCategory, I18nConversionCategory)","u":"union(org.checkerframework.checker.i18nformatter.qual.I18nConversionCategory,org.checkerframework.checker.i18nformatter.qual.I18nConversionCategory)"},{"p":"org.checkerframework.javacutil","c":"SystemUtil","l":"union(List<T>, List<T>)","u":"union(java.util.List,java.util.List)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"union(Range)","u":"union(org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.common.aliasing","c":"AliasingAnnotatedTypeFactory","l":"UNIQUE"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallTransfer","l":"uniqueName(String)","u":"uniqueName(java.lang.String)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"uniqueName(String)","u":"uniqueName(java.lang.String)"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory","l":"UnitsAnnotatedTypeFactory(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFormatter","l":"UnitsAnnotatedTypeFormatter(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotationClassLoader","l":"UnitsAnnotationClassLoader(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFormatter.UnitsAnnotationFormatter","l":"UnitsAnnotationFormatter(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.units","c":"UnitsChecker","l":"UnitsChecker()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFormatter.UnitsFormattingVisitor","l":"UnitsFormattingVisitor(BaseTypeChecker, AnnotationFormatter, boolean, boolean)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker,org.checkerframework.framework.util.AnnotationFormatter,boolean,boolean)"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory.UnitsQualifierHierarchy","l":"UnitsQualifierHierarchy()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.units","c":"UnitsAnnotatedTypeFactory.UnitsQualifierKindHierarchy","l":"UnitsQualifierKindHierarchy(Collection<Class<? extends Annotation>>, Elements)","u":"%3Cinit%3E(java.util.Collection,javax.lang.model.util.Elements)"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsDefault","l":"UnitsRelationsDefault()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.units","c":"UnitsRelationsTools","l":"UnitsRelationsTools()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.units.util","c":"UnitsTools","l":"UnitsTools()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.units","c":"UnitsVisitor","l":"UnitsVisitor(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundAnnotatedTypeFactory","l":"UNKNOWN"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"UNKNOWN"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenAnnotatedTypeFactory","l":"UNKNOWN"},{"p":"org.checkerframework.checker.index.searchindex","c":"SearchIndexAnnotatedTypeFactory","l":"UNKNOWN"},{"p":"org.checkerframework.checker.index.substringindex","c":"SubstringIndexAnnotatedTypeFactory","l":"UNKNOWN"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.UpperBoundUnknownQualifier","l":"UNKNOWN"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"UNKNOWN"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"UNKNOWN_INITIALIZATION"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"UNKNOWN_NAME"},{"p":"org.checkerframework.dataflow.expression","c":"Unknown","l":"Unknown(Node)","u":"%3Cinit%3E(org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.dataflow.expression","c":"Unknown","l":"Unknown(Tree)","u":"%3Cinit%3E(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.expression","c":"Unknown","l":"Unknown(TypeMirror)","u":"%3Cinit%3E(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.dataflow.expression","c":"Unknown","l":"Unknown(TypeMirror, String)","u":"%3Cinit%3E(javax.lang.model.type.TypeMirror,java.lang.String)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterAnnotatedTypeFactory","l":"UNKNOWNFORMAT"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"unknownInitializationValueElement"},{"p":"org.checkerframework.checker.nullness","c":"KeyForAnnotatedTypeFactory","l":"UNKNOWNKEYFOR"},{"p":"org.checkerframework.checker.regex","c":"RegexAnnotatedTypeFactory","l":"UNKNOWNREGEX"},{"p":"org.checkerframework.checker.regex","c":"RegexAnnotatedTypeFactory","l":"UNKNOWNREGEX_SET"},{"p":"org.checkerframework.javacutil","c":"TypeAnnotationUtils","l":"unknownTAPosition()"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"UNKNOWNVAL"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorSet","l":"unmodifiableSet(Collection<? extends AnnotationMirror>)","u":"unmodifiableSet(java.util.Collection)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"UNNEEDED_SUPPRESSION_KEY"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesError","l":"unparse(String)","u":"unparse(java.lang.String)"},{"p":"org.checkerframework.framework.util","c":"CheckerMain","l":"unshorthandProcessorNames(String, List<String>, boolean)","u":"unshorthandProcessorNames(java.lang.String,java.util.List,boolean)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"UnsignedRightShiftNode","l":"UnsignedRightShiftNode(BinaryTree, Node, Node)","u":"%3Cinit%3E(com.sun.source.tree.BinaryTree,org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.common.value.util","c":"ByteMath","l":"unsignedShiftRight(Number)","u":"unsignedShiftRight(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"DoubleMath","l":"unsignedShiftRight(Number)","u":"unsignedShiftRight(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"FloatMath","l":"unsignedShiftRight(Number)","u":"unsignedShiftRight(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"IntegerMath","l":"unsignedShiftRight(Number)","u":"unsignedShiftRight(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"LongMath","l":"unsignedShiftRight(Number)","u":"unsignedShiftRight(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"NumberMath","l":"unsignedShiftRight(Number)","u":"unsignedShiftRight(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"ShortMath","l":"unsignedShiftRight(Number)","u":"unsignedShiftRight(java.lang.Number)"},{"p":"org.checkerframework.common.value.util","c":"Range","l":"unsignedShiftRight(Range)","u":"unsignedShiftRight(org.checkerframework.common.value.util.Range)"},{"p":"org.checkerframework.checker.formatter.qual","c":"ConversionCategory","l":"UNUSED"},{"p":"org.checkerframework.checker.i18nformatter.qual","c":"I18nConversionCategory","l":"UNUSED"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory","l":"unusedWhenElement"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"unusedWhenElement"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"updateForArrayAssignment(ArrayAccess, V)","u":"updateForArrayAssignment(org.checkerframework.dataflow.expression.ArrayAccess,V)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"updateForAssignment(Node, V)","u":"updateForAssignment(org.checkerframework.dataflow.cfg.node.Node,V)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"updateForFieldAccessAssignment(FieldAccess, V)","u":"updateForFieldAccessAssignment(org.checkerframework.dataflow.expression.FieldAccess,V)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"updateForLocalVariableAssignment(LocalVariable, V)","u":"updateForLocalVariableAssignment(org.checkerframework.dataflow.expression.LocalVariable,V)"},{"p":"org.checkerframework.checker.lock","c":"LockStore","l":"updateForMethodCall(MethodInvocationNode, AnnotatedTypeFactory, CFValue)","u":"updateForMethodCall(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.framework.type.AnnotatedTypeFactory,org.checkerframework.framework.flow.CFValue)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationStore","l":"updateForMethodCall(MethodInvocationNode, AnnotatedTypeFactory, V)","u":"updateForMethodCall(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.framework.type.AnnotatedTypeFactory,V)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"updateForMethodCall(MethodInvocationNode, AnnotatedTypeFactory, V)","u":"updateForMethodCall(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.framework.type.AnnotatedTypeFactory,V)"},{"p":"org.checkerframework.javacutil","c":"AnnotationUtils","l":"updateMappingToImmutableSet(Map<T, AnnotationMirrorSet>, T, AnnotationMirrorSet)","u":"updateMappingToImmutableSet(java.util.Map,T,org.checkerframework.javacutil.AnnotationMirrorSet)"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"updateMappingToMutableSet(Map<T, AnnotationMirrorSet>, T, AnnotationMirror)","u":"updateMappingToMutableSet(java.util.Map,T,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"updateNodeValues(Node, TransferResult<V, S>)","u":"updateNodeValues(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.TransferResult)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallTransfer","l":"updateStoreWithTempVar(TransferResult<CFValue, CFStore>, Node)","u":"updateStoreWithTempVar(org.checkerframework.dataflow.analysis.TransferResult,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakTransfer","l":"updateStoreWithTempVar(TransferResult<CFValue, CFStore>, Node)","u":"updateStoreWithTempVar(org.checkerframework.dataflow.analysis.TransferResult,org.checkerframework.dataflow.cfg.node.Node)"},{"p":"org.checkerframework.framework.util.typeinference.solver","c":"EqualitiesSolver","l":"updateTargetsWithPartiallyInferredType(TargetConstraints.Equalities, ConstraintMap, AnnotatedTypeFactory)","u":"updateTargetsWithPartiallyInferredType(org.checkerframework.framework.util.typeinference.solver.TargetConstraints.Equalities,org.checkerframework.framework.util.typeinference.solver.ConstraintMap,org.checkerframework.framework.type.AnnotatedTypeFactory)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults.BoundType","l":"UPPER"},{"p":"org.checkerframework.framework.qual","c":"TypeUseLocation","l":"UPPER_BOUND"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"upperBound(TypeMirror)","u":"upperBound(javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"UpperBoundAnnotatedTypeFactory(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundChecker","l":"UpperBoundChecker()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundChecker","l":"upperBoundLiteralValueElement"},{"p":"org.checkerframework.framework.util.element","c":"ClassTypeParamApplier","l":"upperBoundTarget()"},{"p":"org.checkerframework.framework.util.element","c":"MethodTypeParamApplier","l":"upperBoundTarget()"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundTransfer","l":"UpperBoundTransfer(CFAnalysis)","u":"%3Cinit%3E(org.checkerframework.framework.flow.CFAnalysis)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory.UpperBoundTreeAnnotator","l":"UpperBoundTreeAnnotator(UpperBoundAnnotatedTypeFactory)","u":"%3Cinit%3E(org.checkerframework.checker.index.upperbound.UpperBoundAnnotatedTypeFactory)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundVisitor","l":"UpperBoundVisitor(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"upstreamCheckerNames"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsChecker","l":"USE_VALUE_CHECKER"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"useAllcheckersPrefix"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"useConservativeDefault(String)","u":"useConservativeDefault(java.lang.String)"},{"p":"org.checkerframework.javacutil","c":"UserError","l":"UserError(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.checkerframework.javacutil","c":"UserError","l":"UserError(String, Object...)","u":"%3Cinit%3E(java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"usesSequentialSemantics()"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"validate(boolean)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue","l":"validateSet(AnnotationMirrorSet, TypeMirror, QualifierHierarchy)","u":"validateSet(org.checkerframework.javacutil.AnnotationMirrorSet,javax.lang.model.type.TypeMirror,org.checkerframework.framework.type.QualifierHierarchy)"},{"p":"org.checkerframework.framework.test","c":"TestConfigurationBuilder","l":"validateThenBuild(boolean)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallVisitor","l":"validateType(Tree, AnnotatedTypeMirror)","u":"validateType(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"validateType(Tree, AnnotatedTypeMirror)","u":"validateType(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.value","c":"ValueVisitor","l":"validateType(Tree, AnnotatedTypeMirror)","u":"validateType(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.interning","c":"InterningVisitor","l":"validateTypeOf(Tree)","u":"validateTypeOf(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"validateTypeOf(Tree)","u":"validateTypeOf(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults","l":"validLocationsForUncheckedCodeDefaults()"},{"p":"org.checkerframework.framework.util.element","c":"ClassTypeParamApplier","l":"validTargets()"},{"p":"org.checkerframework.framework.util.element","c":"MethodApplier","l":"validTargets()"},{"p":"org.checkerframework.framework.util.element","c":"MethodTypeParamApplier","l":"validTargets()"},{"p":"org.checkerframework.framework.util.element","c":"ParamApplier","l":"validTargets()"},{"p":"org.checkerframework.framework.util.element","c":"SuperTypeApplier","l":"validTargets()"},{"p":"org.checkerframework.framework.util.element","c":"TypeDeclarationApplier","l":"validTargets()"},{"p":"org.checkerframework.framework.util.element","c":"VariableApplier","l":"validTargets()"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"Constant","l":"value"},{"p":"org.checkerframework.dataflow.expression","c":"ValueLiteral","l":"value"},{"p":"org.checkerframework.checker.builder.qual","c":"CalledMethods","l":"value()"},{"p":"org.checkerframework.checker.builder.qual","c":"NotCalledMethods","l":"value()"},{"p":"org.checkerframework.checker.calledmethods.qual","c":"CalledMethods","l":"value()"},{"p":"org.checkerframework.checker.calledmethods.qual","c":"CalledMethodsPredicate","l":"value()"},{"p":"org.checkerframework.checker.calledmethods.qual","c":"EnsuresCalledMethods.List","l":"value()"},{"p":"org.checkerframework.checker.calledmethods.qual","c":"EnsuresCalledMethods","l":"value()"},{"p":"org.checkerframework.checker.calledmethods.qual","c":"EnsuresCalledMethodsIf.List","l":"value()"},{"p":"org.checkerframework.checker.calledmethods.qual","c":"EnsuresCalledMethodsVarArgs","l":"value()"},{"p":"org.checkerframework.checker.calledmethods.qual","c":"RequiresCalledMethods.List","l":"value()"},{"p":"org.checkerframework.checker.calledmethods.qual","c":"RequiresCalledMethods","l":"value()"},{"p":"org.checkerframework.checker.fenum.qual","c":"Fenum","l":"value()"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil.Result","l":"value()"},{"p":"org.checkerframework.checker.formatter.qual","c":"Format","l":"value()"},{"p":"org.checkerframework.checker.formatter.qual","c":"InvalidFormat","l":"value()"},{"p":"org.checkerframework.checker.i18nformatter.qual","c":"I18nFormat","l":"value()"},{"p":"org.checkerframework.checker.i18nformatter.qual","c":"I18nFormatFor","l":"value()"},{"p":"org.checkerframework.checker.i18nformatter.qual","c":"I18nInvalidFormat","l":"value()"},{"p":"org.checkerframework.checker.index.qual","c":"EnsuresLTLengthOf.List","l":"value()"},{"p":"org.checkerframework.checker.index.qual","c":"EnsuresLTLengthOf","l":"value()"},{"p":"org.checkerframework.checker.index.qual","c":"EnsuresLTLengthOfIf.List","l":"value()"},{"p":"org.checkerframework.checker.index.qual","c":"IndexFor","l":"value()"},{"p":"org.checkerframework.checker.index.qual","c":"IndexOrHigh","l":"value()"},{"p":"org.checkerframework.checker.index.qual","c":"IndexOrLow","l":"value()"},{"p":"org.checkerframework.checker.index.qual","c":"LengthOf","l":"value()"},{"p":"org.checkerframework.checker.index.qual","c":"LessThan","l":"value()"},{"p":"org.checkerframework.checker.index.qual","c":"LTEqLengthOf","l":"value()"},{"p":"org.checkerframework.checker.index.qual","c":"LTLengthOf","l":"value()"},{"p":"org.checkerframework.checker.index.qual","c":"LTOMLengthOf","l":"value()"},{"p":"org.checkerframework.checker.index.qual","c":"NegativeIndexFor","l":"value()"},{"p":"org.checkerframework.checker.index.qual","c":"SameLen","l":"value()"},{"p":"org.checkerframework.checker.index.qual","c":"SearchIndexFor","l":"value()"},{"p":"org.checkerframework.checker.index.qual","c":"SubstringIndexFor","l":"value()"},{"p":"org.checkerframework.checker.index.qual","c":"UpperBoundLiteral","l":"value()"},{"p":"org.checkerframework.checker.initialization.qual","c":"UnderInitialization","l":"value()"},{"p":"org.checkerframework.checker.initialization.qual","c":"UnknownInitialization","l":"value()"},{"p":"org.checkerframework.checker.lock.qual","c":"EnsuresLockHeld.List","l":"value()"},{"p":"org.checkerframework.checker.lock.qual","c":"EnsuresLockHeld","l":"value()"},{"p":"org.checkerframework.checker.lock.qual","c":"EnsuresLockHeldIf.List","l":"value()"},{"p":"org.checkerframework.checker.lock.qual","c":"GuardedBy","l":"value()"},{"p":"org.checkerframework.checker.lock.qual","c":"GuardSatisfied","l":"value()"},{"p":"org.checkerframework.checker.lock.qual","c":"Holding","l":"value()"},{"p":"org.checkerframework.checker.mustcall.qual","c":"CreatesMustCallFor.List","l":"value()"},{"p":"org.checkerframework.checker.mustcall.qual","c":"CreatesMustCallFor","l":"value()"},{"p":"org.checkerframework.checker.mustcall.qual","c":"InheritableMustCall","l":"value()"},{"p":"org.checkerframework.checker.mustcall.qual","c":"MustCall","l":"value()"},{"p":"org.checkerframework.checker.nullness.qual","c":"AssertNonNullIfNonNull","l":"value()"},{"p":"org.checkerframework.checker.nullness.qual","c":"EnsuresKeyFor.List","l":"value()"},{"p":"org.checkerframework.checker.nullness.qual","c":"EnsuresKeyFor","l":"value()"},{"p":"org.checkerframework.checker.nullness.qual","c":"EnsuresKeyForIf.List","l":"value()"},{"p":"org.checkerframework.checker.nullness.qual","c":"EnsuresNonNull.List","l":"value()"},{"p":"org.checkerframework.checker.nullness.qual","c":"EnsuresNonNull","l":"value()"},{"p":"org.checkerframework.checker.nullness.qual","c":"EnsuresNonNullIf.List","l":"value()"},{"p":"org.checkerframework.checker.nullness.qual","c":"KeyFor","l":"value()"},{"p":"org.checkerframework.checker.nullness.qual","c":"RequiresNonNull.List","l":"value()"},{"p":"org.checkerframework.checker.nullness.qual","c":"RequiresNonNull","l":"value()"},{"p":"org.checkerframework.checker.regex.qual","c":"PartialRegex","l":"value()"},{"p":"org.checkerframework.checker.regex.qual","c":"Regex","l":"value()"},{"p":"org.checkerframework.checker.units.qual","c":"A","l":"value()"},{"p":"org.checkerframework.checker.units.qual","c":"cd","l":"value()"},{"p":"org.checkerframework.checker.units.qual","c":"g","l":"value()"},{"p":"org.checkerframework.checker.units.qual","c":"K","l":"value()"},{"p":"org.checkerframework.checker.units.qual","c":"m","l":"value()"},{"p":"org.checkerframework.checker.units.qual","c":"m2","l":"value()"},{"p":"org.checkerframework.checker.units.qual","c":"mol","l":"value()"},{"p":"org.checkerframework.checker.units.qual","c":"mPERs","l":"value()"},{"p":"org.checkerframework.checker.units.qual","c":"mPERs2","l":"value()"},{"p":"org.checkerframework.checker.units.qual","c":"N","l":"value()"},{"p":"org.checkerframework.checker.units.qual","c":"radians","l":"value()"},{"p":"org.checkerframework.checker.units.qual","c":"s","l":"value()"},{"p":"org.checkerframework.checker.units.qual","c":"UnitsRelations","l":"value()"},{"p":"org.checkerframework.common.initializedfields.qual","c":"EnsuresInitializedFields.List","l":"value()"},{"p":"org.checkerframework.common.initializedfields.qual","c":"EnsuresInitializedFields","l":"value()"},{"p":"org.checkerframework.common.initializedfields.qual","c":"InitializedFields","l":"value()"},{"p":"org.checkerframework.common.reflection.qual","c":"ClassBound","l":"value()"},{"p":"org.checkerframework.common.reflection.qual","c":"ClassVal","l":"value()"},{"p":"org.checkerframework.common.value.qual","c":"ArrayLen","l":"value()"},{"p":"org.checkerframework.common.value.qual","c":"BoolVal","l":"value()"},{"p":"org.checkerframework.common.value.qual","c":"DoesNotMatchRegex","l":"value()"},{"p":"org.checkerframework.common.value.qual","c":"DoubleVal","l":"value()"},{"p":"org.checkerframework.common.value.qual","c":"EnsuresMinLenIf.List","l":"value()"},{"p":"org.checkerframework.common.value.qual","c":"EnumVal","l":"value()"},{"p":"org.checkerframework.common.value.qual","c":"IntVal","l":"value()"},{"p":"org.checkerframework.common.value.qual","c":"MatchesRegex","l":"value()"},{"p":"org.checkerframework.common.value.qual","c":"MinLen","l":"value()"},{"p":"org.checkerframework.common.value.qual","c":"StringVal","l":"value()"},{"p":"org.checkerframework.framework.qual","c":"AnnotatedFor","l":"value()"},{"p":"org.checkerframework.framework.qual","c":"CFComment","l":"value()"},{"p":"org.checkerframework.framework.qual","c":"Covariant","l":"value()"},{"p":"org.checkerframework.framework.qual","c":"DefaultFor","l":"value()"},{"p":"org.checkerframework.framework.qual","c":"DefaultQualifier.List","l":"value()"},{"p":"org.checkerframework.framework.qual","c":"DefaultQualifier","l":"value()"},{"p":"org.checkerframework.framework.qual","c":"DefaultQualifierForUse","l":"value()"},{"p":"org.checkerframework.framework.qual","c":"EnsuresQualifier.List","l":"value()"},{"p":"org.checkerframework.framework.qual","c":"EnsuresQualifierIf.List","l":"value()"},{"p":"org.checkerframework.framework.qual","c":"HasQualifierParameter","l":"value()"},{"p":"org.checkerframework.framework.qual","c":"MonotonicQualifier","l":"value()"},{"p":"org.checkerframework.framework.qual","c":"NoDefaultQualifierForUse","l":"value()"},{"p":"org.checkerframework.framework.qual","c":"NoQualifierParameter","l":"value()"},{"p":"org.checkerframework.framework.qual","c":"PolymorphicQualifier","l":"value()"},{"p":"org.checkerframework.framework.qual","c":"QualifierArgument","l":"value()"},{"p":"org.checkerframework.framework.qual","c":"QualifierForLiterals","l":"value()"},{"p":"org.checkerframework.framework.qual","c":"RelevantJavaTypes","l":"value()"},{"p":"org.checkerframework.framework.qual","c":"RequiresQualifier.List","l":"value()"},{"p":"org.checkerframework.framework.qual","c":"StubFiles","l":"value()"},{"p":"org.checkerframework.framework.qual","c":"SubtypeOf","l":"value()"},{"p":"org.checkerframework.framework.qual","c":"TargetLocations","l":"value()"},{"p":"org.checkerframework.framework.source","c":"SupportedLintOptions","l":"value()"},{"p":"org.checkerframework.framework.source","c":"SupportedOptions","l":"value()"},{"p":"org.checkerframework.framework.source","c":"SuppressWarningsPrefix","l":"value()"},{"p":"org.checkerframework.common.value","c":"ValueAnnotatedTypeFactory","l":"ValueAnnotatedTypeFactory(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.common.value","c":"ValueChecker","l":"ValueChecker()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue.ValueGlb","l":"ValueGlb()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.dataflow.expression","c":"ValueLiteral","l":"ValueLiteral(TypeMirror, Object)","u":"%3Cinit%3E(javax.lang.model.type.TypeMirror,java.lang.Object)"},{"p":"org.checkerframework.dataflow.expression","c":"ValueLiteral","l":"ValueLiteral(TypeMirror, ValueLiteralNode)","u":"%3Cinit%3E(javax.lang.model.type.TypeMirror,org.checkerframework.dataflow.cfg.node.ValueLiteralNode)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"ValueLiteralNode","l":"ValueLiteralNode(LiteralTree)","u":"%3Cinit%3E(com.sun.source.tree.LiteralTree)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue.ValueLub","l":"ValueLub(boolean)","u":"%3Cinit%3E(boolean)"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"valueOf(AnnotatedTypeMirror, AnnotatedTypeMirror)","u":"valueOf(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"valueOf(AtmKind, AtmKind)","u":"valueOf(org.checkerframework.framework.util.AtmKind,org.checkerframework.framework.util.AtmKind)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil.InvocationType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.checkerframework.checker.formatter.qual","c":"ConversionCategory","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil.FormatType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.checkerframework.checker.i18nformatter.qual","c":"I18nConversionCategory","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForPropagator.PropagationDirection","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.checkerframework.checker.units.qual","c":"Prefix","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationChecker.AliasAnalysis","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.checkerframework.dataflow.analysis","c":"Analysis.BeforeOrAfter","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.checkerframework.dataflow.analysis","c":"Analysis.Direction","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.checkerframework.dataflow.analysis","c":"Store.FlowRule","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.checkerframework.dataflow.analysis","c":"Store.Kind","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"Block.BlockType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.checkerframework.dataflow.cfg.block","c":"SpecialBlock.SpecialBlockType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ExtendedNode.ExtendedNodeType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.Kind","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer.VisualizeWhere","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"Constant.Type","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.checkerframework.dataflow.qual","c":"Pure.Kind","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.checkerframework.framework.qual","c":"LiteralKind","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.checkerframework.framework.qual","c":"TypeKind","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.checkerframework.framework.qual","c":"TypeUseLocation","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileUtil.AnnotationFileType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"DiagnosticKind","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory.ScanState","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.checkerframework.framework.util","c":"Contract.Kind","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults.BoundType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.checkerframework.javacutil","c":"TypeKindUtils.PrimitiveConversionKind","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil.InvocationType","l":"values()"},{"p":"org.checkerframework.checker.formatter.qual","c":"ConversionCategory","l":"values()"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil.FormatType","l":"values()"},{"p":"org.checkerframework.checker.i18nformatter.qual","c":"I18nConversionCategory","l":"values()"},{"p":"org.checkerframework.checker.nullness","c":"KeyForPropagator.PropagationDirection","l":"values()"},{"p":"org.checkerframework.checker.units.qual","c":"Prefix","l":"values()"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationChecker.AliasAnalysis","l":"values()"},{"p":"org.checkerframework.dataflow.analysis","c":"Analysis.BeforeOrAfter","l":"values()"},{"p":"org.checkerframework.dataflow.analysis","c":"Analysis.Direction","l":"values()"},{"p":"org.checkerframework.dataflow.analysis","c":"Store.FlowRule","l":"values()"},{"p":"org.checkerframework.dataflow.analysis","c":"Store.Kind","l":"values()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"Block.BlockType","l":"values()"},{"p":"org.checkerframework.dataflow.cfg.block","c":"SpecialBlock.SpecialBlockType","l":"values()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"ExtendedNode.ExtendedNodeType","l":"values()"},{"p":"org.checkerframework.dataflow.cfg","c":"UnderlyingAST.Kind","l":"values()"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer.VisualizeWhere","l":"values()"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"Constant.Type","l":"values()"},{"p":"org.checkerframework.dataflow.qual","c":"Pure.Kind","l":"values()"},{"p":"org.checkerframework.framework.qual","c":"LiteralKind","l":"values()"},{"p":"org.checkerframework.framework.qual","c":"TypeKind","l":"values()"},{"p":"org.checkerframework.framework.qual","c":"TypeUseLocation","l":"values()"},{"p":"org.checkerframework.framework.stub","c":"AnnotationFileUtil.AnnotationFileType","l":"values()"},{"p":"org.checkerframework.framework.test.diagnostics","c":"DiagnosticKind","l":"values()"},{"p":"org.checkerframework.framework.type","c":"GenericAnnotatedTypeFactory.ScanState","l":"values()"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"values()"},{"p":"org.checkerframework.framework.util","c":"Contract.Kind","l":"values()"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults.BoundType","l":"values()"},{"p":"org.checkerframework.javacutil","c":"AnnotationMirrorMap","l":"values()"},{"p":"org.checkerframework.javacutil","c":"TypeKindUtils.PrimitiveConversionKind","l":"values()"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"ValueTransfer(CFAbstractAnalysis<CFValue, CFStore, CFTransfer>)","u":"%3Cinit%3E(org.checkerframework.framework.flow.CFAbstractAnalysis)"},{"p":"org.checkerframework.common.value","c":"ValueVisitor","l":"ValueVisitor(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil.InvocationType","l":"VARARG"},{"p":"org.checkerframework.dataflow.cfg.node","c":"VariableDeclarationNode","l":"VariableDeclarationNode(VariableTree)","u":"%3Cinit%3E(com.sun.source.tree.VariableTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"variableElementFromTree(Tree)","u":"variableElementFromTree(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"variableElementFromUse(ExpressionTree)","u":"variableElementFromUse(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer","l":"verbose"},{"p":"org.checkerframework.framework.util","c":"DefaultQualifierKindHierarchy","l":"verifyHierarchy(Map<DefaultQualifierKindHierarchy.DefaultQualifierKind, Set<DefaultQualifierKindHierarchy.DefaultQualifierKind>>)","u":"verifyHierarchy(java.util.Map)"},{"p":"org.checkerframework.dataflow.expression","c":"ViewpointAdaptJavaExpression","l":"viewpointAdapt(JavaExpression, JavaExpression)","u":"viewpointAdapt(org.checkerframework.dataflow.expression.JavaExpression,org.checkerframework.dataflow.expression.JavaExpression)"},{"p":"org.checkerframework.dataflow.expression","c":"ViewpointAdaptJavaExpression","l":"viewpointAdapt(JavaExpression, JavaExpression, List<JavaExpression>)","u":"viewpointAdapt(org.checkerframework.dataflow.expression.JavaExpression,org.checkerframework.dataflow.expression.JavaExpression,java.util.List)"},{"p":"org.checkerframework.dataflow.expression","c":"ViewpointAdaptJavaExpression","l":"viewpointAdapt(JavaExpression, List<JavaExpression>)","u":"viewpointAdapt(org.checkerframework.dataflow.expression.JavaExpression,java.util.List)"},{"p":"org.checkerframework.framework.type","c":"AbstractViewpointAdapter","l":"viewpointAdaptConstructor(AnnotatedTypeMirror, ExecutableElement, AnnotatedTypeMirror.AnnotatedExecutableType)","u":"viewpointAdaptConstructor(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.ExecutableElement,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.framework.type","c":"ViewpointAdapter","l":"viewpointAdaptConstructor(AnnotatedTypeMirror, ExecutableElement, AnnotatedTypeMirror.AnnotatedExecutableType)","u":"viewpointAdaptConstructor(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.ExecutableElement,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.framework.util","c":"Contract","l":"viewpointAdaptDependentTypeAnnotation(GenericAnnotatedTypeFactory<?, ?, ?, ?>, StringToJavaExpression, Tree)","u":"viewpointAdaptDependentTypeAnnotation(org.checkerframework.framework.type.GenericAnnotatedTypeFactory,org.checkerframework.framework.util.StringToJavaExpression,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeFactory","l":"viewpointAdapter"},{"p":"org.checkerframework.framework.type","c":"AbstractViewpointAdapter","l":"viewpointAdaptMember(AnnotatedTypeMirror, Element, AnnotatedTypeMirror)","u":"viewpointAdaptMember(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"ViewpointAdapter","l":"viewpointAdaptMember(AnnotatedTypeMirror, Element, AnnotatedTypeMirror)","u":"viewpointAdaptMember(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.Element,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AbstractViewpointAdapter","l":"viewpointAdaptMethod(AnnotatedTypeMirror, ExecutableElement, AnnotatedTypeMirror.AnnotatedExecutableType)","u":"viewpointAdaptMethod(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.ExecutableElement,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.framework.type","c":"ViewpointAdapter","l":"viewpointAdaptMethod(AnnotatedTypeMirror, ExecutableElement, AnnotatedTypeMirror.AnnotatedExecutableType)","u":"viewpointAdaptMethod(org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.ExecutableElement,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType)"},{"p":"org.checkerframework.framework.type","c":"AbstractViewpointAdapter","l":"viewpointAdaptTypeParameterBounds(AnnotatedTypeMirror, List<AnnotatedTypeParameterBounds>)","u":"viewpointAdaptTypeParameterBounds(org.checkerframework.framework.type.AnnotatedTypeMirror,java.util.List)"},{"p":"org.checkerframework.framework.type","c":"ViewpointAdapter","l":"viewpointAdaptTypeParameterBounds(AnnotatedTypeMirror, List<AnnotatedTypeParameterBounds>)","u":"viewpointAdaptTypeParameterBounds(org.checkerframework.framework.type.AnnotatedTypeMirror,java.util.List)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeCopier","l":"visit(AnnotatedTypeMirror)","u":"visit(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeCopierWithReplacement.Visitor","l":"visit(AnnotatedTypeMirror)","u":"visit(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter.FormattingVisitor","l":"visit(AnnotatedTypeMirror)","u":"visit(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"visit(AnnotatedTypeMirror)","u":"visit(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeVisitor","l":"visit(AnnotatedTypeMirror)","u":"visit(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeVisitor","l":"visit(AnnotatedTypeMirror)","u":"visit(org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visit(AnnotatedTypeMirror, AnnotatedTypeMirror, PARAM)","u":"visit(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"EquivalentAtmComboScanner","l":"visit(AnnotatedTypeMirror, AnnotatedTypeMirror, PARAM)","u":"visit(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visit(AnnotatedTypeMirror, AnnotatedTypeMirror, Void)","u":"visit(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeCopier","l":"visit(AnnotatedTypeMirror, IdentityHashMap<AnnotatedTypeMirror, AnnotatedTypeMirror>)","u":"visit(org.checkerframework.framework.type.AnnotatedTypeMirror,java.util.IdentityHashMap)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"visit(AnnotatedTypeMirror, P)","u":"visit(org.checkerframework.framework.type.AnnotatedTypeMirror,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeVisitor","l":"visit(AnnotatedTypeMirror, P)","u":"visit(org.checkerframework.framework.type.AnnotatedTypeMirror,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeVisitor","l":"visit(AnnotatedTypeMirror, P)","u":"visit(org.checkerframework.framework.type.AnnotatedTypeMirror,P)"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter.FormattingVisitor","l":"visit(AnnotatedTypeMirror, Set<AnnotatedTypeMirror>)","u":"visit(org.checkerframework.framework.type.AnnotatedTypeMirror,java.util.Set)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(AnnotationDeclaration, Node)","u":"visit(com.github.javaparser.ast.body.AnnotationDeclaration,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(AnnotationDeclaration, Void)","u":"visit(com.github.javaparser.ast.body.AnnotationDeclaration,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(AnnotationMemberDeclaration, Node)","u":"visit(com.github.javaparser.ast.body.AnnotationMemberDeclaration,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(AnnotationMemberDeclaration, Void)","u":"visit(com.github.javaparser.ast.body.AnnotationMemberDeclaration,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ArrayAccessExpr, Node)","u":"visit(com.github.javaparser.ast.expr.ArrayAccessExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ArrayAccessExpr, Void)","u":"visit(com.github.javaparser.ast.expr.ArrayAccessExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ArrayCreationExpr, Node)","u":"visit(com.github.javaparser.ast.expr.ArrayCreationExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ArrayCreationExpr, Void)","u":"visit(com.github.javaparser.ast.expr.ArrayCreationExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ArrayCreationLevel, Node)","u":"visit(com.github.javaparser.ast.ArrayCreationLevel,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ArrayCreationLevel, Void)","u":"visit(com.github.javaparser.ast.ArrayCreationLevel,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ArrayInitializerExpr, Node)","u":"visit(com.github.javaparser.ast.expr.ArrayInitializerExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ArrayInitializerExpr, Void)","u":"visit(com.github.javaparser.ast.expr.ArrayInitializerExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"AnnotationTransferVisitor","l":"visit(ArrayType, AnnotatedTypeMirror)","u":"visit(com.github.javaparser.ast.type.ArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ArrayType, Node)","u":"visit(com.github.javaparser.ast.type.ArrayType,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ArrayType, Void)","u":"visit(com.github.javaparser.ast.type.ArrayType,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(AssertStmt, Node)","u":"visit(com.github.javaparser.ast.stmt.AssertStmt,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(AssertStmt, Void)","u":"visit(com.github.javaparser.ast.stmt.AssertStmt,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(AssignExpr, Node)","u":"visit(com.github.javaparser.ast.expr.AssignExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(AssignExpr, Void)","u":"visit(com.github.javaparser.ast.expr.AssignExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(BinaryExpr, Node)","u":"visit(com.github.javaparser.ast.expr.BinaryExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"JavaParserUtil.StringLiteralConcatenateVisitor","l":"visit(BinaryExpr, Void)","u":"visit(com.github.javaparser.ast.expr.BinaryExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(BinaryExpr, Void)","u":"visit(com.github.javaparser.ast.expr.BinaryExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(BlockComment, Node)","u":"visit(com.github.javaparser.ast.comments.BlockComment,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(BlockComment, Void)","u":"visit(com.github.javaparser.ast.comments.BlockComment,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(BlockStmt, Node)","u":"visit(com.github.javaparser.ast.stmt.BlockStmt,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(BlockStmt, Void)","u":"visit(com.github.javaparser.ast.stmt.BlockStmt,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(BooleanLiteralExpr, Node)","u":"visit(com.github.javaparser.ast.expr.BooleanLiteralExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(BooleanLiteralExpr, Void)","u":"visit(com.github.javaparser.ast.expr.BooleanLiteralExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(BreakStmt, Node)","u":"visit(com.github.javaparser.ast.stmt.BreakStmt,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(BreakStmt, Void)","u":"visit(com.github.javaparser.ast.stmt.BreakStmt,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(CastExpr, Node)","u":"visit(com.github.javaparser.ast.expr.CastExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(CastExpr, Void)","u":"visit(com.github.javaparser.ast.expr.CastExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(CatchClause, Node)","u":"visit(com.github.javaparser.ast.stmt.CatchClause,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(CatchClause, Void)","u":"visit(com.github.javaparser.ast.stmt.CatchClause,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(CharLiteralExpr, Node)","u":"visit(com.github.javaparser.ast.expr.CharLiteralExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(CharLiteralExpr, Void)","u":"visit(com.github.javaparser.ast.expr.CharLiteralExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ClassExpr, Node)","u":"visit(com.github.javaparser.ast.expr.ClassExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ClassExpr, Void)","u":"visit(com.github.javaparser.ast.expr.ClassExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ClassOrInterfaceDeclaration, Node)","u":"visit(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ClassOrInterfaceDeclaration, Void)","u":"visit(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"AnnotationTransferVisitor","l":"visit(ClassOrInterfaceType, AnnotatedTypeMirror)","u":"visit(com.github.javaparser.ast.type.ClassOrInterfaceType,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ClassOrInterfaceType, Node)","u":"visit(com.github.javaparser.ast.type.ClassOrInterfaceType,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ClassOrInterfaceType, Void)","u":"visit(com.github.javaparser.ast.type.ClassOrInterfaceType,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(CompactConstructorDeclaration, Node)","u":"visit(com.github.javaparser.ast.body.CompactConstructorDeclaration,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(CompactConstructorDeclaration, Void)","u":"visit(com.github.javaparser.ast.body.CompactConstructorDeclaration,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(CompilationUnit, Node)","u":"visit(com.github.javaparser.ast.CompilationUnit,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(CompilationUnit, Void)","u":"visit(com.github.javaparser.ast.CompilationUnit,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ConditionalExpr, Node)","u":"visit(com.github.javaparser.ast.expr.ConditionalExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ConditionalExpr, Void)","u":"visit(com.github.javaparser.ast.expr.ConditionalExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ConstructorDeclaration, Node)","u":"visit(com.github.javaparser.ast.body.ConstructorDeclaration,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ConstructorDeclaration, Void)","u":"visit(com.github.javaparser.ast.body.ConstructorDeclaration,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ContinueStmt, Node)","u":"visit(com.github.javaparser.ast.stmt.ContinueStmt,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ContinueStmt, Void)","u":"visit(com.github.javaparser.ast.stmt.ContinueStmt,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(DoStmt, Node)","u":"visit(com.github.javaparser.ast.stmt.DoStmt,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(DoStmt, Void)","u":"visit(com.github.javaparser.ast.stmt.DoStmt,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(DoubleLiteralExpr, Node)","u":"visit(com.github.javaparser.ast.expr.DoubleLiteralExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(DoubleLiteralExpr, Void)","u":"visit(com.github.javaparser.ast.expr.DoubleLiteralExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(EmptyStmt, Node)","u":"visit(com.github.javaparser.ast.stmt.EmptyStmt,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(EmptyStmt, Void)","u":"visit(com.github.javaparser.ast.stmt.EmptyStmt,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(EnclosedExpr, Node)","u":"visit(com.github.javaparser.ast.expr.EnclosedExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(EnclosedExpr, Void)","u":"visit(com.github.javaparser.ast.expr.EnclosedExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(EnumConstantDeclaration, Node)","u":"visit(com.github.javaparser.ast.body.EnumConstantDeclaration,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(EnumConstantDeclaration, Void)","u":"visit(com.github.javaparser.ast.body.EnumConstantDeclaration,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(EnumDeclaration, Node)","u":"visit(com.github.javaparser.ast.body.EnumDeclaration,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(EnumDeclaration, Void)","u":"visit(com.github.javaparser.ast.body.EnumDeclaration,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ExplicitConstructorInvocationStmt, Node)","u":"visit(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ExplicitConstructorInvocationStmt, Void)","u":"visit(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ExpressionStmt, Node)","u":"visit(com.github.javaparser.ast.stmt.ExpressionStmt,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ExpressionStmt, Void)","u":"visit(com.github.javaparser.ast.stmt.ExpressionStmt,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(FieldAccessExpr, Node)","u":"visit(com.github.javaparser.ast.expr.FieldAccessExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(FieldAccessExpr, Void)","u":"visit(com.github.javaparser.ast.expr.FieldAccessExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(FieldDeclaration, Node)","u":"visit(com.github.javaparser.ast.body.FieldDeclaration,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.ajava","c":"TypeAnnotationMover","l":"visit(FieldDeclaration, Void)","u":"visit(com.github.javaparser.ast.body.FieldDeclaration,java.lang.Void)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(FieldDeclaration, Void)","u":"visit(com.github.javaparser.ast.body.FieldDeclaration,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ForEachStmt, Node)","u":"visit(com.github.javaparser.ast.stmt.ForEachStmt,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ForEachStmt, Void)","u":"visit(com.github.javaparser.ast.stmt.ForEachStmt,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ForStmt, Node)","u":"visit(com.github.javaparser.ast.stmt.ForStmt,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ForStmt, Void)","u":"visit(com.github.javaparser.ast.stmt.ForStmt,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(IfStmt, Node)","u":"visit(com.github.javaparser.ast.stmt.IfStmt,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(IfStmt, Void)","u":"visit(com.github.javaparser.ast.stmt.IfStmt,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ImportDeclaration, Node)","u":"visit(com.github.javaparser.ast.ImportDeclaration,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ImportDeclaration, Void)","u":"visit(com.github.javaparser.ast.ImportDeclaration,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(InitializerDeclaration, Node)","u":"visit(com.github.javaparser.ast.body.InitializerDeclaration,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(InitializerDeclaration, Void)","u":"visit(com.github.javaparser.ast.body.InitializerDeclaration,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(InstanceOfExpr, Node)","u":"visit(com.github.javaparser.ast.expr.InstanceOfExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(InstanceOfExpr, Void)","u":"visit(com.github.javaparser.ast.expr.InstanceOfExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(IntegerLiteralExpr, Node)","u":"visit(com.github.javaparser.ast.expr.IntegerLiteralExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(IntegerLiteralExpr, Void)","u":"visit(com.github.javaparser.ast.expr.IntegerLiteralExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(IntersectionType, Node)","u":"visit(com.github.javaparser.ast.type.IntersectionType,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(IntersectionType, Void)","u":"visit(com.github.javaparser.ast.type.IntersectionType,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(JavadocComment, Node)","u":"visit(com.github.javaparser.ast.comments.JavadocComment,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(JavadocComment, Void)","u":"visit(com.github.javaparser.ast.comments.JavadocComment,java.lang.Void)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionVisitor","l":"visit(JavaExpression, P)","u":"visit(org.checkerframework.dataflow.expression.JavaExpression,P)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(LabeledStmt, Node)","u":"visit(com.github.javaparser.ast.stmt.LabeledStmt,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(LabeledStmt, Void)","u":"visit(com.github.javaparser.ast.stmt.LabeledStmt,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(LambdaExpr, Node)","u":"visit(com.github.javaparser.ast.expr.LambdaExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(LambdaExpr, Void)","u":"visit(com.github.javaparser.ast.expr.LambdaExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(LineComment, Node)","u":"visit(com.github.javaparser.ast.comments.LineComment,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(LineComment, Void)","u":"visit(com.github.javaparser.ast.comments.LineComment,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(LocalClassDeclarationStmt, Node)","u":"visit(com.github.javaparser.ast.stmt.LocalClassDeclarationStmt,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(LocalClassDeclarationStmt, Void)","u":"visit(com.github.javaparser.ast.stmt.LocalClassDeclarationStmt,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(LocalRecordDeclarationStmt, Node)","u":"visit(com.github.javaparser.ast.stmt.LocalRecordDeclarationStmt,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(LocalRecordDeclarationStmt, Void)","u":"visit(com.github.javaparser.ast.stmt.LocalRecordDeclarationStmt,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(LongLiteralExpr, Node)","u":"visit(com.github.javaparser.ast.expr.LongLiteralExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(LongLiteralExpr, Void)","u":"visit(com.github.javaparser.ast.expr.LongLiteralExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(MarkerAnnotationExpr, Node)","u":"visit(com.github.javaparser.ast.expr.MarkerAnnotationExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(MarkerAnnotationExpr, Void)","u":"visit(com.github.javaparser.ast.expr.MarkerAnnotationExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(MemberValuePair, Node)","u":"visit(com.github.javaparser.ast.expr.MemberValuePair,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(MemberValuePair, Void)","u":"visit(com.github.javaparser.ast.expr.MemberValuePair,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(MethodCallExpr, Node)","u":"visit(com.github.javaparser.ast.expr.MethodCallExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(MethodCallExpr, Void)","u":"visit(com.github.javaparser.ast.expr.MethodCallExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(MethodDeclaration, Node)","u":"visit(com.github.javaparser.ast.body.MethodDeclaration,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.ajava","c":"TypeAnnotationMover","l":"visit(MethodDeclaration, Void)","u":"visit(com.github.javaparser.ast.body.MethodDeclaration,java.lang.Void)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(MethodDeclaration, Void)","u":"visit(com.github.javaparser.ast.body.MethodDeclaration,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(MethodReferenceExpr, Node)","u":"visit(com.github.javaparser.ast.expr.MethodReferenceExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(MethodReferenceExpr, Void)","u":"visit(com.github.javaparser.ast.expr.MethodReferenceExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(Modifier, Node)","u":"visit(com.github.javaparser.ast.Modifier,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(Modifier, Void)","u":"visit(com.github.javaparser.ast.Modifier,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ModuleDeclaration, Node)","u":"visit(com.github.javaparser.ast.modules.ModuleDeclaration,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ModuleDeclaration, Void)","u":"visit(com.github.javaparser.ast.modules.ModuleDeclaration,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ModuleExportsDirective, Node)","u":"visit(com.github.javaparser.ast.modules.ModuleExportsDirective,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ModuleExportsDirective, Void)","u":"visit(com.github.javaparser.ast.modules.ModuleExportsDirective,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ModuleOpensDirective, Node)","u":"visit(com.github.javaparser.ast.modules.ModuleOpensDirective,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ModuleOpensDirective, Void)","u":"visit(com.github.javaparser.ast.modules.ModuleOpensDirective,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ModuleProvidesDirective, Node)","u":"visit(com.github.javaparser.ast.modules.ModuleProvidesDirective,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ModuleProvidesDirective, Void)","u":"visit(com.github.javaparser.ast.modules.ModuleProvidesDirective,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ModuleRequiresDirective, Node)","u":"visit(com.github.javaparser.ast.modules.ModuleRequiresDirective,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ModuleRequiresDirective, Void)","u":"visit(com.github.javaparser.ast.modules.ModuleRequiresDirective,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ModuleUsesDirective, Node)","u":"visit(com.github.javaparser.ast.modules.ModuleUsesDirective,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ModuleUsesDirective, Void)","u":"visit(com.github.javaparser.ast.modules.ModuleUsesDirective,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(Name, Node)","u":"visit(com.github.javaparser.ast.expr.Name,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(Name, Void)","u":"visit(com.github.javaparser.ast.expr.Name,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(NameExpr, Node)","u":"visit(com.github.javaparser.ast.expr.NameExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(NameExpr, Void)","u":"visit(com.github.javaparser.ast.expr.NameExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(NormalAnnotationExpr, Node)","u":"visit(com.github.javaparser.ast.expr.NormalAnnotationExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(NormalAnnotationExpr, Void)","u":"visit(com.github.javaparser.ast.expr.NormalAnnotationExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(NullLiteralExpr, Node)","u":"visit(com.github.javaparser.ast.expr.NullLiteralExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(NullLiteralExpr, Void)","u":"visit(com.github.javaparser.ast.expr.NullLiteralExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ObjectCreationExpr, Node)","u":"visit(com.github.javaparser.ast.expr.ObjectCreationExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ObjectCreationExpr, Void)","u":"visit(com.github.javaparser.ast.expr.ObjectCreationExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(PackageDeclaration, Node)","u":"visit(com.github.javaparser.ast.PackageDeclaration,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(PackageDeclaration, Void)","u":"visit(com.github.javaparser.ast.PackageDeclaration,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(Parameter, Node)","u":"visit(com.github.javaparser.ast.body.Parameter,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(Parameter, Void)","u":"visit(com.github.javaparser.ast.body.Parameter,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"AnnotationTransferVisitor","l":"visit(PrimitiveType, AnnotatedTypeMirror)","u":"visit(com.github.javaparser.ast.type.PrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(PrimitiveType, Node)","u":"visit(com.github.javaparser.ast.type.PrimitiveType,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(PrimitiveType, Void)","u":"visit(com.github.javaparser.ast.type.PrimitiveType,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ReceiverParameter, Node)","u":"visit(com.github.javaparser.ast.body.ReceiverParameter,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ReceiverParameter, Void)","u":"visit(com.github.javaparser.ast.body.ReceiverParameter,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(RecordDeclaration, Node)","u":"visit(com.github.javaparser.ast.body.RecordDeclaration,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(RecordDeclaration, Void)","u":"visit(com.github.javaparser.ast.body.RecordDeclaration,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ReturnStmt, Node)","u":"visit(com.github.javaparser.ast.stmt.ReturnStmt,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ReturnStmt, Void)","u":"visit(com.github.javaparser.ast.stmt.ReturnStmt,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(SimpleName, Node)","u":"visit(com.github.javaparser.ast.expr.SimpleName,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(SimpleName, Void)","u":"visit(com.github.javaparser.ast.expr.SimpleName,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(SingleMemberAnnotationExpr, Node)","u":"visit(com.github.javaparser.ast.expr.SingleMemberAnnotationExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(SingleMemberAnnotationExpr, Void)","u":"visit(com.github.javaparser.ast.expr.SingleMemberAnnotationExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(StringLiteralExpr, Node)","u":"visit(com.github.javaparser.ast.expr.StringLiteralExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(StringLiteralExpr, Void)","u":"visit(com.github.javaparser.ast.expr.StringLiteralExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(StubUnit, Void)","u":"visit(com.github.javaparser.ast.StubUnit,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(SuperExpr, Node)","u":"visit(com.github.javaparser.ast.expr.SuperExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(SuperExpr, Void)","u":"visit(com.github.javaparser.ast.expr.SuperExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(SwitchEntry, Node)","u":"visit(com.github.javaparser.ast.stmt.SwitchEntry,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(SwitchEntry, Void)","u":"visit(com.github.javaparser.ast.stmt.SwitchEntry,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(SwitchExpr, Node)","u":"visit(com.github.javaparser.ast.expr.SwitchExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(SwitchExpr, Void)","u":"visit(com.github.javaparser.ast.expr.SwitchExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(SwitchStmt, Node)","u":"visit(com.github.javaparser.ast.stmt.SwitchStmt,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(SwitchStmt, Void)","u":"visit(com.github.javaparser.ast.stmt.SwitchStmt,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(SynchronizedStmt, Node)","u":"visit(com.github.javaparser.ast.stmt.SynchronizedStmt,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(SynchronizedStmt, Void)","u":"visit(com.github.javaparser.ast.stmt.SynchronizedStmt,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(TextBlockLiteralExpr, Node)","u":"visit(com.github.javaparser.ast.expr.TextBlockLiteralExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(TextBlockLiteralExpr, Void)","u":"visit(com.github.javaparser.ast.expr.TextBlockLiteralExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ThisExpr, Node)","u":"visit(com.github.javaparser.ast.expr.ThisExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ThisExpr, Void)","u":"visit(com.github.javaparser.ast.expr.ThisExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(ThrowStmt, Node)","u":"visit(com.github.javaparser.ast.stmt.ThrowStmt,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(ThrowStmt, Void)","u":"visit(com.github.javaparser.ast.stmt.ThrowStmt,java.lang.Void)"},{"p":"org.checkerframework.framework.source","c":"SourceVisitor","l":"visit(TreePath)","u":"visit(com.sun.source.util.TreePath)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(TryStmt, Node)","u":"visit(com.github.javaparser.ast.stmt.TryStmt,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(TryStmt, Void)","u":"visit(com.github.javaparser.ast.stmt.TryStmt,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(TypeExpr, Node)","u":"visit(com.github.javaparser.ast.expr.TypeExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(TypeExpr, Void)","u":"visit(com.github.javaparser.ast.expr.TypeExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"AnnotationTransferVisitor","l":"visit(TypeParameter, AnnotatedTypeMirror)","u":"visit(com.github.javaparser.ast.type.TypeParameter,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(TypeParameter, Node)","u":"visit(com.github.javaparser.ast.type.TypeParameter,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(TypeParameter, Void)","u":"visit(com.github.javaparser.ast.type.TypeParameter,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(UnaryExpr, Node)","u":"visit(com.github.javaparser.ast.expr.UnaryExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(UnaryExpr, Void)","u":"visit(com.github.javaparser.ast.expr.UnaryExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(UnionType, Node)","u":"visit(com.github.javaparser.ast.type.UnionType,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(UnionType, Void)","u":"visit(com.github.javaparser.ast.type.UnionType,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(UnknownType, Node)","u":"visit(com.github.javaparser.ast.type.UnknownType,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(UnknownType, Void)","u":"visit(com.github.javaparser.ast.type.UnknownType,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(UnparsableStmt, Node)","u":"visit(com.github.javaparser.ast.stmt.UnparsableStmt,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(UnparsableStmt, Void)","u":"visit(com.github.javaparser.ast.stmt.UnparsableStmt,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(VariableDeclarationExpr, Node)","u":"visit(com.github.javaparser.ast.expr.VariableDeclarationExpr,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(VariableDeclarationExpr, Void)","u":"visit(com.github.javaparser.ast.expr.VariableDeclarationExpr,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(VariableDeclarator, Node)","u":"visit(com.github.javaparser.ast.body.VariableDeclarator,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(VariableDeclarator, Void)","u":"visit(com.github.javaparser.ast.body.VariableDeclarator,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(VarType, Node)","u":"visit(com.github.javaparser.ast.type.VarType,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(VarType, Void)","u":"visit(com.github.javaparser.ast.type.VarType,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(VoidType, Node)","u":"visit(com.github.javaparser.ast.type.VoidType,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(VoidType, Void)","u":"visit(com.github.javaparser.ast.type.VoidType,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(WhileStmt, Node)","u":"visit(com.github.javaparser.ast.stmt.WhileStmt,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(WhileStmt, Void)","u":"visit(com.github.javaparser.ast.stmt.WhileStmt,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(WildcardType, Node)","u":"visit(com.github.javaparser.ast.type.WildcardType,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(WildcardType, Void)","u":"visit(com.github.javaparser.ast.type.WildcardType,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"DoubleJavaParserVisitor","l":"visit(YieldStmt, Node)","u":"visit(com.github.javaparser.ast.stmt.YieldStmt,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"visit(YieldStmt, Void)","u":"visit(com.github.javaparser.ast.stmt.YieldStmt,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitAnnotatedType(AnnotatedTypeTree, Node)","u":"visitAnnotatedType(com.sun.source.tree.AnnotatedTypeTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitAnnotatedType(AnnotatedTypeTree, Void)","u":"visitAnnotatedType(com.sun.source.tree.AnnotatedTypeTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitAnnotatedType(AnnotatedTypeTree, Void)","u":"visitAnnotatedType(com.sun.source.tree.AnnotatedTypeTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitAnnotatedType(AnnotatedTypeTree, Void)","u":"visitAnnotatedType(com.sun.source.tree.AnnotatedTypeTree,java.lang.Void)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"visitAnnotatedType(List<? extends AnnotationTree>, Tree)","u":"visitAnnotatedType(java.util.List,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitAnnotatedType(List<? extends AnnotationTree>, Tree)","u":"visitAnnotatedType(java.util.List,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitAnnotation(AnnotationTree, Node)","u":"visitAnnotation(com.sun.source.tree.AnnotationTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsVisitor","l":"visitAnnotation(AnnotationTree, Void)","u":"visitAnnotation(com.sun.source.tree.AnnotationTree,java.lang.Void)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundVisitor","l":"visitAnnotation(AnnotationTree, Void)","u":"visitAnnotation(com.sun.source.tree.AnnotationTree,java.lang.Void)"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"visitAnnotation(AnnotationTree, Void)","u":"visitAnnotation(com.sun.source.tree.AnnotationTree,java.lang.Void)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallVisitor","l":"visitAnnotation(AnnotationTree, Void)","u":"visitAnnotation(com.sun.source.tree.AnnotationTree,java.lang.Void)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"visitAnnotation(AnnotationTree, Void)","u":"visitAnnotation(com.sun.source.tree.AnnotationTree,java.lang.Void)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationVisitor","l":"visitAnnotation(AnnotationTree, Void)","u":"visitAnnotation(com.sun.source.tree.AnnotationTree,java.lang.Void)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitAnnotation(AnnotationTree, Void)","u":"visitAnnotation(com.sun.source.tree.AnnotationTree,java.lang.Void)"},{"p":"org.checkerframework.common.returnsreceiver","c":"ReturnsReceiverVisitor","l":"visitAnnotation(AnnotationTree, Void)","u":"visitAnnotation(com.sun.source.tree.AnnotationTree,java.lang.Void)"},{"p":"org.checkerframework.common.value","c":"ValueVisitor","l":"visitAnnotation(AnnotationTree, Void)","u":"visitAnnotation(com.sun.source.tree.AnnotationTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitAnnotation(AnnotationTree, Void)","u":"visitAnnotation(com.sun.source.tree.AnnotationTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"ExpectedTreesVisitor","l":"visitAnnotation(AnnotationTree, Void)","u":"visitAnnotation(com.sun.source.tree.AnnotationTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitAnnotation(AnnotationTree, Void)","u":"visitAnnotation(com.sun.source.tree.AnnotationTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitAnonymousClassBody(ClassTree, List<BodyDeclaration<?>>)","u":"visitAnonymousClassBody(com.sun.source.tree.ClassTree,java.util.List)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitArray_Array(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedArrayType, PARAM)","u":"visitArray_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitArray_Array(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedArrayType, PARAM)","u":"visitArray_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"EquivalentAtmComboScanner","l":"visitArray_Array(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedArrayType, PARAM)","u":"visitArray_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitArray_Array(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedArrayType, Void)","u":"visitArray_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitArray_Array(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedArrayType, Void)","u":"visitArray_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"StructuralEqualityComparer","l":"visitArray_Array(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedArrayType, Void)","u":"visitArray_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitArray_Declared(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedDeclaredType, PARAM)","u":"visitArray_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitArray_Declared(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedDeclaredType, PARAM)","u":"visitArray_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitArray_Declared(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedDeclaredType, Void)","u":"visitArray_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitArray_Declared(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedDeclaredType, Void)","u":"visitArray_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitArray_Executable(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedExecutableType, PARAM)","u":"visitArray_Executable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitArray_Executable(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedExecutableType, PARAM)","u":"visitArray_Executable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitArray_Intersection(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedIntersectionType, PARAM)","u":"visitArray_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitArray_Intersection(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedIntersectionType, PARAM)","u":"visitArray_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitArray_Intersection(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedIntersectionType, Void)","u":"visitArray_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitArray_Intersection(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedIntersectionType, Void)","u":"visitArray_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitArray_None(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedNoType, PARAM)","u":"visitArray_None(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitArray_None(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedNoType, PARAM)","u":"visitArray_None(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitArray_Null(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedNullType, PARAM)","u":"visitArray_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitArray_Null(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedNullType, PARAM)","u":"visitArray_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitArray_Null(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedNullType, Void)","u":"visitArray_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitArray_Primitive(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedPrimitiveType, PARAM)","u":"visitArray_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitArray_Primitive(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedPrimitiveType, PARAM)","u":"visitArray_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitArray_Typevar(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedTypeVariable, PARAM)","u":"visitArray_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitArray_Typevar(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedTypeVariable, PARAM)","u":"visitArray_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitArray_Typevar(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedTypeVariable, Void)","u":"visitArray_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitArray_Typevar(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedTypeVariable, Void)","u":"visitArray_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitArray_Union(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedUnionType, PARAM)","u":"visitArray_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitArray_Union(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedUnionType, PARAM)","u":"visitArray_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitArray_Wildcard(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedWildcardType, PARAM)","u":"visitArray_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitArray_Wildcard(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedWildcardType, PARAM)","u":"visitArray_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitArray_Wildcard(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedWildcardType, Void)","u":"visitArray_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitArray_Wildcard(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror.AnnotatedWildcardType, Void)","u":"visitArray_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"DoubleAnnotatedTypeScanner","l":"visitArray(AnnotatedTypeMirror.AnnotatedArrayType, AnnotatedTypeMirror)","u":"visitArray(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeCopier","l":"visitArray(AnnotatedTypeMirror.AnnotatedArrayType, IdentityHashMap<AnnotatedTypeMirror, AnnotatedTypeMirror>)","u":"visitArray(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,java.util.IdentityHashMap)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"visitArray(AnnotatedTypeMirror.AnnotatedArrayType, P)","u":"visitArray(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeVisitor","l":"visitArray(AnnotatedTypeMirror.AnnotatedArrayType, P)","u":"visitArray(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeScanner","l":"visitArray(AnnotatedTypeMirror.AnnotatedArrayType, P)","u":"visitArray(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeVisitor","l":"visitArray(AnnotatedTypeMirror.AnnotatedArrayType, P)","u":"visitArray(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,P)"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter.FormattingVisitor","l":"visitArray(AnnotatedTypeMirror.AnnotatedArrayType, Set<AnnotatedTypeMirror>)","u":"visitArray(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,java.util.Set)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"visitArray(AnnotatedTypeMirror.AnnotatedArrayType, Tree)","u":"visitArray(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionScanner","l":"visitArrayAccess(ArrayAccess, P)","u":"visitArrayAccess(org.checkerframework.dataflow.expression.ArrayAccess,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionVisitor","l":"visitArrayAccess(ArrayAccess, P)","u":"visitArrayAccess(org.checkerframework.dataflow.expression.ArrayAccess,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionConverter","l":"visitArrayAccess(ArrayAccess, Void)","u":"visitArrayAccess(org.checkerframework.dataflow.expression.ArrayAccess,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitArrayAccess(ArrayAccessNode, P)","u":"visitArrayAccess(org.checkerframework.dataflow.cfg.node.ArrayAccessNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitArrayAccess(ArrayAccessNode, P)","u":"visitArrayAccess(org.checkerframework.dataflow.cfg.node.ArrayAccessNode,P)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessTransfer","l":"visitArrayAccess(ArrayAccessNode, TransferInput<NullnessValue, NullnessStore>)","u":"visitArrayAccess(org.checkerframework.dataflow.cfg.node.ArrayAccessNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"visitArrayAccess(ArrayAccessNode, TransferInput<V, S>)","u":"visitArrayAccess(org.checkerframework.dataflow.cfg.node.ArrayAccessNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitArrayAccess(ArrayAccessTree, Node)","u":"visitArrayAccess(com.sun.source.tree.ArrayAccessTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundVisitor","l":"visitArrayAccess(ArrayAccessTree, Void)","u":"visitArrayAccess(com.sun.source.tree.ArrayAccessTree,java.lang.Void)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundVisitor","l":"visitArrayAccess(ArrayAccessTree, Void)","u":"visitArrayAccess(com.sun.source.tree.ArrayAccessTree,java.lang.Void)"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"visitArrayAccess(ArrayAccessTree, Void)","u":"visitArrayAccess(com.sun.source.tree.ArrayAccessTree,java.lang.Void)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"visitArrayAccess(ArrayAccessTree, Void)","u":"visitArrayAccess(com.sun.source.tree.ArrayAccessTree,java.lang.Void)"},{"p":"org.checkerframework.common.util.report","c":"ReportVisitor","l":"visitArrayAccess(ArrayAccessTree, Void)","u":"visitArrayAccess(com.sun.source.tree.ArrayAccessTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitArrayAccess(ArrayAccessTree, Void)","u":"visitArrayAccess(com.sun.source.tree.ArrayAccessTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitArrayAccess(ArrayAccessTree, Void)","u":"visitArrayAccess(com.sun.source.tree.ArrayAccessTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionScanner","l":"visitArrayCreation(ArrayCreation, P)","u":"visitArrayCreation(org.checkerframework.dataflow.expression.ArrayCreation,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionVisitor","l":"visitArrayCreation(ArrayCreation, P)","u":"visitArrayCreation(org.checkerframework.dataflow.expression.ArrayCreation,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionConverter","l":"visitArrayCreation(ArrayCreation, Void)","u":"visitArrayCreation(org.checkerframework.dataflow.expression.ArrayCreation,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitArrayCreation(ArrayCreationNode, P)","u":"visitArrayCreation(org.checkerframework.dataflow.cfg.node.ArrayCreationNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitArrayCreation(ArrayCreationNode, P)","u":"visitArrayCreation(org.checkerframework.dataflow.cfg.node.ArrayCreationNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitArrayType(ArrayTypeNode, P)","u":"visitArrayType(org.checkerframework.dataflow.cfg.node.ArrayTypeNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitArrayType(ArrayTypeNode, P)","u":"visitArrayType(org.checkerframework.dataflow.cfg.node.ArrayTypeNode,P)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitArrayType(ArrayTypeTree, Node)","u":"visitArrayType(com.sun.source.tree.ArrayTypeTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitArrayType(ArrayTypeTree, Void)","u":"visitArrayType(com.sun.source.tree.ArrayTypeTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitArrayType(ArrayTypeTree, Void)","u":"visitArrayType(com.sun.source.tree.ArrayTypeTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitAssert(AssertTree, Node)","u":"visitAssert(com.sun.source.tree.AssertTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"visitAssert(AssertTree, Void)","u":"visitAssert(com.sun.source.tree.AssertTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitAssert(AssertTree, Void)","u":"visitAssert(com.sun.source.tree.AssertTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitAssert(AssertTree, Void)","u":"visitAssert(com.sun.source.tree.AssertTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitAssertionError(AssertionErrorNode, P)","u":"visitAssertionError(org.checkerframework.dataflow.cfg.node.AssertionErrorNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitAssertionError(AssertionErrorNode, P)","u":"visitAssertionError(org.checkerframework.dataflow.cfg.node.AssertionErrorNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitAssignment(AssignmentNode, P)","u":"visitAssignment(org.checkerframework.dataflow.cfg.node.AssignmentNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitAssignment(AssignmentNode, P)","u":"visitAssignment(org.checkerframework.dataflow.cfg.node.AssignmentNode,P)"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenTransfer","l":"visitAssignment(AssignmentNode, TransferInput<CFValue, CFStore>)","u":"visitAssignment(org.checkerframework.dataflow.cfg.node.AssignmentNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundTransfer","l":"visitAssignment(AssignmentNode, TransferInput<CFValue, CFStore>)","u":"visitAssignment(org.checkerframework.dataflow.cfg.node.AssignmentNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallTransfer","l":"visitAssignment(AssignmentNode, TransferInput<CFValue, CFStore>)","u":"visitAssignment(org.checkerframework.dataflow.cfg.node.AssignmentNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.common.aliasing","c":"AliasingTransfer","l":"visitAssignment(AssignmentNode, TransferInput<CFValue, CFStore>)","u":"visitAssignment(org.checkerframework.dataflow.cfg.node.AssignmentNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.common.initializedfields","c":"InitializedFieldsTransfer","l":"visitAssignment(AssignmentNode, TransferInput<CFValue, CFStore>)","u":"visitAssignment(org.checkerframework.dataflow.cfg.node.AssignmentNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"ConstantPropagationTransfer","l":"visitAssignment(AssignmentNode, TransferInput<Constant, ConstantPropagationStore>)","u":"visitAssignment(org.checkerframework.dataflow.cfg.node.AssignmentNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprTransfer","l":"visitAssignment(AssignmentNode, TransferInput<UnusedAbstractValue, BusyExprStore>)","u":"visitAssignment(org.checkerframework.dataflow.cfg.node.AssignmentNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarTransfer","l":"visitAssignment(AssignmentNode, TransferInput<UnusedAbstractValue, LiveVarStore>)","u":"visitAssignment(org.checkerframework.dataflow.cfg.node.AssignmentNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.reachingdef","c":"ReachingDefinitionTransfer","l":"visitAssignment(AssignmentNode, TransferInput<UnusedAbstractValue, ReachingDefinitionStore>)","u":"visitAssignment(org.checkerframework.dataflow.cfg.node.AssignmentNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationTransfer","l":"visitAssignment(AssignmentNode, TransferInput<V, S>)","u":"visitAssignment(org.checkerframework.dataflow.cfg.node.AssignmentNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"visitAssignment(AssignmentNode, TransferInput<V, S>)","u":"visitAssignment(org.checkerframework.dataflow.cfg.node.AssignmentNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitAssignment(AssignmentTree, Node)","u":"visitAssignment(com.sun.source.tree.AssignmentTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitAssignment(AssignmentTree, Void)","u":"visitAssignment(com.sun.source.tree.AssignmentTree,java.lang.Void)"},{"p":"org.checkerframework.common.util.report","c":"ReportVisitor","l":"visitAssignment(AssignmentTree, Void)","u":"visitAssignment(com.sun.source.tree.AssignmentTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitAssignment(AssignmentTree, Void)","u":"visitAssignment(com.sun.source.tree.AssignmentTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker.PurityCheckerHelper","l":"visitAssignment(AssignmentTree, Void)","u":"visitAssignment(com.sun.source.tree.AssignmentTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitAssignment(AssignmentTree, Void)","u":"visitAssignment(com.sun.source.tree.AssignmentTree,java.lang.Void)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory.UpperBoundTreeAnnotator","l":"visitBinary(BinaryTree, AnnotatedTypeMirror)","u":"visitBinary(com.sun.source.tree.BinaryTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.lock","c":"LockTreeAnnotator","l":"visitBinary(BinaryTree, AnnotatedTypeMirror)","u":"visitBinary(com.sun.source.tree.BinaryTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory.NullnessPropagationTreeAnnotator","l":"visitBinary(BinaryTree, AnnotatedTypeMirror)","u":"visitBinary(com.sun.source.tree.BinaryTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory.NullnessTreeAnnotator","l":"visitBinary(BinaryTree, AnnotatedTypeMirror)","u":"visitBinary(com.sun.source.tree.BinaryTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.propkey","c":"PropertyKeyAnnotatedTypeFactory.KeyLookupTreeAnnotator","l":"visitBinary(BinaryTree, AnnotatedTypeMirror)","u":"visitBinary(com.sun.source.tree.BinaryTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.treeannotator","c":"PropagationTreeAnnotator","l":"visitBinary(BinaryTree, AnnotatedTypeMirror)","u":"visitBinary(com.sun.source.tree.BinaryTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.treeannotator","c":"TreeAnnotator","l":"visitBinary(BinaryTree, AnnotatedTypeMirror)","u":"visitBinary(com.sun.source.tree.BinaryTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitBinary(BinaryTree, Node)","u":"visitBinary(com.sun.source.tree.BinaryTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.checker.fenum","c":"FenumVisitor","l":"visitBinary(BinaryTree, Void)","u":"visitBinary(com.sun.source.tree.BinaryTree,java.lang.Void)"},{"p":"org.checkerframework.checker.interning","c":"InterningVisitor","l":"visitBinary(BinaryTree, Void)","u":"visitBinary(com.sun.source.tree.BinaryTree,java.lang.Void)"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"visitBinary(BinaryTree, Void)","u":"visitBinary(com.sun.source.tree.BinaryTree,java.lang.Void)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"visitBinary(BinaryTree, Void)","u":"visitBinary(com.sun.source.tree.BinaryTree,java.lang.Void)"},{"p":"org.checkerframework.checker.signedness","c":"SignednessVisitor","l":"visitBinary(BinaryTree, Void)","u":"visitBinary(com.sun.source.tree.BinaryTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitBinary(BinaryTree, Void)","u":"visitBinary(com.sun.source.tree.BinaryTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitBinary(BinaryTree, Void)","u":"visitBinary(com.sun.source.tree.BinaryTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionScanner","l":"visitBinaryOperation(BinaryOperation, P)","u":"visitBinaryOperation(org.checkerframework.dataflow.expression.BinaryOperation,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionVisitor","l":"visitBinaryOperation(BinaryOperation, P)","u":"visitBinaryOperation(org.checkerframework.dataflow.expression.BinaryOperation,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionConverter","l":"visitBinaryOperation(BinaryOperation, Void)","u":"visitBinaryOperation(org.checkerframework.dataflow.expression.BinaryOperation,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitBindingPattern17(Tree, Node)","u":"visitBindingPattern17(com.sun.source.tree.Tree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitBindingPattern17(Tree, Void)","u":"visitBindingPattern17(com.sun.source.tree.Tree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"ExpectedTreesVisitor","l":"visitBindingPattern17(Tree, Void)","u":"visitBindingPattern17(com.sun.source.tree.Tree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitBindingPattern17(Tree, Void)","u":"visitBindingPattern17(com.sun.source.tree.Tree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitBitwiseAnd(BitwiseAndNode, P)","u":"visitBitwiseAnd(org.checkerframework.dataflow.cfg.node.BitwiseAndNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitBitwiseAnd(BitwiseAndNode, P)","u":"visitBitwiseAnd(org.checkerframework.dataflow.cfg.node.BitwiseAndNode,P)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"visitBitwiseAnd(BitwiseAndNode, TransferInput<CFValue, CFStore>)","u":"visitBitwiseAnd(org.checkerframework.dataflow.cfg.node.BitwiseAndNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitBitwiseAnd(BitwiseAndNode, TransferInput<CFValue, CFStore>)","u":"visitBitwiseAnd(org.checkerframework.dataflow.cfg.node.BitwiseAndNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitBitwiseComplement(BitwiseComplementNode, P)","u":"visitBitwiseComplement(org.checkerframework.dataflow.cfg.node.BitwiseComplementNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitBitwiseComplement(BitwiseComplementNode, P)","u":"visitBitwiseComplement(org.checkerframework.dataflow.cfg.node.BitwiseComplementNode,P)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitBitwiseComplement(BitwiseComplementNode, TransferInput<CFValue, CFStore>)","u":"visitBitwiseComplement(org.checkerframework.dataflow.cfg.node.BitwiseComplementNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitBitwiseOr(BitwiseOrNode, P)","u":"visitBitwiseOr(org.checkerframework.dataflow.cfg.node.BitwiseOrNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitBitwiseOr(BitwiseOrNode, P)","u":"visitBitwiseOr(org.checkerframework.dataflow.cfg.node.BitwiseOrNode,P)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitBitwiseOr(BitwiseOrNode, TransferInput<CFValue, CFStore>)","u":"visitBitwiseOr(org.checkerframework.dataflow.cfg.node.BitwiseOrNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitBitwiseXor(BitwiseXorNode, P)","u":"visitBitwiseXor(org.checkerframework.dataflow.cfg.node.BitwiseXorNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitBitwiseXor(BitwiseXorNode, P)","u":"visitBitwiseXor(org.checkerframework.dataflow.cfg.node.BitwiseXorNode,P)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitBitwiseXor(BitwiseXorNode, TransferInput<CFValue, CFStore>)","u":"visitBitwiseXor(org.checkerframework.dataflow.cfg.node.BitwiseXorNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitBlock(BlockTree, Node)","u":"visitBlock(com.sun.source.tree.BlockTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitBlock(BlockTree, Void)","u":"visitBlock(com.sun.source.tree.BlockTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitBlock(BlockTree, Void)","u":"visitBlock(com.sun.source.tree.BlockTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitBooleanLiteral(BooleanLiteralNode, P)","u":"visitBooleanLiteral(org.checkerframework.dataflow.cfg.node.BooleanLiteralNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitBooleanLiteral(BooleanLiteralNode, P)","u":"visitBooleanLiteral(org.checkerframework.dataflow.cfg.node.BooleanLiteralNode,P)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults.DefaultApplierElement.DefaultApplierElementImpl","l":"visitBounds(AnnotatedTypeMirror, AnnotatedTypeMirror, AnnotatedTypeMirror, AnnotationMirror)","u":"visitBounds(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitBreak(BreakTree, Node)","u":"visitBreak(com.sun.source.tree.BreakTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitBreak(BreakTree, Void)","u":"visitBreak(com.sun.source.tree.BreakTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitBreak(BreakTree, Void)","u":"visitBreak(com.sun.source.tree.BreakTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitCase(CaseNode, P)","u":"visitCase(org.checkerframework.dataflow.cfg.node.CaseNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitCase(CaseNode, P)","u":"visitCase(org.checkerframework.dataflow.cfg.node.CaseNode,P)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundTransfer","l":"visitCase(CaseNode, TransferInput<CFValue, CFStore>)","u":"visitCase(org.checkerframework.dataflow.cfg.node.CaseNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"visitCase(CaseNode, TransferInput<V, S>)","u":"visitCase(org.checkerframework.dataflow.cfg.node.CaseNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitCase(CaseTree, Node)","u":"visitCase(com.sun.source.tree.CaseTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitCase(CaseTree, Void)","u":"visitCase(com.sun.source.tree.CaseTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitCase(CaseTree, Void)","u":"visitCase(com.sun.source.tree.CaseTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitCatch(CatchTree, Node)","u":"visitCatch(com.sun.source.tree.CatchTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitCatch(CatchTree, Void)","u":"visitCatch(com.sun.source.tree.CatchTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitCatch(CatchTree, Void)","u":"visitCatch(com.sun.source.tree.CatchTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker.PurityCheckerHelper","l":"visitCatch(CatchTree, Void)","u":"visitCatch(com.sun.source.tree.CatchTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitCatch(CatchTree, Void)","u":"visitCatch(com.sun.source.tree.CatchTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitCharacterLiteral(CharacterLiteralNode, P)","u":"visitCharacterLiteral(org.checkerframework.dataflow.cfg.node.CharacterLiteralNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitCharacterLiteral(CharacterLiteralNode, P)","u":"visitCharacterLiteral(org.checkerframework.dataflow.cfg.node.CharacterLiteralNode,P)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesTreeAnnotator","l":"visitClass(ClassTree, AnnotatedTypeMirror)","u":"visitClass(com.sun.source.tree.ClassTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitClass(ClassTree, Node)","u":"visitClass(com.sun.source.tree.ClassTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.source","c":"SourceVisitor","l":"visitClass(ClassTree, P)","u":"visitClass(com.sun.source.tree.ClassTree,P)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitClass(ClassTree, Void)","u":"visitClass(com.sun.source.tree.ClassTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitClass(ClassTree, Void)","u":"visitClass(com.sun.source.tree.ClassTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"ExpectedTreesVisitor","l":"visitClass(ClassTree, Void)","u":"visitClass(com.sun.source.tree.ClassTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitClass(ClassTree, Void)","u":"visitClass(com.sun.source.tree.ClassTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitClassDeclaration(ClassDeclarationNode, P)","u":"visitClassDeclaration(org.checkerframework.dataflow.cfg.node.ClassDeclarationNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitClassDeclaration(ClassDeclarationNode, P)","u":"visitClassDeclaration(org.checkerframework.dataflow.cfg.node.ClassDeclarationNode,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionScanner","l":"visitClassName(ClassName, P)","u":"visitClassName(org.checkerframework.dataflow.expression.ClassName,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionVisitor","l":"visitClassName(ClassName, P)","u":"visitClassName(org.checkerframework.dataflow.expression.ClassName,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionConverter","l":"visitClassName(ClassName, Void)","u":"visitClassName(org.checkerframework.dataflow.expression.ClassName,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitClassName(ClassNameNode, P)","u":"visitClassName(org.checkerframework.dataflow.cfg.node.ClassNameNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitClassName(ClassNameNode, P)","u":"visitClassName(org.checkerframework.dataflow.cfg.node.ClassNameNode,P)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"visitClassName(ClassNameNode, TransferInput<V, S>)","u":"visitClassName(org.checkerframework.dataflow.cfg.node.ClassNameNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"visitClassTypeParameters(AnnotatedTypeMirror.AnnotatedDeclaredType, ClassTree)","u":"visitClassTypeParameters(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,com.sun.source.tree.ClassTree)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitCompilationUnit(CompilationUnitTree, Node)","u":"visitCompilationUnit(com.sun.source.tree.CompilationUnitTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitCompilationUnit(CompilationUnitTree, Void)","u":"visitCompilationUnit(com.sun.source.tree.CompilationUnitTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitCompilationUnit(CompilationUnitTree, Void)","u":"visitCompilationUnit(com.sun.source.tree.CompilationUnitTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitCompilationUnit(CompilationUnitTree, Void)","u":"visitCompilationUnit(com.sun.source.tree.CompilationUnitTree,java.lang.Void)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory.UpperBoundTreeAnnotator","l":"visitCompoundAssignment(CompoundAssignmentTree, AnnotatedTypeMirror)","u":"visitCompoundAssignment(com.sun.source.tree.CompoundAssignmentTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.lock","c":"LockTreeAnnotator","l":"visitCompoundAssignment(CompoundAssignmentTree, AnnotatedTypeMirror)","u":"visitCompoundAssignment(com.sun.source.tree.CompoundAssignmentTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory.NullnessTreeAnnotator","l":"visitCompoundAssignment(CompoundAssignmentTree, AnnotatedTypeMirror)","u":"visitCompoundAssignment(com.sun.source.tree.CompoundAssignmentTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.propkey","c":"PropertyKeyAnnotatedTypeFactory.KeyLookupTreeAnnotator","l":"visitCompoundAssignment(CompoundAssignmentTree, AnnotatedTypeMirror)","u":"visitCompoundAssignment(com.sun.source.tree.CompoundAssignmentTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.treeannotator","c":"PropagationTreeAnnotator","l":"visitCompoundAssignment(CompoundAssignmentTree, AnnotatedTypeMirror)","u":"visitCompoundAssignment(com.sun.source.tree.CompoundAssignmentTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitCompoundAssignment(CompoundAssignmentTree, Node)","u":"visitCompoundAssignment(com.sun.source.tree.CompoundAssignmentTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"visitCompoundAssignment(CompoundAssignmentTree, Void)","u":"visitCompoundAssignment(com.sun.source.tree.CompoundAssignmentTree,java.lang.Void)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"visitCompoundAssignment(CompoundAssignmentTree, Void)","u":"visitCompoundAssignment(com.sun.source.tree.CompoundAssignmentTree,java.lang.Void)"},{"p":"org.checkerframework.checker.signedness","c":"SignednessVisitor","l":"visitCompoundAssignment(CompoundAssignmentTree, Void)","u":"visitCompoundAssignment(com.sun.source.tree.CompoundAssignmentTree,java.lang.Void)"},{"p":"org.checkerframework.checker.units","c":"UnitsVisitor","l":"visitCompoundAssignment(CompoundAssignmentTree, Void)","u":"visitCompoundAssignment(com.sun.source.tree.CompoundAssignmentTree,java.lang.Void)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitCompoundAssignment(CompoundAssignmentTree, Void)","u":"visitCompoundAssignment(com.sun.source.tree.CompoundAssignmentTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitCompoundAssignment(CompoundAssignmentTree, Void)","u":"visitCompoundAssignment(com.sun.source.tree.CompoundAssignmentTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker.PurityCheckerHelper","l":"visitCompoundAssignment(CompoundAssignmentTree, Void)","u":"visitCompoundAssignment(com.sun.source.tree.CompoundAssignmentTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitCompoundAssignment(CompoundAssignmentTree, Void)","u":"visitCompoundAssignment(com.sun.source.tree.CompoundAssignmentTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitConditionalAnd(ConditionalAndNode, P)","u":"visitConditionalAnd(org.checkerframework.dataflow.cfg.node.ConditionalAndNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitConditionalAnd(ConditionalAndNode, P)","u":"visitConditionalAnd(org.checkerframework.dataflow.cfg.node.ConditionalAndNode,P)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitConditionalAnd(ConditionalAndNode, TransferInput<CFValue, CFStore>)","u":"visitConditionalAnd(org.checkerframework.dataflow.cfg.node.ConditionalAndNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitConditionalExpression(ConditionalExpressionTree, Node)","u":"visitConditionalExpression(com.sun.source.tree.ConditionalExpressionTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"visitConditionalExpression(ConditionalExpressionTree, Void)","u":"visitConditionalExpression(com.sun.source.tree.ConditionalExpressionTree,java.lang.Void)"},{"p":"org.checkerframework.checker.optional","c":"OptionalVisitor","l":"visitConditionalExpression(ConditionalExpressionTree, Void)","u":"visitConditionalExpression(com.sun.source.tree.ConditionalExpressionTree,java.lang.Void)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitConditionalExpression(ConditionalExpressionTree, Void)","u":"visitConditionalExpression(com.sun.source.tree.ConditionalExpressionTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitConditionalExpression(ConditionalExpressionTree, Void)","u":"visitConditionalExpression(com.sun.source.tree.ConditionalExpressionTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitConditionalExpression(ConditionalExpressionTree, Void)","u":"visitConditionalExpression(com.sun.source.tree.ConditionalExpressionTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitConditionalNot(ConditionalNotNode, P)","u":"visitConditionalNot(org.checkerframework.dataflow.cfg.node.ConditionalNotNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitConditionalNot(ConditionalNotNode, P)","u":"visitConditionalNot(org.checkerframework.dataflow.cfg.node.ConditionalNotNode,P)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitConditionalNot(ConditionalNotNode, TransferInput<CFValue, CFStore>)","u":"visitConditionalNot(org.checkerframework.dataflow.cfg.node.ConditionalNotNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"visitConditionalNot(ConditionalNotNode, TransferInput<V, S>)","u":"visitConditionalNot(org.checkerframework.dataflow.cfg.node.ConditionalNotNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitConditionalOr(ConditionalOrNode, P)","u":"visitConditionalOr(org.checkerframework.dataflow.cfg.node.ConditionalOrNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitConditionalOr(ConditionalOrNode, P)","u":"visitConditionalOr(org.checkerframework.dataflow.cfg.node.ConditionalOrNode,P)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitConditionalOr(ConditionalOrNode, TransferInput<CFValue, CFStore>)","u":"visitConditionalOr(org.checkerframework.dataflow.cfg.node.ConditionalOrNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitContinue(ContinueTree, Node)","u":"visitContinue(com.sun.source.tree.ContinueTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitContinue(ContinueTree, Void)","u":"visitContinue(com.sun.source.tree.ContinueTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitContinue(ContinueTree, Void)","u":"visitContinue(com.sun.source.tree.ContinueTree,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitDeclared_Array(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedArrayType, PARAM)","u":"visitDeclared_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitDeclared_Array(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedArrayType, PARAM)","u":"visitDeclared_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitDeclared_Array(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedArrayType, Void)","u":"visitDeclared_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitDeclared_Declared(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedDeclaredType, PARAM)","u":"visitDeclared_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitDeclared_Declared(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedDeclaredType, PARAM)","u":"visitDeclared_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"EquivalentAtmComboScanner","l":"visitDeclared_Declared(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedDeclaredType, PARAM)","u":"visitDeclared_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitDeclared_Declared(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedDeclaredType, Void)","u":"visitDeclared_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitDeclared_Declared(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedDeclaredType, Void)","u":"visitDeclared_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"StructuralEqualityComparer","l":"visitDeclared_Declared(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedDeclaredType, Void)","u":"visitDeclared_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitDeclared_Executable(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedExecutableType, PARAM)","u":"visitDeclared_Executable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitDeclared_Executable(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedExecutableType, PARAM)","u":"visitDeclared_Executable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitDeclared_Intersection(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedIntersectionType, PARAM)","u":"visitDeclared_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitDeclared_Intersection(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedIntersectionType, PARAM)","u":"visitDeclared_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitDeclared_Intersection(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedIntersectionType, Void)","u":"visitDeclared_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitDeclared_Intersection(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedIntersectionType, Void)","u":"visitDeclared_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitDeclared_None(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedNoType, PARAM)","u":"visitDeclared_None(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitDeclared_None(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedNoType, PARAM)","u":"visitDeclared_None(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitDeclared_Null(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedNullType, PARAM)","u":"visitDeclared_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitDeclared_Null(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedNullType, PARAM)","u":"visitDeclared_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitDeclared_Null(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedNullType, Void)","u":"visitDeclared_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitDeclared_Primitive(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedPrimitiveType, PARAM)","u":"visitDeclared_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitDeclared_Primitive(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedPrimitiveType, PARAM)","u":"visitDeclared_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitDeclared_Primitive(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedPrimitiveType, Void)","u":"visitDeclared_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitDeclared_Primitive(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedPrimitiveType, Void)","u":"visitDeclared_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"StructuralEqualityComparer","l":"visitDeclared_Primitive(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedPrimitiveType, Void)","u":"visitDeclared_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitDeclared_Typevar(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedTypeVariable, PARAM)","u":"visitDeclared_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitDeclared_Typevar(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedTypeVariable, PARAM)","u":"visitDeclared_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitDeclared_Typevar(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedTypeVariable, Void)","u":"visitDeclared_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitDeclared_Typevar(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedTypeVariable, Void)","u":"visitDeclared_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitDeclared_Union(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedUnionType, PARAM)","u":"visitDeclared_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitDeclared_Union(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedUnionType, PARAM)","u":"visitDeclared_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitDeclared_Union(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedUnionType, Void)","u":"visitDeclared_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitDeclared_Union(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedUnionType, Void)","u":"visitDeclared_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitDeclared_Wildcard(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedWildcardType, PARAM)","u":"visitDeclared_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitDeclared_Wildcard(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedWildcardType, PARAM)","u":"visitDeclared_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitDeclared_Wildcard(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedWildcardType, Void)","u":"visitDeclared_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitDeclared_Wildcard(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedWildcardType, Void)","u":"visitDeclared_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"DoubleAnnotatedTypeScanner","l":"visitDeclared(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror)","u":"visitDeclared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeCopier","l":"visitDeclared(AnnotatedTypeMirror.AnnotatedDeclaredType, IdentityHashMap<AnnotatedTypeMirror, AnnotatedTypeMirror>)","u":"visitDeclared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,java.util.IdentityHashMap)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"visitDeclared(AnnotatedTypeMirror.AnnotatedDeclaredType, P)","u":"visitDeclared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeVisitor","l":"visitDeclared(AnnotatedTypeMirror.AnnotatedDeclaredType, P)","u":"visitDeclared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeScanner","l":"visitDeclared(AnnotatedTypeMirror.AnnotatedDeclaredType, P)","u":"visitDeclared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeVisitor","l":"visitDeclared(AnnotatedTypeMirror.AnnotatedDeclaredType, P)","u":"visitDeclared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,P)"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter.FormattingVisitor","l":"visitDeclared(AnnotatedTypeMirror.AnnotatedDeclaredType, Set<AnnotatedTypeMirror>)","u":"visitDeclared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,java.util.Set)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"visitDeclared(AnnotatedTypeMirror.AnnotatedDeclaredType, Tree)","u":"visitDeclared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.common.util.report","c":"ReportVisitor.ReportTypeValidator","l":"visitDeclared(AnnotatedTypeMirror.AnnotatedDeclaredType, Tree)","u":"visitDeclared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.type.typeannotator","c":"DefaultQualifierForUseTypeAnnotator","l":"visitDeclared(AnnotatedTypeMirror.AnnotatedDeclaredType, Void)","u":"visitDeclared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.typeannotator","c":"PropagationTypeAnnotator","l":"visitDeclared(AnnotatedTypeMirror.AnnotatedDeclaredType, Void)","u":"visitDeclared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitDoubleLiteral(DoubleLiteralNode, P)","u":"visitDoubleLiteral(org.checkerframework.dataflow.cfg.node.DoubleLiteralNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitDoubleLiteral(DoubleLiteralNode, P)","u":"visitDoubleLiteral(org.checkerframework.dataflow.cfg.node.DoubleLiteralNode,P)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitDoWhileLoop(DoWhileLoopTree, Node)","u":"visitDoWhileLoop(com.sun.source.tree.DoWhileLoopTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"visitDoWhileLoop(DoWhileLoopTree, Void)","u":"visitDoWhileLoop(com.sun.source.tree.DoWhileLoopTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitDoWhileLoop(DoWhileLoopTree, Void)","u":"visitDoWhileLoop(com.sun.source.tree.DoWhileLoopTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"ExpectedTreesVisitor","l":"visitDoWhileLoop(DoWhileLoopTree, Void)","u":"visitDoWhileLoop(com.sun.source.tree.DoWhileLoopTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitDoWhileLoop(DoWhileLoopTree, Void)","u":"visitDoWhileLoop(com.sun.source.tree.DoWhileLoopTree,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"EquivalentAtmComboScanner","l":"visited"},{"p":"org.checkerframework.framework.type.visitor","c":"EquivalentAtmComboScanner.Visited","l":"Visited()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"visitedNodes"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitEmptyStatement(EmptyStatementTree, Node)","u":"visitEmptyStatement(com.sun.source.tree.EmptyStatementTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitEmptyStatement(EmptyStatementTree, Void)","u":"visitEmptyStatement(com.sun.source.tree.EmptyStatementTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitEmptyStatement(EmptyStatementTree, Void)","u":"visitEmptyStatement(com.sun.source.tree.EmptyStatementTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitEnhancedForLoop(EnhancedForLoopTree, Node)","u":"visitEnhancedForLoop(com.sun.source.tree.EnhancedForLoopTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"visitEnhancedForLoop(EnhancedForLoopTree, Void)","u":"visitEnhancedForLoop(com.sun.source.tree.EnhancedForLoopTree,java.lang.Void)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitEnhancedForLoop(EnhancedForLoopTree, Void)","u":"visitEnhancedForLoop(com.sun.source.tree.EnhancedForLoopTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitEnhancedForLoop(EnhancedForLoopTree, Void)","u":"visitEnhancedForLoop(com.sun.source.tree.EnhancedForLoopTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitEnhancedForLoop(EnhancedForLoopTree, Void)","u":"visitEnhancedForLoop(com.sun.source.tree.EnhancedForLoopTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitEqualTo(EqualToNode, P)","u":"visitEqualTo(org.checkerframework.dataflow.cfg.node.EqualToNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitEqualTo(EqualToNode, P)","u":"visitEqualTo(org.checkerframework.dataflow.cfg.node.EqualToNode,P)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitEqualTo(EqualToNode, TransferInput<CFValue, CFStore>)","u":"visitEqualTo(org.checkerframework.dataflow.cfg.node.EqualToNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"ConstantPropagationTransfer","l":"visitEqualTo(EqualToNode, TransferInput<Constant, ConstantPropagationStore>)","u":"visitEqualTo(org.checkerframework.dataflow.cfg.node.EqualToNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"visitEqualTo(EqualToNode, TransferInput<V, S>)","u":"visitEqualTo(org.checkerframework.dataflow.cfg.node.EqualToNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitErroneous(ErroneousTree, Node)","u":"visitErroneous(com.sun.source.tree.ErroneousTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitErroneous(ErroneousTree, Void)","u":"visitErroneous(com.sun.source.tree.ErroneousTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitErroneous(ErroneousTree, Void)","u":"visitErroneous(com.sun.source.tree.ErroneousTree,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitExecutable_Array(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedArrayType, PARAM)","u":"visitExecutable_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitExecutable_Array(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedArrayType, PARAM)","u":"visitExecutable_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitExecutable_Declared(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedDeclaredType, PARAM)","u":"visitExecutable_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitExecutable_Declared(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedDeclaredType, PARAM)","u":"visitExecutable_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitExecutable_Executable(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedExecutableType, PARAM)","u":"visitExecutable_Executable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitExecutable_Executable(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedExecutableType, PARAM)","u":"visitExecutable_Executable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"EquivalentAtmComboScanner","l":"visitExecutable_Executable(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedExecutableType, PARAM)","u":"visitExecutable_Executable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitExecutable_Intersection(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedIntersectionType, PARAM)","u":"visitExecutable_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitExecutable_Intersection(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedIntersectionType, PARAM)","u":"visitExecutable_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitExecutable_None(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedNoType, PARAM)","u":"visitExecutable_None(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitExecutable_None(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedNoType, PARAM)","u":"visitExecutable_None(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitExecutable_Null(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedNullType, PARAM)","u":"visitExecutable_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitExecutable_Null(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedNullType, PARAM)","u":"visitExecutable_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitExecutable_Primitive(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedPrimitiveType, PARAM)","u":"visitExecutable_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitExecutable_Primitive(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedPrimitiveType, PARAM)","u":"visitExecutable_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitExecutable_Typevar(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedTypeVariable, PARAM)","u":"visitExecutable_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitExecutable_Typevar(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedTypeVariable, PARAM)","u":"visitExecutable_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitExecutable_Union(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedUnionType, PARAM)","u":"visitExecutable_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitExecutable_Union(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedUnionType, PARAM)","u":"visitExecutable_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitExecutable_Wildcard(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedWildcardType, PARAM)","u":"visitExecutable_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitExecutable_Wildcard(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror.AnnotatedWildcardType, PARAM)","u":"visitExecutable_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"DoubleAnnotatedTypeScanner","l":"visitExecutable(AnnotatedTypeMirror.AnnotatedExecutableType, AnnotatedTypeMirror)","u":"visitExecutable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeCopier","l":"visitExecutable(AnnotatedTypeMirror.AnnotatedExecutableType, IdentityHashMap<AnnotatedTypeMirror, AnnotatedTypeMirror>)","u":"visitExecutable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,java.util.IdentityHashMap)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"visitExecutable(AnnotatedTypeMirror.AnnotatedExecutableType, P)","u":"visitExecutable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeVisitor","l":"visitExecutable(AnnotatedTypeMirror.AnnotatedExecutableType, P)","u":"visitExecutable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeScanner","l":"visitExecutable(AnnotatedTypeMirror.AnnotatedExecutableType, P)","u":"visitExecutable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeVisitor","l":"visitExecutable(AnnotatedTypeMirror.AnnotatedExecutableType, P)","u":"visitExecutable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,P)"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter.FormattingVisitor","l":"visitExecutable(AnnotatedTypeMirror.AnnotatedExecutableType, Set<AnnotatedTypeMirror>)","u":"visitExecutable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,java.util.Set)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory.CommitmentTypeAnnotator","l":"visitExecutable(AnnotatedTypeMirror.AnnotatedExecutableType, Void)","u":"visitExecutable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.typeannotator","c":"DefaultForTypeAnnotator","l":"visitExecutable(AnnotatedTypeMirror.AnnotatedExecutableType, Void)","u":"visitExecutable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.typeannotator","c":"TypeAnnotator","l":"visitExecutable(AnnotatedTypeMirror.AnnotatedExecutableType, Void)","u":"visitExecutable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitExplicitThis(ExplicitThisNode, P)","u":"visitExplicitThis(org.checkerframework.dataflow.cfg.node.ExplicitThisNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitExplicitThis(ExplicitThisNode, P)","u":"visitExplicitThis(org.checkerframework.dataflow.cfg.node.ExplicitThisNode,P)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitExports(ExportsTree, Node)","u":"visitExports(com.sun.source.tree.ExportsTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitExports(ExportsTree, Void)","u":"visitExports(com.sun.source.tree.ExportsTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitExpressionStatement(ExpressionStatementNode, P)","u":"visitExpressionStatement(org.checkerframework.dataflow.cfg.node.ExpressionStatementNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitExpressionStatement(ExpressionStatementNode, P)","u":"visitExpressionStatement(org.checkerframework.dataflow.cfg.node.ExpressionStatementNode,P)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"visitExpressionStatement(ExpressionStatementNode, TransferInput<V, S>)","u":"visitExpressionStatement(org.checkerframework.dataflow.cfg.node.ExpressionStatementNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitExpressionStatement(ExpressionStatementTree, Node)","u":"visitExpressionStatement(com.sun.source.tree.ExpressionStatementTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitExpressionStatement(ExpressionStatementTree, Void)","u":"visitExpressionStatement(com.sun.source.tree.ExpressionStatementTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"ExpectedTreesVisitor","l":"visitExpressionStatement(ExpressionStatementTree, Void)","u":"visitExpressionStatement(com.sun.source.tree.ExpressionStatementTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitExpressionStatement(ExpressionStatementTree, Void)","u":"visitExpressionStatement(com.sun.source.tree.ExpressionStatementTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionScanner","l":"visitFieldAccess(FieldAccess, P)","u":"visitFieldAccess(org.checkerframework.dataflow.expression.FieldAccess,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionVisitor","l":"visitFieldAccess(FieldAccess, P)","u":"visitFieldAccess(org.checkerframework.dataflow.expression.FieldAccess,P)"},{"p":"org.checkerframework.common.value","c":"JavaExpressionOptimizer","l":"visitFieldAccess(FieldAccess, Void)","u":"visitFieldAccess(org.checkerframework.dataflow.expression.FieldAccess,java.lang.Void)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionConverter","l":"visitFieldAccess(FieldAccess, Void)","u":"visitFieldAccess(org.checkerframework.dataflow.expression.FieldAccess,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitFieldAccess(FieldAccessNode, P)","u":"visitFieldAccess(org.checkerframework.dataflow.cfg.node.FieldAccessNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitFieldAccess(FieldAccessNode, P)","u":"visitFieldAccess(org.checkerframework.dataflow.cfg.node.FieldAccessNode,P)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundTransfer","l":"visitFieldAccess(FieldAccessNode, TransferInput<CFValue, CFStore>)","u":"visitFieldAccess(org.checkerframework.dataflow.cfg.node.FieldAccessNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitFieldAccess(FieldAccessNode, TransferInput<CFValue, CFStore>)","u":"visitFieldAccess(org.checkerframework.dataflow.cfg.node.FieldAccessNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessTransfer","l":"visitFieldAccess(FieldAccessNode, TransferInput<NullnessValue, NullnessStore>)","u":"visitFieldAccess(org.checkerframework.dataflow.cfg.node.FieldAccessNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationTransfer","l":"visitFieldAccess(FieldAccessNode, TransferInput<V, S>)","u":"visitFieldAccess(org.checkerframework.dataflow.cfg.node.FieldAccessNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"visitFieldAccess(FieldAccessNode, TransferInput<V, S>)","u":"visitFieldAccess(org.checkerframework.dataflow.cfg.node.FieldAccessNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitFloatingDivision(FloatingDivisionNode, P)","u":"visitFloatingDivision(org.checkerframework.dataflow.cfg.node.FloatingDivisionNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitFloatingDivision(FloatingDivisionNode, P)","u":"visitFloatingDivision(org.checkerframework.dataflow.cfg.node.FloatingDivisionNode,P)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitFloatingDivision(FloatingDivisionNode, TransferInput<CFValue, CFStore>)","u":"visitFloatingDivision(org.checkerframework.dataflow.cfg.node.FloatingDivisionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitFloatingRemainder(FloatingRemainderNode, P)","u":"visitFloatingRemainder(org.checkerframework.dataflow.cfg.node.FloatingRemainderNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitFloatingRemainder(FloatingRemainderNode, P)","u":"visitFloatingRemainder(org.checkerframework.dataflow.cfg.node.FloatingRemainderNode,P)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitFloatingRemainder(FloatingRemainderNode, TransferInput<CFValue, CFStore>)","u":"visitFloatingRemainder(org.checkerframework.dataflow.cfg.node.FloatingRemainderNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitFloatLiteral(FloatLiteralNode, P)","u":"visitFloatLiteral(org.checkerframework.dataflow.cfg.node.FloatLiteralNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitFloatLiteral(FloatLiteralNode, P)","u":"visitFloatLiteral(org.checkerframework.dataflow.cfg.node.FloatLiteralNode,P)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitForLoop(ForLoopTree, Node)","u":"visitForLoop(com.sun.source.tree.ForLoopTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"visitForLoop(ForLoopTree, Void)","u":"visitForLoop(com.sun.source.tree.ForLoopTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitForLoop(ForLoopTree, Void)","u":"visitForLoop(com.sun.source.tree.ForLoopTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"ExpectedTreesVisitor","l":"visitForLoop(ForLoopTree, Void)","u":"visitForLoop(com.sun.source.tree.ForLoopTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitForLoop(ForLoopTree, Void)","u":"visitForLoop(com.sun.source.tree.ForLoopTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionScanner","l":"visitFormalParameter(FormalParameter, P)","u":"visitFormalParameter(org.checkerframework.dataflow.expression.FormalParameter,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionVisitor","l":"visitFormalParameter(FormalParameter, P)","u":"visitFormalParameter(org.checkerframework.dataflow.expression.FormalParameter,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionConverter","l":"visitFormalParameter(FormalParameter, Void)","u":"visitFormalParameter(org.checkerframework.dataflow.expression.FormalParameter,java.lang.Void)"},{"p":"org.checkerframework.dataflow.expression","c":"ViewpointAdaptJavaExpression","l":"visitFormalParameter(FormalParameter, Void)","u":"visitFormalParameter(org.checkerframework.dataflow.expression.FormalParameter,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitGreaterThan(GreaterThanNode, P)","u":"visitGreaterThan(org.checkerframework.dataflow.cfg.node.GreaterThanNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitGreaterThan(GreaterThanNode, P)","u":"visitGreaterThan(org.checkerframework.dataflow.cfg.node.GreaterThanNode,P)"},{"p":"org.checkerframework.checker.index","c":"IndexAbstractTransfer","l":"visitGreaterThan(GreaterThanNode, TransferInput<CFValue, CFStore>)","u":"visitGreaterThan(org.checkerframework.dataflow.cfg.node.GreaterThanNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.regex","c":"RegexTransfer","l":"visitGreaterThan(GreaterThanNode, TransferInput<CFValue, CFStore>)","u":"visitGreaterThan(org.checkerframework.dataflow.cfg.node.GreaterThanNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitGreaterThan(GreaterThanNode, TransferInput<CFValue, CFStore>)","u":"visitGreaterThan(org.checkerframework.dataflow.cfg.node.GreaterThanNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitGreaterThanOrEqual(GreaterThanOrEqualNode, P)","u":"visitGreaterThanOrEqual(org.checkerframework.dataflow.cfg.node.GreaterThanOrEqualNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitGreaterThanOrEqual(GreaterThanOrEqualNode, P)","u":"visitGreaterThanOrEqual(org.checkerframework.dataflow.cfg.node.GreaterThanOrEqualNode,P)"},{"p":"org.checkerframework.checker.index","c":"IndexAbstractTransfer","l":"visitGreaterThanOrEqual(GreaterThanOrEqualNode, TransferInput<CFValue, CFStore>)","u":"visitGreaterThanOrEqual(org.checkerframework.dataflow.cfg.node.GreaterThanOrEqualNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.regex","c":"RegexTransfer","l":"visitGreaterThanOrEqual(GreaterThanOrEqualNode, TransferInput<CFValue, CFStore>)","u":"visitGreaterThanOrEqual(org.checkerframework.dataflow.cfg.node.GreaterThanOrEqualNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitGreaterThanOrEqual(GreaterThanOrEqualNode, TransferInput<CFValue, CFStore>)","u":"visitGreaterThanOrEqual(org.checkerframework.dataflow.cfg.node.GreaterThanOrEqualNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.type","c":"StructuralEqualityComparer","l":"visitHistory"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory.NullnessTreeAnnotator","l":"visitIdentifier(IdentifierTree, AnnotatedTypeMirror)","u":"visitIdentifier(com.sun.source.tree.IdentifierTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesTreeAnnotator","l":"visitIdentifier(IdentifierTree, AnnotatedTypeMirror)","u":"visitIdentifier(com.sun.source.tree.IdentifierTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitIdentifier(IdentifierTree, Node)","u":"visitIdentifier(com.sun.source.tree.IdentifierTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"visitIdentifier(IdentifierTree, Void)","u":"visitIdentifier(com.sun.source.tree.IdentifierTree,java.lang.Void)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitIdentifier(IdentifierTree, Void)","u":"visitIdentifier(com.sun.source.tree.IdentifierTree,java.lang.Void)"},{"p":"org.checkerframework.common.util.debug","c":"TreeDebug.Visitor","l":"visitIdentifier(IdentifierTree, Void)","u":"visitIdentifier(com.sun.source.tree.IdentifierTree,java.lang.Void)"},{"p":"org.checkerframework.common.util.report","c":"ReportVisitor","l":"visitIdentifier(IdentifierTree, Void)","u":"visitIdentifier(com.sun.source.tree.IdentifierTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitIdentifier(IdentifierTree, Void)","u":"visitIdentifier(com.sun.source.tree.IdentifierTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitIdentifier(IdentifierTree, Void)","u":"visitIdentifier(com.sun.source.tree.IdentifierTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitIf(IfTree, Node)","u":"visitIf(com.sun.source.tree.IfTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"visitIf(IfTree, Void)","u":"visitIf(com.sun.source.tree.IfTree,java.lang.Void)"},{"p":"org.checkerframework.checker.optional","c":"OptionalVisitor","l":"visitIf(IfTree, Void)","u":"visitIf(com.sun.source.tree.IfTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitIf(IfTree, Void)","u":"visitIf(com.sun.source.tree.IfTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"ExpectedTreesVisitor","l":"visitIf(IfTree, Void)","u":"visitIf(com.sun.source.tree.IfTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitIf(IfTree, Void)","u":"visitIf(com.sun.source.tree.IfTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitImplicitThis(ImplicitThisNode, P)","u":"visitImplicitThis(org.checkerframework.dataflow.cfg.node.ImplicitThisNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitImplicitThis(ImplicitThisNode, P)","u":"visitImplicitThis(org.checkerframework.dataflow.cfg.node.ImplicitThisNode,P)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitImport(ImportTree, Node)","u":"visitImport(com.sun.source.tree.ImportTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitImport(ImportTree, Void)","u":"visitImport(com.sun.source.tree.ImportTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"ExpectedTreesVisitor","l":"visitImport(ImportTree, Void)","u":"visitImport(com.sun.source.tree.ImportTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitImport(ImportTree, Void)","u":"visitImport(com.sun.source.tree.ImportTree,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeCopier","l":"visitingExecutableTypeParam"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitInstanceOf(InstanceOfNode, P)","u":"visitInstanceOf(org.checkerframework.dataflow.cfg.node.InstanceOfNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitInstanceOf(InstanceOfNode, P)","u":"visitInstanceOf(org.checkerframework.dataflow.cfg.node.InstanceOfNode,P)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessTransfer","l":"visitInstanceOf(InstanceOfNode, TransferInput<NullnessValue, NullnessStore>)","u":"visitInstanceOf(org.checkerframework.dataflow.cfg.node.InstanceOfNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"visitInstanceOf(InstanceOfNode, TransferInput<V, S>)","u":"visitInstanceOf(org.checkerframework.dataflow.cfg.node.InstanceOfNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitInstanceOf(InstanceOfTree, Node)","u":"visitInstanceOf(com.sun.source.tree.InstanceOfTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"visitInstanceOf(InstanceOfTree, Void)","u":"visitInstanceOf(com.sun.source.tree.InstanceOfTree,java.lang.Void)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitInstanceOf(InstanceOfTree, Void)","u":"visitInstanceOf(com.sun.source.tree.InstanceOfTree,java.lang.Void)"},{"p":"org.checkerframework.common.util.report","c":"ReportVisitor","l":"visitInstanceOf(InstanceOfTree, Void)","u":"visitInstanceOf(com.sun.source.tree.InstanceOfTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitInstanceOf(InstanceOfTree, Void)","u":"visitInstanceOf(com.sun.source.tree.InstanceOfTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitInstanceOf(InstanceOfTree, Void)","u":"visitInstanceOf(com.sun.source.tree.InstanceOfTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitIntegerDivision(IntegerDivisionNode, P)","u":"visitIntegerDivision(org.checkerframework.dataflow.cfg.node.IntegerDivisionNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitIntegerDivision(IntegerDivisionNode, P)","u":"visitIntegerDivision(org.checkerframework.dataflow.cfg.node.IntegerDivisionNode,P)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"visitIntegerDivision(IntegerDivisionNode, TransferInput<CFValue, CFStore>)","u":"visitIntegerDivision(org.checkerframework.dataflow.cfg.node.IntegerDivisionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitIntegerDivision(IntegerDivisionNode, TransferInput<CFValue, CFStore>)","u":"visitIntegerDivision(org.checkerframework.dataflow.cfg.node.IntegerDivisionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitIntegerLiteral(IntegerLiteralNode, P)","u":"visitIntegerLiteral(org.checkerframework.dataflow.cfg.node.IntegerLiteralNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitIntegerLiteral(IntegerLiteralNode, P)","u":"visitIntegerLiteral(org.checkerframework.dataflow.cfg.node.IntegerLiteralNode,P)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundTransfer","l":"visitIntegerLiteral(IntegerLiteralNode, TransferInput<CFValue, CFStore>)","u":"visitIntegerLiteral(org.checkerframework.dataflow.cfg.node.IntegerLiteralNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"ConstantPropagationTransfer","l":"visitIntegerLiteral(IntegerLiteralNode, TransferInput<Constant, ConstantPropagationStore>)","u":"visitIntegerLiteral(org.checkerframework.dataflow.cfg.node.IntegerLiteralNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitIntegerRemainder(IntegerRemainderNode, P)","u":"visitIntegerRemainder(org.checkerframework.dataflow.cfg.node.IntegerRemainderNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitIntegerRemainder(IntegerRemainderNode, P)","u":"visitIntegerRemainder(org.checkerframework.dataflow.cfg.node.IntegerRemainderNode,P)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"visitIntegerRemainder(IntegerRemainderNode, TransferInput<CFValue, CFStore>)","u":"visitIntegerRemainder(org.checkerframework.dataflow.cfg.node.IntegerRemainderNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitIntegerRemainder(IntegerRemainderNode, TransferInput<CFValue, CFStore>)","u":"visitIntegerRemainder(org.checkerframework.dataflow.cfg.node.IntegerRemainderNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitIntersection_Array(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedArrayType, PARAM)","u":"visitIntersection_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitIntersection_Array(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedArrayType, PARAM)","u":"visitIntersection_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitIntersection_Declared(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedDeclaredType, PARAM)","u":"visitIntersection_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitIntersection_Declared(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedDeclaredType, PARAM)","u":"visitIntersection_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitIntersection_Declared(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedDeclaredType, Void)","u":"visitIntersection_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitIntersection_Declared(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedDeclaredType, Void)","u":"visitIntersection_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitIntersection_Executable(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedExecutableType, PARAM)","u":"visitIntersection_Executable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitIntersection_Executable(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedExecutableType, PARAM)","u":"visitIntersection_Executable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitIntersection_Intersection(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedIntersectionType, PARAM)","u":"visitIntersection_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitIntersection_Intersection(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedIntersectionType, PARAM)","u":"visitIntersection_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"EquivalentAtmComboScanner","l":"visitIntersection_Intersection(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedIntersectionType, PARAM)","u":"visitIntersection_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitIntersection_Intersection(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedIntersectionType, Void)","u":"visitIntersection_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitIntersection_Intersection(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedIntersectionType, Void)","u":"visitIntersection_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"StructuralEqualityComparer","l":"visitIntersection_Intersection(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedIntersectionType, Void)","u":"visitIntersection_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitIntersection_None(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedNoType, PARAM)","u":"visitIntersection_None(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitIntersection_None(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedNoType, PARAM)","u":"visitIntersection_None(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitIntersection_Null(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedNullType, PARAM)","u":"visitIntersection_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitIntersection_Null(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedNullType, PARAM)","u":"visitIntersection_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitIntersection_Null(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedNullType, Void)","u":"visitIntersection_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitIntersection_Primitive(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedPrimitiveType, PARAM)","u":"visitIntersection_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitIntersection_Primitive(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedPrimitiveType, PARAM)","u":"visitIntersection_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitIntersection_Primitive(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedPrimitiveType, Void)","u":"visitIntersection_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitIntersection_Primitive(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedPrimitiveType, Void)","u":"visitIntersection_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitIntersection_Type(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror)","u":"visitIntersection_Type(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitIntersection_Typevar(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedTypeVariable, PARAM)","u":"visitIntersection_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitIntersection_Typevar(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedTypeVariable, PARAM)","u":"visitIntersection_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitIntersection_Typevar(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedTypeVariable, Void)","u":"visitIntersection_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitIntersection_Typevar(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedTypeVariable, Void)","u":"visitIntersection_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitIntersection_Union(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedUnionType, PARAM)","u":"visitIntersection_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitIntersection_Union(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedUnionType, PARAM)","u":"visitIntersection_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitIntersection_Union(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedUnionType, Void)","u":"visitIntersection_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitIntersection_Wildcard(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedWildcardType, PARAM)","u":"visitIntersection_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitIntersection_Wildcard(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedWildcardType, PARAM)","u":"visitIntersection_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitIntersection_Wildcard(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedWildcardType, Void)","u":"visitIntersection_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitIntersection_Wildcard(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror.AnnotatedWildcardType, Void)","u":"visitIntersection_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"DoubleAnnotatedTypeScanner","l":"visitIntersection(AnnotatedTypeMirror.AnnotatedIntersectionType, AnnotatedTypeMirror)","u":"visitIntersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeCopier","l":"visitIntersection(AnnotatedTypeMirror.AnnotatedIntersectionType, IdentityHashMap<AnnotatedTypeMirror, AnnotatedTypeMirror>)","u":"visitIntersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,java.util.IdentityHashMap)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"visitIntersection(AnnotatedTypeMirror.AnnotatedIntersectionType, P)","u":"visitIntersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeVisitor","l":"visitIntersection(AnnotatedTypeMirror.AnnotatedIntersectionType, P)","u":"visitIntersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeVisitor","l":"visitIntersection(AnnotatedTypeMirror.AnnotatedIntersectionType, P)","u":"visitIntersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,P)"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter.FormattingVisitor","l":"visitIntersection(AnnotatedTypeMirror.AnnotatedIntersectionType, Set<AnnotatedTypeMirror>)","u":"visitIntersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,java.util.Set)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitIntersectionType(IntersectionTypeTree, Node)","u":"visitIntersectionType(com.sun.source.tree.IntersectionTypeTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitIntersectionType(IntersectionTypeTree, Void)","u":"visitIntersectionType(com.sun.source.tree.IntersectionTypeTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitLabeledStatement(LabeledStatementTree, Node)","u":"visitLabeledStatement(com.sun.source.tree.LabeledStatementTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitLabeledStatement(LabeledStatementTree, Void)","u":"visitLabeledStatement(com.sun.source.tree.LabeledStatementTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitLabeledStatement(LabeledStatementTree, Void)","u":"visitLabeledStatement(com.sun.source.tree.LabeledStatementTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitLambdaExpression(LambdaExpressionTree, Node)","u":"visitLambdaExpression(com.sun.source.tree.LambdaExpressionTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"visitLambdaExpression(LambdaExpressionTree, Void)","u":"visitLambdaExpression(com.sun.source.tree.LambdaExpressionTree,java.lang.Void)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitLambdaExpression(LambdaExpressionTree, Void)","u":"visitLambdaExpression(com.sun.source.tree.LambdaExpressionTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitLambdaExpression(LambdaExpressionTree, Void)","u":"visitLambdaExpression(com.sun.source.tree.LambdaExpressionTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"ExpectedTreesVisitor","l":"visitLambdaExpression(LambdaExpressionTree, Void)","u":"visitLambdaExpression(com.sun.source.tree.LambdaExpressionTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitLambdaExpression(LambdaExpressionTree, Void)","u":"visitLambdaExpression(com.sun.source.tree.LambdaExpressionTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitLambdaResultExpression(LambdaResultExpressionNode, P)","u":"visitLambdaResultExpression(org.checkerframework.dataflow.cfg.node.LambdaResultExpressionNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitLambdaResultExpression(LambdaResultExpressionNode, P)","u":"visitLambdaResultExpression(org.checkerframework.dataflow.cfg.node.LambdaResultExpressionNode,P)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"visitLambdaResultExpression(LambdaResultExpressionNode, TransferInput<V, S>)","u":"visitLambdaResultExpression(org.checkerframework.dataflow.cfg.node.LambdaResultExpressionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitLeftShift(LeftShiftNode, P)","u":"visitLeftShift(org.checkerframework.dataflow.cfg.node.LeftShiftNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitLeftShift(LeftShiftNode, P)","u":"visitLeftShift(org.checkerframework.dataflow.cfg.node.LeftShiftNode,P)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitLeftShift(LeftShiftNode, TransferInput<CFValue, CFStore>)","u":"visitLeftShift(org.checkerframework.dataflow.cfg.node.LeftShiftNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitLessThan(LessThanNode, P)","u":"visitLessThan(org.checkerframework.dataflow.cfg.node.LessThanNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitLessThan(LessThanNode, P)","u":"visitLessThan(org.checkerframework.dataflow.cfg.node.LessThanNode,P)"},{"p":"org.checkerframework.checker.index","c":"IndexAbstractTransfer","l":"visitLessThan(LessThanNode, TransferInput<CFValue, CFStore>)","u":"visitLessThan(org.checkerframework.dataflow.cfg.node.LessThanNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.regex","c":"RegexTransfer","l":"visitLessThan(LessThanNode, TransferInput<CFValue, CFStore>)","u":"visitLessThan(org.checkerframework.dataflow.cfg.node.LessThanNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitLessThan(LessThanNode, TransferInput<CFValue, CFStore>)","u":"visitLessThan(org.checkerframework.dataflow.cfg.node.LessThanNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitLessThanOrEqual(LessThanOrEqualNode, P)","u":"visitLessThanOrEqual(org.checkerframework.dataflow.cfg.node.LessThanOrEqualNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitLessThanOrEqual(LessThanOrEqualNode, P)","u":"visitLessThanOrEqual(org.checkerframework.dataflow.cfg.node.LessThanOrEqualNode,P)"},{"p":"org.checkerframework.checker.index","c":"IndexAbstractTransfer","l":"visitLessThanOrEqual(LessThanOrEqualNode, TransferInput<CFValue, CFStore>)","u":"visitLessThanOrEqual(org.checkerframework.dataflow.cfg.node.LessThanOrEqualNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.regex","c":"RegexTransfer","l":"visitLessThanOrEqual(LessThanOrEqualNode, TransferInput<CFValue, CFStore>)","u":"visitLessThanOrEqual(org.checkerframework.dataflow.cfg.node.LessThanOrEqualNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitLessThanOrEqual(LessThanOrEqualNode, TransferInput<CFValue, CFStore>)","u":"visitLessThanOrEqual(org.checkerframework.dataflow.cfg.node.LessThanOrEqualNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitLists(List<? extends Tree>, List<? extends Node>)","u":"visitLists(java.util.List,java.util.List)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory.UpperBoundTreeAnnotator","l":"visitLiteral(LiteralTree, AnnotatedTypeMirror)","u":"visitLiteral(com.sun.source.tree.LiteralTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory.CommitmentTreeAnnotator","l":"visitLiteral(LiteralTree, AnnotatedTypeMirror)","u":"visitLiteral(com.sun.source.tree.LiteralTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.propkey","c":"PropertyKeyAnnotatedTypeFactory.KeyLookupTreeAnnotator","l":"visitLiteral(LiteralTree, AnnotatedTypeMirror)","u":"visitLiteral(com.sun.source.tree.LiteralTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.treeannotator","c":"LiteralTreeAnnotator","l":"visitLiteral(LiteralTree, AnnotatedTypeMirror)","u":"visitLiteral(com.sun.source.tree.LiteralTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitLiteral(LiteralTree, Node)","u":"visitLiteral(com.sun.source.tree.LiteralTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.common.util.debug","c":"TreeDebug.Visitor","l":"visitLiteral(LiteralTree, Void)","u":"visitLiteral(com.sun.source.tree.LiteralTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitLiteral(LiteralTree, Void)","u":"visitLiteral(com.sun.source.tree.LiteralTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitLiteral(LiteralTree, Void)","u":"visitLiteral(com.sun.source.tree.LiteralTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionScanner","l":"visitLocalVariable(LocalVariable, P)","u":"visitLocalVariable(org.checkerframework.dataflow.expression.LocalVariable,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionVisitor","l":"visitLocalVariable(LocalVariable, P)","u":"visitLocalVariable(org.checkerframework.dataflow.expression.LocalVariable,P)"},{"p":"org.checkerframework.common.value","c":"JavaExpressionOptimizer","l":"visitLocalVariable(LocalVariable, Void)","u":"visitLocalVariable(org.checkerframework.dataflow.expression.LocalVariable,java.lang.Void)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionConverter","l":"visitLocalVariable(LocalVariable, Void)","u":"visitLocalVariable(org.checkerframework.dataflow.expression.LocalVariable,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitLocalVariable(LocalVariableNode, P)","u":"visitLocalVariable(org.checkerframework.dataflow.cfg.node.LocalVariableNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitLocalVariable(LocalVariableNode, P)","u":"visitLocalVariable(org.checkerframework.dataflow.cfg.node.LocalVariableNode,P)"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"ConstantPropagationTransfer","l":"visitLocalVariable(LocalVariableNode, TransferInput<Constant, ConstantPropagationStore>)","u":"visitLocalVariable(org.checkerframework.dataflow.cfg.node.LocalVariableNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"visitLocalVariable(LocalVariableNode, TransferInput<V, S>)","u":"visitLocalVariable(org.checkerframework.dataflow.cfg.node.LocalVariableNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitLongLiteral(LongLiteralNode, P)","u":"visitLongLiteral(org.checkerframework.dataflow.cfg.node.LongLiteralNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitLongLiteral(LongLiteralNode, P)","u":"visitLongLiteral(org.checkerframework.dataflow.cfg.node.LongLiteralNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitMarker(MarkerNode, P)","u":"visitMarker(org.checkerframework.dataflow.cfg.node.MarkerNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitMarker(MarkerNode, P)","u":"visitMarker(org.checkerframework.dataflow.cfg.node.MarkerNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitMemberReference(FunctionalInterfaceNode, P)","u":"visitMemberReference(org.checkerframework.dataflow.cfg.node.FunctionalInterfaceNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitMemberReference(FunctionalInterfaceNode, P)","u":"visitMemberReference(org.checkerframework.dataflow.cfg.node.FunctionalInterfaceNode,P)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitMemberReference(MemberReferenceTree, Node)","u":"visitMemberReference(com.sun.source.tree.MemberReferenceTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitMemberReference(MemberReferenceTree, Void)","u":"visitMemberReference(com.sun.source.tree.MemberReferenceTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitMemberReference(MemberReferenceTree, Void)","u":"visitMemberReference(com.sun.source.tree.MemberReferenceTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitMemberReference(MemberReferenceTree, Void)","u":"visitMemberReference(com.sun.source.tree.MemberReferenceTree,java.lang.Void)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory.CommitmentTreeAnnotator","l":"visitMemberSelect(MemberSelectTree, AnnotatedTypeMirror)","u":"visitMemberSelect(com.sun.source.tree.MemberSelectTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory.NullnessTreeAnnotator","l":"visitMemberSelect(MemberSelectTree, AnnotatedTypeMirror)","u":"visitMemberSelect(com.sun.source.tree.MemberSelectTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.reflection","c":"ClassValAnnotatedTypeFactory.ClassValTreeAnnotator","l":"visitMemberSelect(MemberSelectTree, AnnotatedTypeMirror)","u":"visitMemberSelect(com.sun.source.tree.MemberSelectTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesTreeAnnotator","l":"visitMemberSelect(MemberSelectTree, AnnotatedTypeMirror)","u":"visitMemberSelect(com.sun.source.tree.MemberSelectTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitMemberSelect(MemberSelectTree, Node)","u":"visitMemberSelect(com.sun.source.tree.MemberSelectTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"visitMemberSelect(MemberSelectTree, Void)","u":"visitMemberSelect(com.sun.source.tree.MemberSelectTree,java.lang.Void)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"visitMemberSelect(MemberSelectTree, Void)","u":"visitMemberSelect(com.sun.source.tree.MemberSelectTree,java.lang.Void)"},{"p":"org.checkerframework.common.util.debug","c":"TreeDebug.Visitor","l":"visitMemberSelect(MemberSelectTree, Void)","u":"visitMemberSelect(com.sun.source.tree.MemberSelectTree,java.lang.Void)"},{"p":"org.checkerframework.common.util.report","c":"ReportVisitor","l":"visitMemberSelect(MemberSelectTree, Void)","u":"visitMemberSelect(com.sun.source.tree.MemberSelectTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitMemberSelect(MemberSelectTree, Void)","u":"visitMemberSelect(com.sun.source.tree.MemberSelectTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitMemberSelect(MemberSelectTree, Void)","u":"visitMemberSelect(com.sun.source.tree.MemberSelectTree,java.lang.Void)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory.CommitmentTreeAnnotator","l":"visitMethod(MethodTree, AnnotatedTypeMirror)","u":"visitMethod(com.sun.source.tree.MethodTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.treeannotator","c":"TreeAnnotator","l":"visitMethod(MethodTree, AnnotatedTypeMirror)","u":"visitMethod(com.sun.source.tree.MethodTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitMethod(MethodTree, Node)","u":"visitMethod(com.sun.source.tree.MethodTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.source","c":"SourceVisitor","l":"visitMethod(MethodTree, P)","u":"visitMethod(com.sun.source.tree.MethodTree,P)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsVisitor","l":"visitMethod(MethodTree, Void)","u":"visitMethod(com.sun.source.tree.MethodTree,java.lang.Void)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterVisitor","l":"visitMethod(MethodTree, Void)","u":"visitMethod(com.sun.source.tree.MethodTree,java.lang.Void)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"visitMethod(MethodTree, Void)","u":"visitMethod(com.sun.source.tree.MethodTree,java.lang.Void)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationVisitor","l":"visitMethod(MethodTree, Void)","u":"visitMethod(com.sun.source.tree.MethodTree,java.lang.Void)"},{"p":"org.checkerframework.checker.interning","c":"InterningVisitor","l":"visitMethod(MethodTree, Void)","u":"visitMethod(com.sun.source.tree.MethodTree,java.lang.Void)"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"visitMethod(MethodTree, Void)","u":"visitMethod(com.sun.source.tree.MethodTree,java.lang.Void)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"visitMethod(MethodTree, Void)","u":"visitMethod(com.sun.source.tree.MethodTree,java.lang.Void)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakVisitor","l":"visitMethod(MethodTree, Void)","u":"visitMethod(com.sun.source.tree.MethodTree,java.lang.Void)"},{"p":"org.checkerframework.checker.signedness","c":"SignednessVisitor","l":"visitMethod(MethodTree, Void)","u":"visitMethod(com.sun.source.tree.MethodTree,java.lang.Void)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitMethod(MethodTree, Void)","u":"visitMethod(com.sun.source.tree.MethodTree,java.lang.Void)"},{"p":"org.checkerframework.common.util.debug","c":"TypeOutputtingChecker.Visitor","l":"visitMethod(MethodTree, Void)","u":"visitMethod(com.sun.source.tree.MethodTree,java.lang.Void)"},{"p":"org.checkerframework.common.util.report","c":"ReportVisitor","l":"visitMethod(MethodTree, Void)","u":"visitMethod(com.sun.source.tree.MethodTree,java.lang.Void)"},{"p":"org.checkerframework.common.value","c":"ValueVisitor","l":"visitMethod(MethodTree, Void)","u":"visitMethod(com.sun.source.tree.MethodTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitMethod(MethodTree, Void)","u":"visitMethod(com.sun.source.tree.MethodTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"ExpectedTreesVisitor","l":"visitMethod(MethodTree, Void)","u":"visitMethod(com.sun.source.tree.MethodTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitMethod(MethodTree, Void)","u":"visitMethod(com.sun.source.tree.MethodTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitMethodAccess(MethodAccessNode, P)","u":"visitMethodAccess(org.checkerframework.dataflow.cfg.node.MethodAccessNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitMethodAccess(MethodAccessNode, P)","u":"visitMethodAccess(org.checkerframework.dataflow.cfg.node.MethodAccessNode,P)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessTransfer","l":"visitMethodAccess(MethodAccessNode, TransferInput<NullnessValue, NullnessStore>)","u":"visitMethodAccess(org.checkerframework.dataflow.cfg.node.MethodAccessNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionScanner","l":"visitMethodCall(MethodCall, P)","u":"visitMethodCall(org.checkerframework.dataflow.expression.MethodCall,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionVisitor","l":"visitMethodCall(MethodCall, P)","u":"visitMethodCall(org.checkerframework.dataflow.expression.MethodCall,P)"},{"p":"org.checkerframework.common.value","c":"JavaExpressionOptimizer","l":"visitMethodCall(MethodCall, Void)","u":"visitMethodCall(org.checkerframework.dataflow.expression.MethodCall,java.lang.Void)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionConverter","l":"visitMethodCall(MethodCall, Void)","u":"visitMethodCall(org.checkerframework.dataflow.expression.MethodCall,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitMethodInvocation(MethodInvocationNode, P)","u":"visitMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitMethodInvocation(MethodInvocationNode, P)","u":"visitMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,P)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsTransfer","l":"visitMethodInvocation(MethodInvocationNode, TransferInput<CFValue, CFStore>)","u":"visitMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTransfer","l":"visitMethodInvocation(MethodInvocationNode, TransferInput<CFValue, CFStore>)","u":"visitMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTransfer","l":"visitMethodInvocation(MethodInvocationNode, TransferInput<CFValue, CFStore>)","u":"visitMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundTransfer","l":"visitMethodInvocation(MethodInvocationNode, TransferInput<CFValue, CFStore>)","u":"visitMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallTransfer","l":"visitMethodInvocation(MethodInvocationNode, TransferInput<CFValue, CFStore>)","u":"visitMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.regex","c":"RegexTransfer","l":"visitMethodInvocation(MethodInvocationNode, TransferInput<CFValue, CFStore>)","u":"visitMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakTransfer","l":"visitMethodInvocation(MethodInvocationNode, TransferInput<CFValue, CFStore>)","u":"visitMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.signature","c":"SignatureTransfer","l":"visitMethodInvocation(MethodInvocationNode, TransferInput<CFValue, CFStore>)","u":"visitMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.common.aliasing","c":"AliasingTransfer","l":"visitMethodInvocation(MethodInvocationNode, TransferInput<CFValue, CFStore>)","u":"visitMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitMethodInvocation(MethodInvocationNode, TransferInput<CFValue, CFStore>)","u":"visitMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForTransfer","l":"visitMethodInvocation(MethodInvocationNode, TransferInput<KeyForValue, KeyForStore>)","u":"visitMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessTransfer","l":"visitMethodInvocation(MethodInvocationNode, TransferInput<NullnessValue, NullnessStore>)","u":"visitMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprTransfer","l":"visitMethodInvocation(MethodInvocationNode, TransferInput<UnusedAbstractValue, BusyExprStore>)","u":"visitMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarTransfer","l":"visitMethodInvocation(MethodInvocationNode, TransferInput<UnusedAbstractValue, LiveVarStore>)","u":"visitMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationTransfer","l":"visitMethodInvocation(MethodInvocationNode, TransferInput<V, S>)","u":"visitMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"visitMethodInvocation(MethodInvocationNode, TransferInput<V, S>)","u":"visitMethodInvocation(org.checkerframework.dataflow.cfg.node.MethodInvocationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory.UpperBoundTreeAnnotator","l":"visitMethodInvocation(MethodInvocationTree, AnnotatedTypeMirror)","u":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory.NullnessTreeAnnotator","l":"visitMethodInvocation(MethodInvocationTree, AnnotatedTypeMirror)","u":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.accumulation","c":"AccumulationAnnotatedTypeFactory.AccumulationTreeAnnotator","l":"visitMethodInvocation(MethodInvocationTree, AnnotatedTypeMirror)","u":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.reflection","c":"ClassValAnnotatedTypeFactory.ClassValTreeAnnotator","l":"visitMethodInvocation(MethodInvocationTree, AnnotatedTypeMirror)","u":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.reflection","c":"MethodValAnnotatedTypeFactory.MethodValTreeAnnotator","l":"visitMethodInvocation(MethodInvocationTree, AnnotatedTypeMirror)","u":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitMethodInvocation(MethodInvocationTree, Node)","u":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.checker.calledmethods","c":"CalledMethodsVisitor","l":"visitMethodInvocation(MethodInvocationTree, Void)","u":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,java.lang.Void)"},{"p":"org.checkerframework.checker.formatter","c":"FormatterVisitor","l":"visitMethodInvocation(MethodInvocationTree, Void)","u":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,java.lang.Void)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"visitMethodInvocation(MethodInvocationTree, Void)","u":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,java.lang.Void)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterVisitor","l":"visitMethodInvocation(MethodInvocationTree, Void)","u":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,java.lang.Void)"},{"p":"org.checkerframework.checker.interning","c":"InterningVisitor","l":"visitMethodInvocation(MethodInvocationTree, Void)","u":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,java.lang.Void)"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"visitMethodInvocation(MethodInvocationTree, Void)","u":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,java.lang.Void)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"visitMethodInvocation(MethodInvocationTree, Void)","u":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,java.lang.Void)"},{"p":"org.checkerframework.checker.optional","c":"OptionalVisitor","l":"visitMethodInvocation(MethodInvocationTree, Void)","u":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,java.lang.Void)"},{"p":"org.checkerframework.checker.regex","c":"RegexVisitor","l":"visitMethodInvocation(MethodInvocationTree, Void)","u":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,java.lang.Void)"},{"p":"org.checkerframework.checker.signedness","c":"SignednessVisitor","l":"visitMethodInvocation(MethodInvocationTree, Void)","u":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,java.lang.Void)"},{"p":"org.checkerframework.common.aliasing","c":"AliasingVisitor","l":"visitMethodInvocation(MethodInvocationTree, Void)","u":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,java.lang.Void)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitMethodInvocation(MethodInvocationTree, Void)","u":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,java.lang.Void)"},{"p":"org.checkerframework.common.util.report","c":"ReportVisitor","l":"visitMethodInvocation(MethodInvocationTree, Void)","u":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitMethodInvocation(MethodInvocationTree, Void)","u":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker.PurityCheckerHelper","l":"visitMethodInvocation(MethodInvocationTree, Void)","u":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"ExpectedTreesVisitor","l":"visitMethodInvocation(MethodInvocationTree, Void)","u":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitMethodInvocation(MethodInvocationTree, Void)","u":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitModifiers(ModifiersTree, Node)","u":"visitModifiers(com.sun.source.tree.ModifiersTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.common.util.report","c":"ReportVisitor","l":"visitModifiers(ModifiersTree, Void)","u":"visitModifiers(com.sun.source.tree.ModifiersTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitModifiers(ModifiersTree, Void)","u":"visitModifiers(com.sun.source.tree.ModifiersTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"ExpectedTreesVisitor","l":"visitModifiers(ModifiersTree, Void)","u":"visitModifiers(com.sun.source.tree.ModifiersTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitModifiers(ModifiersTree, Void)","u":"visitModifiers(com.sun.source.tree.ModifiersTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitModule(ModuleTree, Node)","u":"visitModule(com.sun.source.tree.ModuleTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitModule(ModuleTree, Void)","u":"visitModule(com.sun.source.tree.ModuleTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitNarrowingConversion(NarrowingConversionNode, P)","u":"visitNarrowingConversion(org.checkerframework.dataflow.cfg.node.NarrowingConversionNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitNarrowingConversion(NarrowingConversionNode, P)","u":"visitNarrowingConversion(org.checkerframework.dataflow.cfg.node.NarrowingConversionNode,P)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"visitNarrowingConversion(NarrowingConversionNode, TransferInput<V, S>)","u":"visitNarrowingConversion(org.checkerframework.dataflow.cfg.node.NarrowingConversionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.samelen","c":"SameLenAnnotatedTypeFactory.SameLenTreeAnnotator","l":"visitNewArray(NewArrayTree, AnnotatedTypeMirror)","u":"visitNewArray(com.sun.source.tree.NewArrayTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.lock","c":"LockTreeAnnotator","l":"visitNewArray(NewArrayTree, AnnotatedTypeMirror)","u":"visitNewArray(com.sun.source.tree.NewArrayTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory.NullnessTreeAnnotator","l":"visitNewArray(NewArrayTree, AnnotatedTypeMirror)","u":"visitNewArray(com.sun.source.tree.NewArrayTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.aliasing","c":"AliasingAnnotatedTypeFactory.AliasingTreeAnnotator","l":"visitNewArray(NewArrayTree, AnnotatedTypeMirror)","u":"visitNewArray(com.sun.source.tree.NewArrayTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.treeannotator","c":"PropagationTreeAnnotator","l":"visitNewArray(NewArrayTree, AnnotatedTypeMirror)","u":"visitNewArray(com.sun.source.tree.NewArrayTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesTreeAnnotator","l":"visitNewArray(NewArrayTree, AnnotatedTypeMirror)","u":"visitNewArray(com.sun.source.tree.NewArrayTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitNewArray(NewArrayTree, Node)","u":"visitNewArray(com.sun.source.tree.NewArrayTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundVisitor","l":"visitNewArray(NewArrayTree, Void)","u":"visitNewArray(com.sun.source.tree.NewArrayTree,java.lang.Void)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"visitNewArray(NewArrayTree, Void)","u":"visitNewArray(com.sun.source.tree.NewArrayTree,java.lang.Void)"},{"p":"org.checkerframework.common.aliasing","c":"AliasingVisitor","l":"visitNewArray(NewArrayTree, Void)","u":"visitNewArray(com.sun.source.tree.NewArrayTree,java.lang.Void)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitNewArray(NewArrayTree, Void)","u":"visitNewArray(com.sun.source.tree.NewArrayTree,java.lang.Void)"},{"p":"org.checkerframework.common.util.debug","c":"TreeDebug.Visitor","l":"visitNewArray(NewArrayTree, Void)","u":"visitNewArray(com.sun.source.tree.NewArrayTree,java.lang.Void)"},{"p":"org.checkerframework.common.util.report","c":"ReportVisitor","l":"visitNewArray(NewArrayTree, Void)","u":"visitNewArray(com.sun.source.tree.NewArrayTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitNewArray(NewArrayTree, Void)","u":"visitNewArray(com.sun.source.tree.NewArrayTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"ExpectedTreesVisitor","l":"visitNewArray(NewArrayTree, Void)","u":"visitNewArray(com.sun.source.tree.NewArrayTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitNewArray(NewArrayTree, Void)","u":"visitNewArray(com.sun.source.tree.NewArrayTree,java.lang.Void)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationAnnotatedTypeFactory.CommitmentTreeAnnotator","l":"visitNewClass(NewClassTree, AnnotatedTypeMirror)","u":"visitNewClass(com.sun.source.tree.NewClassTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForPropagationTreeAnnotator","l":"visitNewClass(NewClassTree, AnnotatedTypeMirror)","u":"visitNewClass(com.sun.source.tree.NewClassTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory.NullnessTreeAnnotator","l":"visitNewClass(NewClassTree, AnnotatedTypeMirror)","u":"visitNewClass(com.sun.source.tree.NewClassTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitNewClass(NewClassTree, Node)","u":"visitNewClass(com.sun.source.tree.NewClassTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.checker.guieffect","c":"GuiEffectVisitor","l":"visitNewClass(NewClassTree, Void)","u":"visitNewClass(com.sun.source.tree.NewClassTree,java.lang.Void)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"visitNewClass(NewClassTree, Void)","u":"visitNewClass(com.sun.source.tree.NewClassTree,java.lang.Void)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitNewClass(NewClassTree, Void)","u":"visitNewClass(com.sun.source.tree.NewClassTree,java.lang.Void)"},{"p":"org.checkerframework.common.util.report","c":"ReportVisitor","l":"visitNewClass(NewClassTree, Void)","u":"visitNewClass(com.sun.source.tree.NewClassTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitNewClass(NewClassTree, Void)","u":"visitNewClass(com.sun.source.tree.NewClassTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker.PurityCheckerHelper","l":"visitNewClass(NewClassTree, Void)","u":"visitNewClass(com.sun.source.tree.NewClassTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"ExpectedTreesVisitor","l":"visitNewClass(NewClassTree, Void)","u":"visitNewClass(com.sun.source.tree.NewClassTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitNewClass(NewClassTree, Void)","u":"visitNewClass(com.sun.source.tree.NewClassTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitNode(Node, P)","u":"visitNode(org.checkerframework.dataflow.cfg.node.Node,P)"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"ConstantPropagationTransfer","l":"visitNode(Node, TransferInput<Constant, ConstantPropagationStore>)","u":"visitNode(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprTransfer","l":"visitNode(Node, TransferInput<UnusedAbstractValue, BusyExprStore>)","u":"visitNode(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarTransfer","l":"visitNode(Node, TransferInput<UnusedAbstractValue, LiveVarStore>)","u":"visitNode(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.reachingdef","c":"ReachingDefinitionTransfer","l":"visitNode(Node, TransferInput<UnusedAbstractValue, ReachingDefinitionStore>)","u":"visitNode(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"visitNode(Node, TransferInput<V, S>)","u":"visitNode(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitNone_Array(AnnotatedTypeMirror.AnnotatedNoType, AnnotatedTypeMirror.AnnotatedArrayType, PARAM)","u":"visitNone_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitNone_Array(AnnotatedTypeMirror.AnnotatedNoType, AnnotatedTypeMirror.AnnotatedArrayType, PARAM)","u":"visitNone_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitNone_Declared(AnnotatedTypeMirror.AnnotatedNoType, AnnotatedTypeMirror.AnnotatedDeclaredType, PARAM)","u":"visitNone_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitNone_Declared(AnnotatedTypeMirror.AnnotatedNoType, AnnotatedTypeMirror.AnnotatedDeclaredType, PARAM)","u":"visitNone_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitNone_Executable(AnnotatedTypeMirror.AnnotatedNoType, AnnotatedTypeMirror.AnnotatedExecutableType, PARAM)","u":"visitNone_Executable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitNone_Executable(AnnotatedTypeMirror.AnnotatedNoType, AnnotatedTypeMirror.AnnotatedExecutableType, PARAM)","u":"visitNone_Executable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitNone_Intersection(AnnotatedTypeMirror.AnnotatedNoType, AnnotatedTypeMirror.AnnotatedIntersectionType, PARAM)","u":"visitNone_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitNone_Intersection(AnnotatedTypeMirror.AnnotatedNoType, AnnotatedTypeMirror.AnnotatedIntersectionType, PARAM)","u":"visitNone_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitNone_None(AnnotatedTypeMirror.AnnotatedNoType, AnnotatedTypeMirror.AnnotatedNoType, PARAM)","u":"visitNone_None(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitNone_None(AnnotatedTypeMirror.AnnotatedNoType, AnnotatedTypeMirror.AnnotatedNoType, PARAM)","u":"visitNone_None(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"EquivalentAtmComboScanner","l":"visitNone_None(AnnotatedTypeMirror.AnnotatedNoType, AnnotatedTypeMirror.AnnotatedNoType, PARAM)","u":"visitNone_None(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitNone_Null(AnnotatedTypeMirror.AnnotatedNoType, AnnotatedTypeMirror.AnnotatedNullType, PARAM)","u":"visitNone_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitNone_Null(AnnotatedTypeMirror.AnnotatedNoType, AnnotatedTypeMirror.AnnotatedNullType, PARAM)","u":"visitNone_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitNone_Primitive(AnnotatedTypeMirror.AnnotatedNoType, AnnotatedTypeMirror.AnnotatedPrimitiveType, PARAM)","u":"visitNone_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitNone_Primitive(AnnotatedTypeMirror.AnnotatedNoType, AnnotatedTypeMirror.AnnotatedPrimitiveType, PARAM)","u":"visitNone_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitNone_Union(AnnotatedTypeMirror.AnnotatedNoType, AnnotatedTypeMirror.AnnotatedUnionType, PARAM)","u":"visitNone_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitNone_Union(AnnotatedTypeMirror.AnnotatedNoType, AnnotatedTypeMirror.AnnotatedUnionType, PARAM)","u":"visitNone_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitNone_Wildcard(AnnotatedTypeMirror.AnnotatedNoType, AnnotatedTypeMirror.AnnotatedWildcardType, PARAM)","u":"visitNone_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitNone_Wildcard(AnnotatedTypeMirror.AnnotatedNoType, AnnotatedTypeMirror.AnnotatedWildcardType, PARAM)","u":"visitNone_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,PARAM)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitNotEqual(NotEqualNode, P)","u":"visitNotEqual(org.checkerframework.dataflow.cfg.node.NotEqualNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitNotEqual(NotEqualNode, P)","u":"visitNotEqual(org.checkerframework.dataflow.cfg.node.NotEqualNode,P)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitNotEqual(NotEqualNode, TransferInput<CFValue, CFStore>)","u":"visitNotEqual(org.checkerframework.dataflow.cfg.node.NotEqualNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"visitNotEqual(NotEqualNode, TransferInput<V, S>)","u":"visitNotEqual(org.checkerframework.dataflow.cfg.node.NotEqualNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeCopier","l":"visitNoType(AnnotatedTypeMirror.AnnotatedNoType, IdentityHashMap<AnnotatedTypeMirror, AnnotatedTypeMirror>)","u":"visitNoType(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,java.util.IdentityHashMap)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"visitNoType(AnnotatedTypeMirror.AnnotatedNoType, P)","u":"visitNoType(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeVisitor","l":"visitNoType(AnnotatedTypeMirror.AnnotatedNoType, P)","u":"visitNoType(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeScanner","l":"visitNoType(AnnotatedTypeMirror.AnnotatedNoType, P)","u":"visitNoType(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeVisitor","l":"visitNoType(AnnotatedTypeMirror.AnnotatedNoType, P)","u":"visitNoType(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,P)"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter.FormattingVisitor","l":"visitNoType(AnnotatedTypeMirror.AnnotatedNoType, Set<AnnotatedTypeMirror>)","u":"visitNoType(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,java.util.Set)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitNull_Array(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedArrayType, PARAM)","u":"visitNull_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitNull_Array(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedArrayType, PARAM)","u":"visitNull_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitNull_Array(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedArrayType, Void)","u":"visitNull_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitNull_Declared(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedDeclaredType, PARAM)","u":"visitNull_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitNull_Declared(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedDeclaredType, PARAM)","u":"visitNull_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitNull_Declared(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedDeclaredType, Void)","u":"visitNull_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitNull_Executable(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedExecutableType, PARAM)","u":"visitNull_Executable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitNull_Executable(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedExecutableType, PARAM)","u":"visitNull_Executable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitNull_Intersection(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedIntersectionType, PARAM)","u":"visitNull_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitNull_Intersection(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedIntersectionType, PARAM)","u":"visitNull_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitNull_Intersection(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedIntersectionType, Void)","u":"visitNull_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitNull_None(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedNoType, PARAM)","u":"visitNull_None(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitNull_None(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedNoType, PARAM)","u":"visitNull_None(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitNull_Null(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedNullType, PARAM)","u":"visitNull_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitNull_Null(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedNullType, PARAM)","u":"visitNull_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"EquivalentAtmComboScanner","l":"visitNull_Null(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedNullType, PARAM)","u":"visitNull_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitNull_Null(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedNullType, Void)","u":"visitNull_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitNull_Primitive(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedPrimitiveType, PARAM)","u":"visitNull_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitNull_Primitive(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedPrimitiveType, PARAM)","u":"visitNull_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitNull_Primitive(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedPrimitiveType, Void)","u":"visitNull_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitNull_Typevar(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedTypeVariable, PARAM)","u":"visitNull_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitNull_Typevar(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedTypeVariable, PARAM)","u":"visitNull_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,PARAM)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitNull_Typevar(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedTypeVariable, Void)","u":"visitNull_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitNull_Union(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedUnionType, PARAM)","u":"visitNull_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitNull_Union(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedUnionType, PARAM)","u":"visitNull_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitNull_Union(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedUnionType, Void)","u":"visitNull_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitNull_Wildcard(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedWildcardType, PARAM)","u":"visitNull_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitNull_Wildcard(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedWildcardType, PARAM)","u":"visitNull_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitNull_Wildcard(AnnotatedTypeMirror.AnnotatedNullType, AnnotatedTypeMirror.AnnotatedWildcardType, Void)","u":"visitNull_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeCopier","l":"visitNull(AnnotatedTypeMirror.AnnotatedNullType, IdentityHashMap<AnnotatedTypeMirror, AnnotatedTypeMirror>)","u":"visitNull(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,java.util.IdentityHashMap)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"visitNull(AnnotatedTypeMirror.AnnotatedNullType, P)","u":"visitNull(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeVisitor","l":"visitNull(AnnotatedTypeMirror.AnnotatedNullType, P)","u":"visitNull(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeScanner","l":"visitNull(AnnotatedTypeMirror.AnnotatedNullType, P)","u":"visitNull(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeVisitor","l":"visitNull(AnnotatedTypeMirror.AnnotatedNullType, P)","u":"visitNull(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,P)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFormatter.NullnessFormattingVisitor","l":"visitNull(AnnotatedTypeMirror.AnnotatedNullType, Set<AnnotatedTypeMirror>)","u":"visitNull(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,java.util.Set)"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter.FormattingVisitor","l":"visitNull(AnnotatedTypeMirror.AnnotatedNullType, Set<AnnotatedTypeMirror>)","u":"visitNull(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,java.util.Set)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitNullChk(NullChkNode, P)","u":"visitNullChk(org.checkerframework.dataflow.cfg.node.NullChkNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitNullChk(NullChkNode, P)","u":"visitNullChk(org.checkerframework.dataflow.cfg.node.NullChkNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitNullLiteral(NullLiteralNode, P)","u":"visitNullLiteral(org.checkerframework.dataflow.cfg.node.NullLiteralNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitNullLiteral(NullLiteralNode, P)","u":"visitNullLiteral(org.checkerframework.dataflow.cfg.node.NullLiteralNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitNumericalAddition(NumericalAdditionNode, P)","u":"visitNumericalAddition(org.checkerframework.dataflow.cfg.node.NumericalAdditionNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitNumericalAddition(NumericalAdditionNode, P)","u":"visitNumericalAddition(org.checkerframework.dataflow.cfg.node.NumericalAdditionNode,P)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"visitNumericalAddition(NumericalAdditionNode, TransferInput<CFValue, CFStore>)","u":"visitNumericalAddition(org.checkerframework.dataflow.cfg.node.NumericalAdditionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundTransfer","l":"visitNumericalAddition(NumericalAdditionNode, TransferInput<CFValue, CFStore>)","u":"visitNumericalAddition(org.checkerframework.dataflow.cfg.node.NumericalAdditionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitNumericalAddition(NumericalAdditionNode, TransferInput<CFValue, CFStore>)","u":"visitNumericalAddition(org.checkerframework.dataflow.cfg.node.NumericalAdditionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitNumericalMinus(NumericalMinusNode, P)","u":"visitNumericalMinus(org.checkerframework.dataflow.cfg.node.NumericalMinusNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitNumericalMinus(NumericalMinusNode, P)","u":"visitNumericalMinus(org.checkerframework.dataflow.cfg.node.NumericalMinusNode,P)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitNumericalMinus(NumericalMinusNode, TransferInput<CFValue, CFStore>)","u":"visitNumericalMinus(org.checkerframework.dataflow.cfg.node.NumericalMinusNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitNumericalMultiplication(NumericalMultiplicationNode, P)","u":"visitNumericalMultiplication(org.checkerframework.dataflow.cfg.node.NumericalMultiplicationNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitNumericalMultiplication(NumericalMultiplicationNode, P)","u":"visitNumericalMultiplication(org.checkerframework.dataflow.cfg.node.NumericalMultiplicationNode,P)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"visitNumericalMultiplication(NumericalMultiplicationNode, TransferInput<CFValue, CFStore>)","u":"visitNumericalMultiplication(org.checkerframework.dataflow.cfg.node.NumericalMultiplicationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitNumericalMultiplication(NumericalMultiplicationNode, TransferInput<CFValue, CFStore>)","u":"visitNumericalMultiplication(org.checkerframework.dataflow.cfg.node.NumericalMultiplicationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitNumericalPlus(NumericalPlusNode, P)","u":"visitNumericalPlus(org.checkerframework.dataflow.cfg.node.NumericalPlusNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitNumericalPlus(NumericalPlusNode, P)","u":"visitNumericalPlus(org.checkerframework.dataflow.cfg.node.NumericalPlusNode,P)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitNumericalPlus(NumericalPlusNode, TransferInput<CFValue, CFStore>)","u":"visitNumericalPlus(org.checkerframework.dataflow.cfg.node.NumericalPlusNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitNumericalSubtraction(NumericalSubtractionNode, P)","u":"visitNumericalSubtraction(org.checkerframework.dataflow.cfg.node.NumericalSubtractionNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitNumericalSubtraction(NumericalSubtractionNode, P)","u":"visitNumericalSubtraction(org.checkerframework.dataflow.cfg.node.NumericalSubtractionNode,P)"},{"p":"org.checkerframework.checker.index.inequality","c":"LessThanTransfer","l":"visitNumericalSubtraction(NumericalSubtractionNode, TransferInput<CFValue, CFStore>)","u":"visitNumericalSubtraction(org.checkerframework.dataflow.cfg.node.NumericalSubtractionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"visitNumericalSubtraction(NumericalSubtractionNode, TransferInput<CFValue, CFStore>)","u":"visitNumericalSubtraction(org.checkerframework.dataflow.cfg.node.NumericalSubtractionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundTransfer","l":"visitNumericalSubtraction(NumericalSubtractionNode, TransferInput<CFValue, CFStore>)","u":"visitNumericalSubtraction(org.checkerframework.dataflow.cfg.node.NumericalSubtractionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitNumericalSubtraction(NumericalSubtractionNode, TransferInput<CFValue, CFStore>)","u":"visitNumericalSubtraction(org.checkerframework.dataflow.cfg.node.NumericalSubtractionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitObjectCreation(ObjectCreationNode, P)","u":"visitObjectCreation(org.checkerframework.dataflow.cfg.node.ObjectCreationNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitObjectCreation(ObjectCreationNode, P)","u":"visitObjectCreation(org.checkerframework.dataflow.cfg.node.ObjectCreationNode,P)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallTransfer","l":"visitObjectCreation(ObjectCreationNode, TransferInput<CFValue, CFStore>)","u":"visitObjectCreation(org.checkerframework.dataflow.cfg.node.ObjectCreationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakTransfer","l":"visitObjectCreation(ObjectCreationNode, TransferInput<CFValue, CFStore>)","u":"visitObjectCreation(org.checkerframework.dataflow.cfg.node.ObjectCreationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprTransfer","l":"visitObjectCreation(ObjectCreationNode, TransferInput<UnusedAbstractValue, BusyExprStore>)","u":"visitObjectCreation(org.checkerframework.dataflow.cfg.node.ObjectCreationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarTransfer","l":"visitObjectCreation(ObjectCreationNode, TransferInput<UnusedAbstractValue, LiveVarStore>)","u":"visitObjectCreation(org.checkerframework.dataflow.cfg.node.ObjectCreationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"visitObjectCreation(ObjectCreationNode, TransferInput<V, S>)","u":"visitObjectCreation(org.checkerframework.dataflow.cfg.node.ObjectCreationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitOpens(OpensTree, Node)","u":"visitOpens(com.sun.source.tree.OpensTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitOpens(OpensTree, Void)","u":"visitOpens(com.sun.source.tree.OpensTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitOptional(Tree, Optional<? extends Node>)","u":"visitOptional(com.sun.source.tree.Tree,java.util.Optional)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"visitor"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"visitor"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"A2FReducer","l":"visitor"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"F2AReducer","l":"visitor"},{"p":"org.checkerframework.framework.util.typeinference.constraint","c":"FIsAReducer","l":"visitor"},{"p":"org.checkerframework.common.util.debug","c":"TreeDebug.Visitor","l":"Visitor()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.common.util.debug","c":"TypeOutputtingChecker.Visitor","l":"Visitor(BaseTypeChecker)","u":"%3Cinit%3E(org.checkerframework.common.basetype.BaseTypeChecker)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeCopierWithReplacement.Visitor","l":"Visitor(IdentityHashMap<? extends AnnotatedTypeMirror, ? extends AnnotatedTypeMirror>)","u":"%3Cinit%3E(java.util.IdentityHashMap)"},{"p":"org.checkerframework.framework.type","c":"TypeVariableSubstitutor.Visitor","l":"Visitor(Map<TypeVariable, AnnotatedTypeMirror>, boolean)","u":"%3Cinit%3E(java.util.Map,boolean)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitOther(Tree, Node)","u":"visitOther(com.sun.source.tree.Tree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitOther(Tree, Void)","u":"visitOther(com.sun.source.tree.Tree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitOther(Tree, Void)","u":"visitOther(com.sun.source.tree.Tree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitPackage(PackageTree, Node)","u":"visitPackage(com.sun.source.tree.PackageTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitPackage(PackageTree, Void)","u":"visitPackage(com.sun.source.tree.PackageTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitPackageName(PackageNameNode, P)","u":"visitPackageName(org.checkerframework.dataflow.cfg.node.PackageNameNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitPackageName(PackageNameNode, P)","u":"visitPackageName(org.checkerframework.dataflow.cfg.node.PackageNameNode,P)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"visitParameterizedType(AnnotatedTypeMirror.AnnotatedDeclaredType, ParameterizedTypeTree)","u":"visitParameterizedType(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,com.sun.source.tree.ParameterizedTypeTree)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitParameterizedType(ParameterizedTypeNode, P)","u":"visitParameterizedType(org.checkerframework.dataflow.cfg.node.ParameterizedTypeNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitParameterizedType(ParameterizedTypeNode, P)","u":"visitParameterizedType(org.checkerframework.dataflow.cfg.node.ParameterizedTypeNode,P)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitParameterizedType(ParameterizedTypeTree, Node)","u":"visitParameterizedType(com.sun.source.tree.ParameterizedTypeTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitParameterizedType(ParameterizedTypeTree, Void)","u":"visitParameterizedType(com.sun.source.tree.ParameterizedTypeTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitParameterizedType(ParameterizedTypeTree, Void)","u":"visitParameterizedType(com.sun.source.tree.ParameterizedTypeTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitParenthesized(ParenthesizedTree, Node)","u":"visitParenthesized(com.sun.source.tree.ParenthesizedTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitParenthesized(ParenthesizedTree, Void)","u":"visitParenthesized(com.sun.source.tree.ParenthesizedTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitParenthesized(ParenthesizedTree, Void)","u":"visitParenthesized(com.sun.source.tree.ParenthesizedTree,java.lang.Void)"},{"p":"org.checkerframework.framework.util","c":"Heuristics.Matcher","l":"visitParenthesized(ParenthesizedTree, Void)","u":"visitParenthesized(com.sun.source.tree.ParenthesizedTree,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitPrimitive_Array(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedArrayType, PARAM)","u":"visitPrimitive_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitPrimitive_Array(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedArrayType, PARAM)","u":"visitPrimitive_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitPrimitive_Declared(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedDeclaredType, PARAM)","u":"visitPrimitive_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitPrimitive_Declared(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedDeclaredType, PARAM)","u":"visitPrimitive_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitPrimitive_Declared(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedDeclaredType, Void)","u":"visitPrimitive_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitPrimitive_Declared(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedDeclaredType, Void)","u":"visitPrimitive_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"StructuralEqualityComparer","l":"visitPrimitive_Declared(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedDeclaredType, Void)","u":"visitPrimitive_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitPrimitive_Executable(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedExecutableType, PARAM)","u":"visitPrimitive_Executable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitPrimitive_Executable(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedExecutableType, PARAM)","u":"visitPrimitive_Executable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitPrimitive_Intersection(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedIntersectionType, PARAM)","u":"visitPrimitive_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitPrimitive_Intersection(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedIntersectionType, PARAM)","u":"visitPrimitive_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitPrimitive_Intersection(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedIntersectionType, Void)","u":"visitPrimitive_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitPrimitive_Intersection(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedIntersectionType, Void)","u":"visitPrimitive_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitPrimitive_None(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedNoType, PARAM)","u":"visitPrimitive_None(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitPrimitive_None(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedNoType, PARAM)","u":"visitPrimitive_None(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitPrimitive_Null(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedNullType, PARAM)","u":"visitPrimitive_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitPrimitive_Null(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedNullType, PARAM)","u":"visitPrimitive_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitPrimitive_Primitive(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedPrimitiveType, PARAM)","u":"visitPrimitive_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitPrimitive_Primitive(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedPrimitiveType, PARAM)","u":"visitPrimitive_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"EquivalentAtmComboScanner","l":"visitPrimitive_Primitive(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedPrimitiveType, PARAM)","u":"visitPrimitive_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitPrimitive_Primitive(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedPrimitiveType, Void)","u":"visitPrimitive_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitPrimitive_Primitive(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedPrimitiveType, Void)","u":"visitPrimitive_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"StructuralEqualityComparer","l":"visitPrimitive_Primitive(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedPrimitiveType, Void)","u":"visitPrimitive_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitPrimitive_Typevar(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedTypeVariable, PARAM)","u":"visitPrimitive_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitPrimitive_Typevar(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedTypeVariable, PARAM)","u":"visitPrimitive_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitPrimitive_Typevar(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedTypeVariable, Void)","u":"visitPrimitive_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitPrimitive_Typevar(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedTypeVariable, Void)","u":"visitPrimitive_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitPrimitive_Union(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedUnionType, PARAM)","u":"visitPrimitive_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitPrimitive_Union(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedUnionType, PARAM)","u":"visitPrimitive_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitPrimitive_Union(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedUnionType, Void)","u":"visitPrimitive_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitPrimitive_Wildcard(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedWildcardType, PARAM)","u":"visitPrimitive_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitPrimitive_Wildcard(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedWildcardType, PARAM)","u":"visitPrimitive_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitPrimitive_Wildcard(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedWildcardType, Void)","u":"visitPrimitive_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitPrimitive_Wildcard(AnnotatedTypeMirror.AnnotatedPrimitiveType, AnnotatedTypeMirror.AnnotatedWildcardType, Void)","u":"visitPrimitive_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeCopier","l":"visitPrimitive(AnnotatedTypeMirror.AnnotatedPrimitiveType, IdentityHashMap<AnnotatedTypeMirror, AnnotatedTypeMirror>)","u":"visitPrimitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,java.util.IdentityHashMap)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"visitPrimitive(AnnotatedTypeMirror.AnnotatedPrimitiveType, P)","u":"visitPrimitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeVisitor","l":"visitPrimitive(AnnotatedTypeMirror.AnnotatedPrimitiveType, P)","u":"visitPrimitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeScanner","l":"visitPrimitive(AnnotatedTypeMirror.AnnotatedPrimitiveType, P)","u":"visitPrimitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeVisitor","l":"visitPrimitive(AnnotatedTypeMirror.AnnotatedPrimitiveType, P)","u":"visitPrimitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,P)"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter.FormattingVisitor","l":"visitPrimitive(AnnotatedTypeMirror.AnnotatedPrimitiveType, Set<AnnotatedTypeMirror>)","u":"visitPrimitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,java.util.Set)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"visitPrimitive(AnnotatedTypeMirror.AnnotatedPrimitiveType, Tree)","u":"visitPrimitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallTypeAnnotator","l":"visitPrimitive(AnnotatedTypeMirror.AnnotatedPrimitiveType, Void)","u":"visitPrimitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitPrimitiveType(PrimitiveTypeNode, P)","u":"visitPrimitiveType(org.checkerframework.dataflow.cfg.node.PrimitiveTypeNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitPrimitiveType(PrimitiveTypeNode, P)","u":"visitPrimitiveType(org.checkerframework.dataflow.cfg.node.PrimitiveTypeNode,P)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitPrimitiveType(PrimitiveTypeTree, Node)","u":"visitPrimitiveType(com.sun.source.tree.PrimitiveTypeTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitPrimitiveType(PrimitiveTypeTree, Void)","u":"visitPrimitiveType(com.sun.source.tree.PrimitiveTypeTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitPrimitiveType(PrimitiveTypeTree, Void)","u":"visitPrimitiveType(com.sun.source.tree.PrimitiveTypeTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitProvides(ProvidesTree, Node)","u":"visitProvides(com.sun.source.tree.ProvidesTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitProvides(ProvidesTree, Void)","u":"visitProvides(com.sun.source.tree.ProvidesTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitRequires(RequiresTree, Node)","u":"visitRequires(com.sun.source.tree.RequiresTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitRequires(RequiresTree, Void)","u":"visitRequires(com.sun.source.tree.RequiresTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitReturn(ReturnNode, P)","u":"visitReturn(org.checkerframework.dataflow.cfg.node.ReturnNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitReturn(ReturnNode, P)","u":"visitReturn(org.checkerframework.dataflow.cfg.node.ReturnNode,P)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessTransfer","l":"visitReturn(ReturnNode, TransferInput<NullnessValue, NullnessStore>)","u":"visitReturn(org.checkerframework.dataflow.cfg.node.ReturnNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprTransfer","l":"visitReturn(ReturnNode, TransferInput<UnusedAbstractValue, BusyExprStore>)","u":"visitReturn(org.checkerframework.dataflow.cfg.node.ReturnNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarTransfer","l":"visitReturn(ReturnNode, TransferInput<UnusedAbstractValue, LiveVarStore>)","u":"visitReturn(org.checkerframework.dataflow.cfg.node.ReturnNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"visitReturn(ReturnNode, TransferInput<V, S>)","u":"visitReturn(org.checkerframework.dataflow.cfg.node.ReturnNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitReturn(ReturnTree, Node)","u":"visitReturn(com.sun.source.tree.ReturnTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallVisitor","l":"visitReturn(ReturnTree, Void)","u":"visitReturn(com.sun.source.tree.ReturnTree,java.lang.Void)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitReturn(ReturnTree, Void)","u":"visitReturn(com.sun.source.tree.ReturnTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitReturn(ReturnTree, Void)","u":"visitReturn(com.sun.source.tree.ReturnTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitReturn(ReturnTree, Void)","u":"visitReturn(com.sun.source.tree.ReturnTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitShortLiteral(ShortLiteralNode, P)","u":"visitShortLiteral(org.checkerframework.dataflow.cfg.node.ShortLiteralNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitShortLiteral(ShortLiteralNode, P)","u":"visitShortLiteral(org.checkerframework.dataflow.cfg.node.ShortLiteralNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitSignedRightShift(SignedRightShiftNode, P)","u":"visitSignedRightShift(org.checkerframework.dataflow.cfg.node.SignedRightShiftNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitSignedRightShift(SignedRightShiftNode, P)","u":"visitSignedRightShift(org.checkerframework.dataflow.cfg.node.SignedRightShiftNode,P)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"visitSignedRightShift(SignedRightShiftNode, TransferInput<CFValue, CFStore>)","u":"visitSignedRightShift(org.checkerframework.dataflow.cfg.node.SignedRightShiftNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitSignedRightShift(SignedRightShiftNode, TransferInput<CFValue, CFStore>)","u":"visitSignedRightShift(org.checkerframework.dataflow.cfg.node.SignedRightShiftNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitStringConcatenate(StringConcatenateNode, P)","u":"visitStringConcatenate(org.checkerframework.dataflow.cfg.node.StringConcatenateNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitStringConcatenate(StringConcatenateNode, P)","u":"visitStringConcatenate(org.checkerframework.dataflow.cfg.node.StringConcatenateNode,P)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitStringConcatenate(StringConcatenateNode, TransferInput<CFValue, CFStore>)","u":"visitStringConcatenate(org.checkerframework.dataflow.cfg.node.StringConcatenateNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitStringConcatenateAssignment(StringConcatenateAssignmentNode, P)","u":"visitStringConcatenateAssignment(org.checkerframework.dataflow.cfg.node.StringConcatenateAssignmentNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitStringConcatenateAssignment(StringConcatenateAssignmentNode, P)","u":"visitStringConcatenateAssignment(org.checkerframework.dataflow.cfg.node.StringConcatenateAssignmentNode,P)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitStringConcatenateAssignment(StringConcatenateAssignmentNode, TransferInput<CFValue, CFStore>)","u":"visitStringConcatenateAssignment(org.checkerframework.dataflow.cfg.node.StringConcatenateAssignmentNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"visitStringConcatenateAssignment(StringConcatenateAssignmentNode, TransferInput<V, S>)","u":"visitStringConcatenateAssignment(org.checkerframework.dataflow.cfg.node.StringConcatenateAssignmentNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitStringConversion(StringConversionNode, P)","u":"visitStringConversion(org.checkerframework.dataflow.cfg.node.StringConversionNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitStringConversion(StringConversionNode, P)","u":"visitStringConversion(org.checkerframework.dataflow.cfg.node.StringConversionNode,P)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallTransfer","l":"visitStringConversion(StringConversionNode, TransferInput<CFValue, CFStore>)","u":"visitStringConversion(org.checkerframework.dataflow.cfg.node.StringConversionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"visitStringConversion(StringConversionNode, TransferInput<V, S>)","u":"visitStringConversion(org.checkerframework.dataflow.cfg.node.StringConversionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitStringLiteral(StringLiteralNode, P)","u":"visitStringLiteral(org.checkerframework.dataflow.cfg.node.StringLiteralNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitStringLiteral(StringLiteralNode, P)","u":"visitStringLiteral(org.checkerframework.dataflow.cfg.node.StringLiteralNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitSuper(SuperNode, P)","u":"visitSuper(org.checkerframework.dataflow.cfg.node.SuperNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitSuper(SuperNode, P)","u":"visitSuper(org.checkerframework.dataflow.cfg.node.SuperNode,P)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitSwitch(SwitchTree, Node)","u":"visitSwitch(com.sun.source.tree.SwitchTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.checker.fenum","c":"FenumVisitor","l":"visitSwitch(SwitchTree, Void)","u":"visitSwitch(com.sun.source.tree.SwitchTree,java.lang.Void)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"visitSwitch(SwitchTree, Void)","u":"visitSwitch(com.sun.source.tree.SwitchTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitSwitch(SwitchTree, Void)","u":"visitSwitch(com.sun.source.tree.SwitchTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"ExpectedTreesVisitor","l":"visitSwitch(SwitchTree, Void)","u":"visitSwitch(com.sun.source.tree.SwitchTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitSwitch(SwitchTree, Void)","u":"visitSwitch(com.sun.source.tree.SwitchTree,java.lang.Void)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitSwitchExpression17(Tree)","u":"visitSwitchExpression17(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitSwitchExpression17(Tree, Node)","u":"visitSwitchExpression17(com.sun.source.tree.Tree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitSwitchExpression17(Tree, Void)","u":"visitSwitchExpression17(com.sun.source.tree.Tree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"ExpectedTreesVisitor","l":"visitSwitchExpression17(Tree, Void)","u":"visitSwitchExpression17(com.sun.source.tree.Tree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitSwitchExpression17(Tree, Void)","u":"visitSwitchExpression17(com.sun.source.tree.Tree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitSwitchExpressionNode(SwitchExpressionNode, P)","u":"visitSwitchExpressionNode(org.checkerframework.dataflow.cfg.node.SwitchExpressionNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitSwitchExpressionNode(SwitchExpressionNode, P)","u":"visitSwitchExpressionNode(org.checkerframework.dataflow.cfg.node.SwitchExpressionNode,P)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallTransfer","l":"visitSwitchExpressionNode(SwitchExpressionNode, TransferInput<CFValue, CFStore>)","u":"visitSwitchExpressionNode(org.checkerframework.dataflow.cfg.node.SwitchExpressionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakTransfer","l":"visitSwitchExpressionNode(SwitchExpressionNode, TransferInput<CFValue, CFStore>)","u":"visitSwitchExpressionNode(org.checkerframework.dataflow.cfg.node.SwitchExpressionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"visitSwitchExpressionNode(SwitchExpressionNode, TransferInput<V, S>)","u":"visitSwitchExpressionNode(org.checkerframework.dataflow.cfg.node.SwitchExpressionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.javacutil","c":"SwitchExpressionScanner","l":"visitSwitchResultExpression(ExpressionTree, P)","u":"visitSwitchResultExpression(com.sun.source.tree.ExpressionTree,P)"},{"p":"org.checkerframework.javacutil","c":"SwitchExpressionScanner.FunctionalSwitchExpressionScanner","l":"visitSwitchResultExpression(ExpressionTree, P1)","u":"visitSwitchResultExpression(com.sun.source.tree.ExpressionTree,P1)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitSynchronized(SynchronizedNode, P)","u":"visitSynchronized(org.checkerframework.dataflow.cfg.node.SynchronizedNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitSynchronized(SynchronizedNode, P)","u":"visitSynchronized(org.checkerframework.dataflow.cfg.node.SynchronizedNode,P)"},{"p":"org.checkerframework.checker.lock","c":"LockTransfer","l":"visitSynchronized(SynchronizedNode, TransferInput<CFValue, LockStore>)","u":"visitSynchronized(org.checkerframework.dataflow.cfg.node.SynchronizedNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitSynchronized(SynchronizedTree, Node)","u":"visitSynchronized(com.sun.source.tree.SynchronizedTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"visitSynchronized(SynchronizedTree, Void)","u":"visitSynchronized(com.sun.source.tree.SynchronizedTree,java.lang.Void)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"visitSynchronized(SynchronizedTree, Void)","u":"visitSynchronized(com.sun.source.tree.SynchronizedTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitSynchronized(SynchronizedTree, Void)","u":"visitSynchronized(com.sun.source.tree.SynchronizedTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"ExpectedTreesVisitor","l":"visitSynchronized(SynchronizedTree, Void)","u":"visitSynchronized(com.sun.source.tree.SynchronizedTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitSynchronized(SynchronizedTree, Void)","u":"visitSynchronized(com.sun.source.tree.SynchronizedTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitTernaryExpression(TernaryExpressionNode, P)","u":"visitTernaryExpression(org.checkerframework.dataflow.cfg.node.TernaryExpressionNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitTernaryExpression(TernaryExpressionNode, P)","u":"visitTernaryExpression(org.checkerframework.dataflow.cfg.node.TernaryExpressionNode,P)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallTransfer","l":"visitTernaryExpression(TernaryExpressionNode, TransferInput<CFValue, CFStore>)","u":"visitTernaryExpression(org.checkerframework.dataflow.cfg.node.TernaryExpressionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakTransfer","l":"visitTernaryExpression(TernaryExpressionNode, TransferInput<CFValue, CFStore>)","u":"visitTernaryExpression(org.checkerframework.dataflow.cfg.node.TernaryExpressionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"visitTernaryExpression(TernaryExpressionNode, TransferInput<V, S>)","u":"visitTernaryExpression(org.checkerframework.dataflow.cfg.node.TernaryExpressionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitThis(ThisNode, P)","u":"visitThis(org.checkerframework.dataflow.cfg.node.ThisNode,P)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"visitThis(ThisNode, TransferInput<V, S>)","u":"visitThis(org.checkerframework.dataflow.cfg.node.ThisNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionScanner","l":"visitThisReference(ThisReference, P)","u":"visitThisReference(org.checkerframework.dataflow.expression.ThisReference,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionVisitor","l":"visitThisReference(ThisReference, P)","u":"visitThisReference(org.checkerframework.dataflow.expression.ThisReference,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionConverter","l":"visitThisReference(ThisReference, Void)","u":"visitThisReference(org.checkerframework.dataflow.expression.ThisReference,java.lang.Void)"},{"p":"org.checkerframework.dataflow.expression","c":"ViewpointAdaptJavaExpression","l":"visitThisReference(ThisReference, Void)","u":"visitThisReference(org.checkerframework.dataflow.expression.ThisReference,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitThrow(ThrowNode, P)","u":"visitThrow(org.checkerframework.dataflow.cfg.node.ThrowNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitThrow(ThrowNode, P)","u":"visitThrow(org.checkerframework.dataflow.cfg.node.ThrowNode,P)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessTransfer","l":"visitThrow(ThrowNode, TransferInput<NullnessValue, NullnessStore>)","u":"visitThrow(org.checkerframework.dataflow.cfg.node.ThrowNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitThrow(ThrowTree, Node)","u":"visitThrow(com.sun.source.tree.ThrowTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.common.aliasing","c":"AliasingVisitor","l":"visitThrow(ThrowTree, Void)","u":"visitThrow(com.sun.source.tree.ThrowTree,java.lang.Void)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitThrow(ThrowTree, Void)","u":"visitThrow(com.sun.source.tree.ThrowTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitThrow(ThrowTree, Void)","u":"visitThrow(com.sun.source.tree.ThrowTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitThrow(ThrowTree, Void)","u":"visitThrow(com.sun.source.tree.ThrowTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitTry(TryTree, Node)","u":"visitTry(com.sun.source.tree.TryTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitTry(TryTree, Void)","u":"visitTry(com.sun.source.tree.TryTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitTry(TryTree, Void)","u":"visitTry(com.sun.source.tree.TryTree,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitType_Intersection(AnnotatedTypeMirror, AnnotatedTypeMirror.AnnotatedIntersectionType)","u":"visitType_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitType_Typevar(AnnotatedTypeMirror, AnnotatedTypeMirror.AnnotatedTypeVariable)","u":"visitType_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitType_Wildcard(AnnotatedTypeMirror, AnnotatedTypeMirror.AnnotatedWildcardType)","u":"visitType_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType)"},{"p":"org.checkerframework.framework.type","c":"StructuralEqualityComparer","l":"visitTypeArgs(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedDeclaredType)","u":"visitTypeArgs(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitTypeArgs(AnnotatedTypeMirror.AnnotatedDeclaredType, AnnotatedTypeMirror.AnnotatedDeclaredType, boolean, boolean)","u":"visitTypeArgs(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,boolean,boolean)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitTypeCast(TypeCastNode, P)","u":"visitTypeCast(org.checkerframework.dataflow.cfg.node.TypeCastNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitTypeCast(TypeCastNode, P)","u":"visitTypeCast(org.checkerframework.dataflow.cfg.node.TypeCastNode,P)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory.NullnessPropagationTreeAnnotator","l":"visitTypeCast(TypeCastTree, AnnotatedTypeMirror)","u":"visitTypeCast(com.sun.source.tree.TypeCastTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.treeannotator","c":"PropagationTreeAnnotator","l":"visitTypeCast(TypeCastTree, AnnotatedTypeMirror)","u":"visitTypeCast(com.sun.source.tree.TypeCastTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesTreeAnnotator","l":"visitTypeCast(TypeCastTree, AnnotatedTypeMirror)","u":"visitTypeCast(com.sun.source.tree.TypeCastTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitTypeCast(TypeCastTree, Node)","u":"visitTypeCast(com.sun.source.tree.TypeCastTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationVisitor","l":"visitTypeCast(TypeCastTree, Void)","u":"visitTypeCast(com.sun.source.tree.TypeCastTree,java.lang.Void)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"visitTypeCast(TypeCastTree, Void)","u":"visitTypeCast(com.sun.source.tree.TypeCastTree,java.lang.Void)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitTypeCast(TypeCastTree, Void)","u":"visitTypeCast(com.sun.source.tree.TypeCastTree,java.lang.Void)"},{"p":"org.checkerframework.common.util.report","c":"ReportVisitor","l":"visitTypeCast(TypeCastTree, Void)","u":"visitTypeCast(com.sun.source.tree.TypeCastTree,java.lang.Void)"},{"p":"org.checkerframework.common.value","c":"ValueVisitor","l":"visitTypeCast(TypeCastTree, Void)","u":"visitTypeCast(com.sun.source.tree.TypeCastTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitTypeCast(TypeCastTree, Void)","u":"visitTypeCast(com.sun.source.tree.TypeCastTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitTypeCast(TypeCastTree, Void)","u":"visitTypeCast(com.sun.source.tree.TypeCastTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitTypeParameter(TypeParameterTree, Node)","u":"visitTypeParameter(com.sun.source.tree.TypeParameterTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitTypeParameter(TypeParameterTree, Void)","u":"visitTypeParameter(com.sun.source.tree.TypeParameterTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitTypeParameter(TypeParameterTree, Void)","u":"visitTypeParameter(com.sun.source.tree.TypeParameterTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitTypeParameter(TypeParameterTree, Void)","u":"visitTypeParameter(com.sun.source.tree.TypeParameterTree,java.lang.Void)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"visitTypeParameterBounds(AnnotatedTypeMirror.AnnotatedTypeVariable, TypeParameterTree)","u":"visitTypeParameterBounds(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,com.sun.source.tree.TypeParameterTree)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitTypevar_Array(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedArrayType, PARAM)","u":"visitTypevar_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitTypevar_Array(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedArrayType, PARAM)","u":"visitTypevar_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitTypevar_Array(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedArrayType, Void)","u":"visitTypevar_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitTypevar_Declared(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedDeclaredType, PARAM)","u":"visitTypevar_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitTypevar_Declared(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedDeclaredType, PARAM)","u":"visitTypevar_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitTypevar_Declared(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedDeclaredType, Void)","u":"visitTypevar_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitTypevar_Declared(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedDeclaredType, Void)","u":"visitTypevar_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitTypevar_Executable(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedExecutableType, PARAM)","u":"visitTypevar_Executable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitTypevar_Executable(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedExecutableType, PARAM)","u":"visitTypevar_Executable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitTypevar_Intersection(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedIntersectionType, PARAM)","u":"visitTypevar_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitTypevar_Intersection(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedIntersectionType, PARAM)","u":"visitTypevar_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitTypevar_Intersection(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedIntersectionType, Void)","u":"visitTypevar_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitTypevar_Intersection(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedIntersectionType, Void)","u":"visitTypevar_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitTypevar_None(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedNoType, PARAM)","u":"visitTypevar_None(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitTypevar_None(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedNoType, PARAM)","u":"visitTypevar_None(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitTypevar_Null(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedNullType, PARAM)","u":"visitTypevar_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitTypevar_Null(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedNullType, PARAM)","u":"visitTypevar_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitTypevar_Null(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedNullType, Void)","u":"visitTypevar_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitTypevar_Primitive(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedPrimitiveType, PARAM)","u":"visitTypevar_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitTypevar_Primitive(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedPrimitiveType, PARAM)","u":"visitTypevar_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitTypevar_Primitive(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedPrimitiveType, Void)","u":"visitTypevar_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitTypevar_Primitive(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedPrimitiveType, Void)","u":"visitTypevar_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitTypevar_Type(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror)","u":"visitTypevar_Type(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitTypevar_Typevar(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedTypeVariable, PARAM)","u":"visitTypevar_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitTypevar_Typevar(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedTypeVariable, PARAM)","u":"visitTypevar_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"EquivalentAtmComboScanner","l":"visitTypevar_Typevar(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedTypeVariable, PARAM)","u":"visitTypevar_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitTypevar_Typevar(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedTypeVariable, Void)","u":"visitTypevar_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitTypevar_Typevar(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedTypeVariable, Void)","u":"visitTypevar_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"StructuralEqualityComparer","l":"visitTypevar_Typevar(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedTypeVariable, Void)","u":"visitTypevar_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitTypevar_Union(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedUnionType, PARAM)","u":"visitTypevar_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitTypevar_Union(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedUnionType, PARAM)","u":"visitTypevar_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitTypevar_Union(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedUnionType, Void)","u":"visitTypevar_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitTypevar_Wildcard(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedWildcardType, PARAM)","u":"visitTypevar_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitTypevar_Wildcard(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedWildcardType, PARAM)","u":"visitTypevar_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitTypevar_Wildcard(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedWildcardType, Void)","u":"visitTypevar_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitTypevar_Wildcard(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror.AnnotatedWildcardType, Void)","u":"visitTypevar_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeReplacer","l":"visitTypeVariable(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror)","u":"visitTypeVariable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.visitor","c":"DoubleAnnotatedTypeScanner","l":"visitTypeVariable(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotatedTypeMirror)","u":"visitTypeVariable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults.DefaultApplierElement.DefaultApplierElementImpl","l":"visitTypeVariable(AnnotatedTypeMirror.AnnotatedTypeVariable, AnnotationMirror)","u":"visitTypeVariable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeCopier","l":"visitTypeVariable(AnnotatedTypeMirror.AnnotatedTypeVariable, IdentityHashMap<AnnotatedTypeMirror, AnnotatedTypeMirror>)","u":"visitTypeVariable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,java.util.IdentityHashMap)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeCopierWithReplacement.Visitor","l":"visitTypeVariable(AnnotatedTypeMirror.AnnotatedTypeVariable, IdentityHashMap<AnnotatedTypeMirror, AnnotatedTypeMirror>)","u":"visitTypeVariable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,java.util.IdentityHashMap)"},{"p":"org.checkerframework.framework.type","c":"TypeVariableSubstitutor.Visitor","l":"visitTypeVariable(AnnotatedTypeMirror.AnnotatedTypeVariable, IdentityHashMap<AnnotatedTypeMirror, AnnotatedTypeMirror>)","u":"visitTypeVariable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,java.util.IdentityHashMap)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"visitTypeVariable(AnnotatedTypeMirror.AnnotatedTypeVariable, P)","u":"visitTypeVariable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeVisitor","l":"visitTypeVariable(AnnotatedTypeMirror.AnnotatedTypeVariable, P)","u":"visitTypeVariable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeScanner","l":"visitTypeVariable(AnnotatedTypeMirror.AnnotatedTypeVariable, P)","u":"visitTypeVariable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeVisitor","l":"visitTypeVariable(AnnotatedTypeMirror.AnnotatedTypeVariable, P)","u":"visitTypeVariable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,P)"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter.FormattingVisitor","l":"visitTypeVariable(AnnotatedTypeMirror.AnnotatedTypeVariable, Set<AnnotatedTypeMirror>)","u":"visitTypeVariable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,java.util.Set)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"visitTypeVariable(AnnotatedTypeMirror.AnnotatedTypeVariable, Tree)","u":"visitTypeVariable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory.UpperBoundTreeAnnotator","l":"visitUnary(UnaryTree, AnnotatedTypeMirror)","u":"visitUnary(com.sun.source.tree.UnaryTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory.NullnessPropagationTreeAnnotator","l":"visitUnary(UnaryTree, AnnotatedTypeMirror)","u":"visitUnary(com.sun.source.tree.UnaryTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory.NullnessTreeAnnotator","l":"visitUnary(UnaryTree, AnnotatedTypeMirror)","u":"visitUnary(com.sun.source.tree.UnaryTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.treeannotator","c":"PropagationTreeAnnotator","l":"visitUnary(UnaryTree, AnnotatedTypeMirror)","u":"visitUnary(com.sun.source.tree.UnaryTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitUnary(UnaryTree, Node)","u":"visitUnary(com.sun.source.tree.UnaryTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"visitUnary(UnaryTree, Void)","u":"visitUnary(com.sun.source.tree.UnaryTree,java.lang.Void)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitUnary(UnaryTree, Void)","u":"visitUnary(com.sun.source.tree.UnaryTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitUnary(UnaryTree, Void)","u":"visitUnary(com.sun.source.tree.UnaryTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.util","c":"PurityChecker.PurityCheckerHelper","l":"visitUnary(UnaryTree, Void)","u":"visitUnary(com.sun.source.tree.UnaryTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitUnary(UnaryTree, Void)","u":"visitUnary(com.sun.source.tree.UnaryTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionScanner","l":"visitUnaryOperation(UnaryOperation, P)","u":"visitUnaryOperation(org.checkerframework.dataflow.expression.UnaryOperation,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionVisitor","l":"visitUnaryOperation(UnaryOperation, P)","u":"visitUnaryOperation(org.checkerframework.dataflow.expression.UnaryOperation,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionConverter","l":"visitUnaryOperation(UnaryOperation, Void)","u":"visitUnaryOperation(org.checkerframework.dataflow.expression.UnaryOperation,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitUnion_Array(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedArrayType, PARAM)","u":"visitUnion_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitUnion_Array(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedArrayType, PARAM)","u":"visitUnion_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitUnion_Declared(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedDeclaredType, PARAM)","u":"visitUnion_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitUnion_Declared(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedDeclaredType, PARAM)","u":"visitUnion_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitUnion_Declared(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedDeclaredType, Void)","u":"visitUnion_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitUnion_Declared(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedDeclaredType, Void)","u":"visitUnion_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitUnion_Executable(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedExecutableType, PARAM)","u":"visitUnion_Executable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitUnion_Executable(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedExecutableType, PARAM)","u":"visitUnion_Executable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitUnion_Intersection(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedIntersectionType, PARAM)","u":"visitUnion_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitUnion_Intersection(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedIntersectionType, PARAM)","u":"visitUnion_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitUnion_Intersection(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedIntersectionType, Void)","u":"visitUnion_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitUnion_Intersection(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedIntersectionType, Void)","u":"visitUnion_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitUnion_None(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedNoType, PARAM)","u":"visitUnion_None(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitUnion_None(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedNoType, PARAM)","u":"visitUnion_None(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitUnion_Null(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedNullType, PARAM)","u":"visitUnion_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitUnion_Null(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedNullType, PARAM)","u":"visitUnion_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitUnion_Primitive(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedPrimitiveType, PARAM)","u":"visitUnion_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitUnion_Primitive(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedPrimitiveType, PARAM)","u":"visitUnion_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitUnion_Type(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror)","u":"visitUnion_Type(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitUnion_Typevar(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedTypeVariable, PARAM)","u":"visitUnion_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitUnion_Typevar(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedTypeVariable, PARAM)","u":"visitUnion_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitUnion_Typevar(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedTypeVariable, Void)","u":"visitUnion_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitUnion_Typevar(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedTypeVariable, Void)","u":"visitUnion_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitUnion_Union(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedUnionType, PARAM)","u":"visitUnion_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitUnion_Union(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedUnionType, PARAM)","u":"visitUnion_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"EquivalentAtmComboScanner","l":"visitUnion_Union(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedUnionType, PARAM)","u":"visitUnion_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitUnion_Union(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedUnionType, Void)","u":"visitUnion_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitUnion_Union(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedUnionType, Void)","u":"visitUnion_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitUnion_Wildcard(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedWildcardType, PARAM)","u":"visitUnion_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitUnion_Wildcard(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedWildcardType, PARAM)","u":"visitUnion_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitUnion_Wildcard(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedWildcardType, Void)","u":"visitUnion_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitUnion_Wildcard(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror.AnnotatedWildcardType, Void)","u":"visitUnion_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"DoubleAnnotatedTypeScanner","l":"visitUnion(AnnotatedTypeMirror.AnnotatedUnionType, AnnotatedTypeMirror)","u":"visitUnion(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeCopier","l":"visitUnion(AnnotatedTypeMirror.AnnotatedUnionType, IdentityHashMap<AnnotatedTypeMirror, AnnotatedTypeMirror>)","u":"visitUnion(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,java.util.IdentityHashMap)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"visitUnion(AnnotatedTypeMirror.AnnotatedUnionType, P)","u":"visitUnion(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeVisitor","l":"visitUnion(AnnotatedTypeMirror.AnnotatedUnionType, P)","u":"visitUnion(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeVisitor","l":"visitUnion(AnnotatedTypeMirror.AnnotatedUnionType, P)","u":"visitUnion(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,P)"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter.FormattingVisitor","l":"visitUnion(AnnotatedTypeMirror.AnnotatedUnionType, Set<AnnotatedTypeMirror>)","u":"visitUnion(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,java.util.Set)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitUnionType(UnionTypeTree, Node)","u":"visitUnionType(com.sun.source.tree.UnionTypeTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitUnionType(UnionTypeTree, Void)","u":"visitUnionType(com.sun.source.tree.UnionTypeTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitUnionType(UnionTypeTree, Void)","u":"visitUnionType(com.sun.source.tree.UnionTypeTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionScanner","l":"visitUnknown(Unknown, P)","u":"visitUnknown(org.checkerframework.dataflow.expression.Unknown,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionVisitor","l":"visitUnknown(Unknown, P)","u":"visitUnknown(org.checkerframework.dataflow.expression.Unknown,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionConverter","l":"visitUnknown(Unknown, Void)","u":"visitUnknown(org.checkerframework.dataflow.expression.Unknown,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitUnsignedRightShift(UnsignedRightShiftNode, P)","u":"visitUnsignedRightShift(org.checkerframework.dataflow.cfg.node.UnsignedRightShiftNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitUnsignedRightShift(UnsignedRightShiftNode, P)","u":"visitUnsignedRightShift(org.checkerframework.dataflow.cfg.node.UnsignedRightShiftNode,P)"},{"p":"org.checkerframework.checker.index.lowerbound","c":"LowerBoundTransfer","l":"visitUnsignedRightShift(UnsignedRightShiftNode, TransferInput<CFValue, CFStore>)","u":"visitUnsignedRightShift(org.checkerframework.dataflow.cfg.node.UnsignedRightShiftNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.common.value","c":"ValueTransfer","l":"visitUnsignedRightShift(UnsignedRightShiftNode, TransferInput<CFValue, CFStore>)","u":"visitUnsignedRightShift(org.checkerframework.dataflow.cfg.node.UnsignedRightShiftNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitUses(UsesTree, Node)","u":"visitUses(com.sun.source.tree.UsesTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitUses(UsesTree, Void)","u":"visitUses(com.sun.source.tree.UsesTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionScanner","l":"visitValueLiteral(ValueLiteral, P)","u":"visitValueLiteral(org.checkerframework.dataflow.expression.ValueLiteral,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionVisitor","l":"visitValueLiteral(ValueLiteral, P)","u":"visitValueLiteral(org.checkerframework.dataflow.expression.ValueLiteral,P)"},{"p":"org.checkerframework.dataflow.expression","c":"JavaExpressionConverter","l":"visitValueLiteral(ValueLiteral, Void)","u":"visitValueLiteral(org.checkerframework.dataflow.expression.ValueLiteral,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitValueLiteral(ValueLiteralNode, P)","u":"visitValueLiteral(org.checkerframework.dataflow.cfg.node.ValueLiteralNode,P)"},{"p":"org.checkerframework.checker.nullness","c":"KeyForPropagationTreeAnnotator","l":"visitVariable(VariableTree, AnnotatedTypeMirror)","u":"visitVariable(com.sun.source.tree.VariableTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessAnnotatedTypeFactory.NullnessTreeAnnotator","l":"visitVariable(VariableTree, AnnotatedTypeMirror)","u":"visitVariable(com.sun.source.tree.VariableTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.dependenttypes","c":"DependentTypesTreeAnnotator","l":"visitVariable(VariableTree, AnnotatedTypeMirror)","u":"visitVariable(com.sun.source.tree.VariableTree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitVariable(VariableTree, Node)","u":"visitVariable(com.sun.source.tree.VariableTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.framework.source","c":"SourceVisitor","l":"visitVariable(VariableTree, P)","u":"visitVariable(com.sun.source.tree.VariableTree,P)"},{"p":"org.checkerframework.checker.initialization","c":"InitializationVisitor","l":"visitVariable(VariableTree, Void)","u":"visitVariable(com.sun.source.tree.VariableTree,java.lang.Void)"},{"p":"org.checkerframework.checker.lock","c":"LockVisitor","l":"visitVariable(VariableTree, Void)","u":"visitVariable(com.sun.source.tree.VariableTree,java.lang.Void)"},{"p":"org.checkerframework.checker.optional","c":"OptionalVisitor","l":"visitVariable(VariableTree, Void)","u":"visitVariable(com.sun.source.tree.VariableTree,java.lang.Void)"},{"p":"org.checkerframework.checker.resourceleak","c":"ResourceLeakVisitor","l":"visitVariable(VariableTree, Void)","u":"visitVariable(com.sun.source.tree.VariableTree,java.lang.Void)"},{"p":"org.checkerframework.common.aliasing","c":"AliasingVisitor","l":"visitVariable(VariableTree, Void)","u":"visitVariable(com.sun.source.tree.VariableTree,java.lang.Void)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"visitVariable(VariableTree, Void)","u":"visitVariable(com.sun.source.tree.VariableTree,java.lang.Void)"},{"p":"org.checkerframework.common.util.debug","c":"TypeOutputtingChecker.Visitor","l":"visitVariable(VariableTree, Void)","u":"visitVariable(com.sun.source.tree.VariableTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitVariable(VariableTree, Void)","u":"visitVariable(com.sun.source.tree.VariableTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"ExpectedTreesVisitor","l":"visitVariable(VariableTree, Void)","u":"visitVariable(com.sun.source.tree.VariableTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitVariable(VariableTree, Void)","u":"visitVariable(com.sun.source.tree.VariableTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitVariableDeclaration(VariableDeclarationNode, P)","u":"visitVariableDeclaration(org.checkerframework.dataflow.cfg.node.VariableDeclarationNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitVariableDeclaration(VariableDeclarationNode, P)","u":"visitVariableDeclaration(org.checkerframework.dataflow.cfg.node.VariableDeclarationNode,P)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"visitVariableDeclaration(VariableDeclarationNode, TransferInput<V, S>)","u":"visitVariableDeclaration(org.checkerframework.dataflow.cfg.node.VariableDeclarationNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitWhileLoop(WhileLoopTree, Node)","u":"visitWhileLoop(com.sun.source.tree.WhileLoopTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.checker.nullness","c":"NullnessVisitor","l":"visitWhileLoop(WhileLoopTree, Void)","u":"visitWhileLoop(com.sun.source.tree.WhileLoopTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitWhileLoop(WhileLoopTree, Void)","u":"visitWhileLoop(com.sun.source.tree.WhileLoopTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"ExpectedTreesVisitor","l":"visitWhileLoop(WhileLoopTree, Void)","u":"visitWhileLoop(com.sun.source.tree.WhileLoopTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitWhileLoop(WhileLoopTree, Void)","u":"visitWhileLoop(com.sun.source.tree.WhileLoopTree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"AbstractNodeVisitor","l":"visitWideningConversion(WideningConversionNode, P)","u":"visitWideningConversion(org.checkerframework.dataflow.cfg.node.WideningConversionNode,P)"},{"p":"org.checkerframework.dataflow.cfg.node","c":"NodeVisitor","l":"visitWideningConversion(WideningConversionNode, P)","u":"visitWideningConversion(org.checkerframework.dataflow.cfg.node.WideningConversionNode,P)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractTransfer","l":"visitWideningConversion(WideningConversionNode, TransferInput<V, S>)","u":"visitWideningConversion(org.checkerframework.dataflow.cfg.node.WideningConversionNode,org.checkerframework.dataflow.analysis.TransferInput)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitWildcard_Array(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedArrayType, PARAM)","u":"visitWildcard_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitWildcard_Array(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedArrayType, PARAM)","u":"visitWildcard_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitWildcard_Array(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedArrayType, Void)","u":"visitWildcard_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitWildcard_Array(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedArrayType, Void)","u":"visitWildcard_Array(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedArrayType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitWildcard_Declared(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedDeclaredType, PARAM)","u":"visitWildcard_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitWildcard_Declared(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedDeclaredType, PARAM)","u":"visitWildcard_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitWildcard_Declared(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedDeclaredType, Void)","u":"visitWildcard_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitWildcard_Declared(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedDeclaredType, Void)","u":"visitWildcard_Declared(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitWildcard_Executable(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedExecutableType, PARAM)","u":"visitWildcard_Executable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitWildcard_Executable(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedExecutableType, PARAM)","u":"visitWildcard_Executable(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitWildcard_Intersection(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedIntersectionType, PARAM)","u":"visitWildcard_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitWildcard_Intersection(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedIntersectionType, PARAM)","u":"visitWildcard_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitWildcard_Intersection(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedIntersectionType, Void)","u":"visitWildcard_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitWildcard_Intersection(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedIntersectionType, Void)","u":"visitWildcard_Intersection(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitWildcard_None(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedNoType, PARAM)","u":"visitWildcard_None(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitWildcard_None(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedNoType, PARAM)","u":"visitWildcard_None(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNoType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitWildcard_Null(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedNullType, PARAM)","u":"visitWildcard_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitWildcard_Null(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedNullType, PARAM)","u":"visitWildcard_Null(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedNullType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitWildcard_Primitive(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedPrimitiveType, PARAM)","u":"visitWildcard_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitWildcard_Primitive(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedPrimitiveType, PARAM)","u":"visitWildcard_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitWildcard_Primitive(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedPrimitiveType, Void)","u":"visitWildcard_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitWildcard_Primitive(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedPrimitiveType, Void)","u":"visitWildcard_Primitive(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitWildcard_Type(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror)","u":"visitWildcard_Type(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitWildcard_Typevar(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedTypeVariable, PARAM)","u":"visitWildcard_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitWildcard_Typevar(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedTypeVariable, PARAM)","u":"visitWildcard_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitWildcard_Typevar(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedTypeVariable, Void)","u":"visitWildcard_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitWildcard_Typevar(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedTypeVariable, Void)","u":"visitWildcard_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"StructuralEqualityComparer","l":"visitWildcard_Typevar(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedTypeVariable, Void)","u":"visitWildcard_Typevar(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitWildcard_Union(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedUnionType, PARAM)","u":"visitWildcard_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitWildcard_Union(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedUnionType, PARAM)","u":"visitWildcard_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitWildcard_Union(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedUnionType, Void)","u":"visitWildcard_Union(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedUnionType,java.lang.Void)"},{"p":"org.checkerframework.framework.type.visitor","c":"AbstractAtmComboVisitor","l":"visitWildcard_Wildcard(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedWildcardType, PARAM)","u":"visitWildcard_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"AtmComboVisitor","l":"visitWildcard_Wildcard(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedWildcardType, PARAM)","u":"visitWildcard_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,PARAM)"},{"p":"org.checkerframework.framework.type.visitor","c":"EquivalentAtmComboScanner","l":"visitWildcard_Wildcard(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedWildcardType, PARAM)","u":"visitWildcard_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,PARAM)"},{"p":"org.checkerframework.framework.type","c":"AsSuperVisitor","l":"visitWildcard_Wildcard(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedWildcardType, Void)","u":"visitWildcard_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"DefaultTypeHierarchy","l":"visitWildcard_Wildcard(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedWildcardType, Void)","u":"visitWildcard_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"StructuralEqualityComparer","l":"visitWildcard_Wildcard(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror.AnnotatedWildcardType, Void)","u":"visitWildcard_Wildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,java.lang.Void)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeReplacer","l":"visitWildcard(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror)","u":"visitWildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.type.visitor","c":"DoubleAnnotatedTypeScanner","l":"visitWildcard(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotatedTypeMirror)","u":"visitWildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.framework.util.defaults","c":"QualifierDefaults.DefaultApplierElement.DefaultApplierElementImpl","l":"visitWildcard(AnnotatedTypeMirror.AnnotatedWildcardType, AnnotationMirror)","u":"visitWildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeCopier","l":"visitWildcard(AnnotatedTypeMirror.AnnotatedWildcardType, IdentityHashMap<AnnotatedTypeMirror, AnnotatedTypeMirror>)","u":"visitWildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,java.util.IdentityHashMap)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeScanner","l":"visitWildcard(AnnotatedTypeMirror.AnnotatedWildcardType, P)","u":"visitWildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"AnnotatedTypeVisitor","l":"visitWildcard(AnnotatedTypeMirror.AnnotatedWildcardType, P)","u":"visitWildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeScanner","l":"visitWildcard(AnnotatedTypeMirror.AnnotatedWildcardType, P)","u":"visitWildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,P)"},{"p":"org.checkerframework.framework.type.visitor","c":"SimpleAnnotatedTypeVisitor","l":"visitWildcard(AnnotatedTypeMirror.AnnotatedWildcardType, P)","u":"visitWildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,P)"},{"p":"org.checkerframework.framework.type","c":"DefaultAnnotatedTypeFormatter.FormattingVisitor","l":"visitWildcard(AnnotatedTypeMirror.AnnotatedWildcardType, Set<AnnotatedTypeMirror>)","u":"visitWildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,java.util.Set)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeValidator","l":"visitWildcard(AnnotatedTypeMirror.AnnotatedWildcardType, Tree)","u":"visitWildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.type.typeannotator","c":"PropagationTypeAnnotator","l":"visitWildcard(AnnotatedTypeMirror.AnnotatedWildcardType, Void)","u":"visitWildcard(org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitWildcard(WildcardTree, Node)","u":"visitWildcard(com.sun.source.tree.WildcardTree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitWildcard(WildcardTree, Void)","u":"visitWildcard(com.sun.source.tree.WildcardTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitWildcard(WildcardTree, Void)","u":"visitWildcard(com.sun.source.tree.WildcardTree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"JointJavacJavaParserVisitor","l":"visitYield17(Tree, Node)","u":"visitYield17(com.sun.source.tree.Tree,com.github.javaparser.ast.Node)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"visitYield17(Tree, Void)","u":"visitYield17(com.sun.source.tree.Tree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"ExpectedTreesVisitor","l":"visitYield17(Tree, Void)","u":"visitYield17(com.sun.source.tree.Tree,java.lang.Void)"},{"p":"org.checkerframework.framework.ajava","c":"TreeScannerWithDefaults","l":"visitYield17(Tree, Void)","u":"visitYield17(com.sun.source.tree.Tree,java.lang.Void)"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprStore","l":"visualize(CFGVisualizer<?, BusyExprStore, ?>)","u":"visualize(org.checkerframework.dataflow.cfg.visualize.CFGVisualizer)"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"ConstantPropagationStore","l":"visualize(CFGVisualizer<?, ConstantPropagationStore, ?>)","u":"visualize(org.checkerframework.dataflow.cfg.visualize.CFGVisualizer)"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarStore","l":"visualize(CFGVisualizer<?, LiveVarStore, ?>)","u":"visualize(org.checkerframework.dataflow.cfg.visualize.CFGVisualizer)"},{"p":"org.checkerframework.dataflow.reachingdef","c":"ReachingDefinitionStore","l":"visualize(CFGVisualizer<?, ReachingDefinitionStore, ?>)","u":"visualize(org.checkerframework.dataflow.cfg.visualize.CFGVisualizer)"},{"p":"org.checkerframework.dataflow.analysis","c":"Store","l":"visualize(CFGVisualizer<?, S, ?>)","u":"visualize(org.checkerframework.dataflow.cfg.visualize.CFGVisualizer)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"visualize(CFGVisualizer<?, S, ?>)","u":"visualize(org.checkerframework.dataflow.cfg.visualize.CFGVisualizer)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizer","l":"visualize(ControlFlowGraph, Block, Analysis<V, S, T>)","u":"visualize(org.checkerframework.dataflow.cfg.ControlFlowGraph,org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"visualize(ControlFlowGraph, Block, Analysis<V, S, T>)","u":"visualize(org.checkerframework.dataflow.cfg.ControlFlowGraph,org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"StringCFGVisualizer","l":"visualize(ControlFlowGraph, Block, Analysis<V, S, T>)","u":"visualize(org.checkerframework.dataflow.cfg.ControlFlowGraph,org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizer","l":"visualizeBlock(Block, Analysis<V, S, T>)","u":"visualizeBlock(org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"visualizeBlock(Block, Analysis<V, S, T>)","u":"visualizeBlock(org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"StringCFGVisualizer","l":"visualizeBlock(Block, Analysis<V, S, T>)","u":"visualizeBlock(org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer","l":"visualizeBlockHelper(Block, Analysis<V, S, T>, String)","u":"visualizeBlockHelper(org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.analysis.Analysis,java.lang.String)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer","l":"visualizeBlockNode(Node, Analysis<V, S, T>)","u":"visualizeBlockNode(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizer","l":"visualizeBlockNode(Node, Analysis<V, S, T>)","u":"visualizeBlockNode(org.checkerframework.dataflow.cfg.node.Node,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizer","l":"visualizeBlockTransferInputAfter(Block, Analysis<V, S, T>)","u":"visualizeBlockTransferInputAfter(org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"visualizeBlockTransferInputAfter(Block, Analysis<V, S, T>)","u":"visualizeBlockTransferInputAfter(org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"StringCFGVisualizer","l":"visualizeBlockTransferInputAfter(Block, Analysis<V, S, T>)","u":"visualizeBlockTransferInputAfter(org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizer","l":"visualizeBlockTransferInputBefore(Block, Analysis<V, S, T>)","u":"visualizeBlockTransferInputBefore(org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"visualizeBlockTransferInputBefore(Block, Analysis<V, S, T>)","u":"visualizeBlockTransferInputBefore(org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"StringCFGVisualizer","l":"visualizeBlockTransferInputBefore(Block, Analysis<V, S, T>)","u":"visualizeBlockTransferInputBefore(org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer","l":"visualizeBlockTransferInputHelper(AbstractCFGVisualizer.VisualizeWhere, Block, Analysis<V, S, T>, String)","u":"visualizeBlockTransferInputHelper(org.checkerframework.dataflow.cfg.visualize.AbstractCFGVisualizer.VisualizeWhere,org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.analysis.Analysis,java.lang.String)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizer","l":"visualizeConditionalBlock(ConditionalBlock)","u":"visualizeConditionalBlock(org.checkerframework.dataflow.cfg.block.ConditionalBlock)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"visualizeConditionalBlock(ConditionalBlock)","u":"visualizeConditionalBlock(org.checkerframework.dataflow.cfg.block.ConditionalBlock)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"StringCFGVisualizer","l":"visualizeConditionalBlock(ConditionalBlock)","u":"visualizeConditionalBlock(org.checkerframework.dataflow.cfg.block.ConditionalBlock)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer","l":"visualizeEdge(Object, Object, String)","u":"visualizeEdge(java.lang.Object,java.lang.Object,java.lang.String)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"visualizeEdge(Object, Object, String)","u":"visualizeEdge(java.lang.Object,java.lang.Object,java.lang.String)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"StringCFGVisualizer","l":"visualizeEdge(Object, Object, String)","u":"visualizeEdge(java.lang.Object,java.lang.Object,java.lang.String)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer","l":"visualizeGraph(ControlFlowGraph, Block, Analysis<V, S, T>)","u":"visualizeGraph(org.checkerframework.dataflow.cfg.ControlFlowGraph,org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer","l":"visualizeGraphFooter()"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"visualizeGraphFooter()"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"StringCFGVisualizer","l":"visualizeGraphFooter()"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer","l":"visualizeGraphHeader()"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"visualizeGraphHeader()"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"StringCFGVisualizer","l":"visualizeGraphHeader()"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer","l":"visualizeGraphWithoutHeaderAndFooter(ControlFlowGraph, Block, Analysis<V, S, T>)","u":"visualizeGraphWithoutHeaderAndFooter(org.checkerframework.dataflow.cfg.ControlFlowGraph,org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer","l":"visualizeNodes(Set<Block>, ControlFlowGraph, Analysis<V, S, T>)","u":"visualizeNodes(java.util.Set,org.checkerframework.dataflow.cfg.ControlFlowGraph,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"visualizeNodes(Set<Block>, ControlFlowGraph, Analysis<V, S, T>)","u":"visualizeNodes(java.util.Set,org.checkerframework.dataflow.cfg.ControlFlowGraph,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"StringCFGVisualizer","l":"visualizeNodes(Set<Block>, ControlFlowGraph, Analysis<V, S, T>)","u":"visualizeNodes(java.util.Set,org.checkerframework.dataflow.cfg.ControlFlowGraph,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizer","l":"visualizeSpecialBlock(SpecialBlock)","u":"visualizeSpecialBlock(org.checkerframework.dataflow.cfg.block.SpecialBlock)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"visualizeSpecialBlock(SpecialBlock)","u":"visualizeSpecialBlock(org.checkerframework.dataflow.cfg.block.SpecialBlock)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"StringCFGVisualizer","l":"visualizeSpecialBlock(SpecialBlock)","u":"visualizeSpecialBlock(org.checkerframework.dataflow.cfg.block.SpecialBlock)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer","l":"visualizeSpecialBlockHelper(SpecialBlock)","u":"visualizeSpecialBlockHelper(org.checkerframework.dataflow.cfg.block.SpecialBlock)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"AbstractCFGVisualizer","l":"visualizeStore(S)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizer","l":"visualizeStore(S)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizer","l":"visualizeStoreArrayVal(ArrayAccess, V)","u":"visualizeStoreArrayVal(org.checkerframework.dataflow.expression.ArrayAccess,V)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"visualizeStoreArrayVal(ArrayAccess, V)","u":"visualizeStoreArrayVal(org.checkerframework.dataflow.expression.ArrayAccess,V)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"StringCFGVisualizer","l":"visualizeStoreArrayVal(ArrayAccess, V)","u":"visualizeStoreArrayVal(org.checkerframework.dataflow.expression.ArrayAccess,V)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizer","l":"visualizeStoreClassVals(ClassName, V)","u":"visualizeStoreClassVals(org.checkerframework.dataflow.expression.ClassName,V)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"visualizeStoreClassVals(ClassName, V)","u":"visualizeStoreClassVals(org.checkerframework.dataflow.expression.ClassName,V)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"StringCFGVisualizer","l":"visualizeStoreClassVals(ClassName, V)","u":"visualizeStoreClassVals(org.checkerframework.dataflow.expression.ClassName,V)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizer","l":"visualizeStoreFieldVal(FieldAccess, V)","u":"visualizeStoreFieldVal(org.checkerframework.dataflow.expression.FieldAccess,V)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"visualizeStoreFieldVal(FieldAccess, V)","u":"visualizeStoreFieldVal(org.checkerframework.dataflow.expression.FieldAccess,V)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"StringCFGVisualizer","l":"visualizeStoreFieldVal(FieldAccess, V)","u":"visualizeStoreFieldVal(org.checkerframework.dataflow.expression.FieldAccess,V)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizer","l":"visualizeStoreKeyVal(String, Object)","u":"visualizeStoreKeyVal(java.lang.String,java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"visualizeStoreKeyVal(String, Object)","u":"visualizeStoreKeyVal(java.lang.String,java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"StringCFGVisualizer","l":"visualizeStoreKeyVal(String, Object)","u":"visualizeStoreKeyVal(java.lang.String,java.lang.Object)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizer","l":"visualizeStoreLocalVar(LocalVariable, V)","u":"visualizeStoreLocalVar(org.checkerframework.dataflow.expression.LocalVariable,V)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"visualizeStoreLocalVar(LocalVariable, V)","u":"visualizeStoreLocalVar(org.checkerframework.dataflow.expression.LocalVariable,V)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"StringCFGVisualizer","l":"visualizeStoreLocalVar(LocalVariable, V)","u":"visualizeStoreLocalVar(org.checkerframework.dataflow.expression.LocalVariable,V)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizer","l":"visualizeStoreMethodVals(MethodCall, V)","u":"visualizeStoreMethodVals(org.checkerframework.dataflow.expression.MethodCall,V)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"visualizeStoreMethodVals(MethodCall, V)","u":"visualizeStoreMethodVals(org.checkerframework.dataflow.expression.MethodCall,V)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"StringCFGVisualizer","l":"visualizeStoreMethodVals(MethodCall, V)","u":"visualizeStoreMethodVals(org.checkerframework.dataflow.expression.MethodCall,V)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizer","l":"visualizeStoreThisVal(V)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"visualizeStoreThisVal(V)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"StringCFGVisualizer","l":"visualizeStoreThisVal(V)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizer","l":"visualizeWithAction(ControlFlowGraph, Block, Analysis<V, S, T>)","u":"visualizeWithAction(org.checkerframework.dataflow.cfg.ControlFlowGraph,org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"DOTCFGVisualizer","l":"visualizeWithAction(ControlFlowGraph, Block, Analysis<V, S, T>)","u":"visualizeWithAction(org.checkerframework.dataflow.cfg.ControlFlowGraph,org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"StringCFGVisualizer","l":"visualizeWithAction(ControlFlowGraph, Block, Analysis<V, S, T>)","u":"visualizeWithAction(org.checkerframework.dataflow.cfg.ControlFlowGraph,org.checkerframework.dataflow.cfg.block.Block,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.framework.qual","c":"TypeKind","l":"VOID"},{"p":"org.checkerframework.framework.util","c":"VoidVisitorWithDefaultAction","l":"VoidVisitorWithDefaultAction()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"warnAboutIrrelevantJavaTypes(List<? extends AnnotationTree>, Tree)","u":"warnAboutIrrelevantJavaTypes(java.util.List,com.sun.source.tree.Tree)"},{"p":"org.checkerframework.framework.test.diagnostics","c":"DiagnosticKind","l":"Warning"},{"p":"org.checkerframework.checker.formatter","c":"FormatterTreeUtil","l":"warning(FormatterTreeUtil.Result<?>, String, Object...)","u":"warning(org.checkerframework.checker.formatter.FormatterTreeUtil.Result,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.checker.i18nformatter","c":"I18nFormatterTreeUtil","l":"warning(FormatterTreeUtil.Result<?>, String, Object...)","u":"warning(org.checkerframework.checker.formatter.FormatterTreeUtil.Result,java.lang.String,java.lang.Object...)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeVisitor","l":"warnRedundantAnnotations(Tree, AnnotatedTypeMirror)","u":"warnRedundantAnnotations(com.sun.source.tree.Tree,org.checkerframework.framework.type.AnnotatedTypeMirror)"},{"p":"org.checkerframework.common.basetype","c":"BaseTypeChecker","l":"warnUnneededSuppressions()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"warnUnneededSuppressions()"},{"p":"org.checkerframework.framework.source","c":"SourceChecker","l":"warnUnneededSuppressions(Set<Element>, Set<String>, Set<String>)","u":"warnUnneededSuppressions(java.util.Set,java.util.Set,java.util.Set)"},{"p":"org.checkerframework.framework.type","c":"AnnotatedTypeMirror.AnnotatedDeclaredType","l":"wasRaw()"},{"p":"org.checkerframework.framework.qual","c":"Unused","l":"when()"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"widen(Node, TypeMirror)","u":"widen(org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.javacutil","c":"TypeKindUtils","l":"widenedNumericType(TypeKind, TypeKind)","u":"widenedNumericType(javax.lang.model.type.TypeKind,javax.lang.model.type.TypeKind)"},{"p":"org.checkerframework.javacutil","c":"TypeKindUtils","l":"widenedNumericType(TypeMirror, TypeMirror)","u":"widenedNumericType(javax.lang.model.type.TypeMirror,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory.UpperBoundQualifierHierarchy","l":"widenedUpperBound(AnnotationMirror, AnnotationMirror)","u":"widenedUpperBound(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.framework.type","c":"QualifierHierarchy","l":"widenedUpperBound(AnnotationMirror, AnnotationMirror)","u":"widenedUpperBound(javax.lang.model.element.AnnotationMirror,javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.dataflow.busyexpr","c":"BusyExprStore","l":"widenedUpperBound(BusyExprStore)","u":"widenedUpperBound(org.checkerframework.dataflow.busyexpr.BusyExprStore)"},{"p":"org.checkerframework.dataflow.constantpropagation","c":"ConstantPropagationStore","l":"widenedUpperBound(ConstantPropagationStore)","u":"widenedUpperBound(org.checkerframework.dataflow.constantpropagation.ConstantPropagationStore)"},{"p":"org.checkerframework.dataflow.livevariable","c":"LiveVarStore","l":"widenedUpperBound(LiveVarStore)","u":"widenedUpperBound(org.checkerframework.dataflow.livevariable.LiveVarStore)"},{"p":"org.checkerframework.dataflow.reachingdef","c":"ReachingDefinitionStore","l":"widenedUpperBound(ReachingDefinitionStore)","u":"widenedUpperBound(org.checkerframework.dataflow.reachingdef.ReachingDefinitionStore)"},{"p":"org.checkerframework.dataflow.analysis","c":"Store","l":"widenedUpperBound(S)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractStore","l":"widenedUpperBound(S)"},{"p":"org.checkerframework.javacutil","c":"TypeKindUtils.PrimitiveConversionKind","l":"WIDENING"},{"p":"org.checkerframework.dataflow.cfg.node","c":"WideningConversionNode","l":"WideningConversionNode(Tree, Node, TypeMirror)","u":"%3Cinit%3E(com.sun.source.tree.Tree,org.checkerframework.dataflow.cfg.node.Node,javax.lang.model.type.TypeMirror)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.LessThanLengthOf","l":"widenUpperBound(UBQualifier)","u":"widenUpperBound(org.checkerframework.checker.index.upperbound.UBQualifier)"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier","l":"widenUpperBound(UBQualifier)","u":"widenUpperBound(org.checkerframework.checker.index.upperbound.UBQualifier)"},{"p":"org.checkerframework.framework.flow","c":"CFAbstractValue","l":"widenUpperBound(V)"},{"p":"org.checkerframework.framework.qual","c":"TypeKind","l":"WILDCARD"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"WILDCARD_ARRAY"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"WILDCARD_DECLARED"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"WILDCARD_EXECUTABLE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"WILDCARD_INTERSECTION"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"WILDCARD_NONE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"WILDCARD_NULL"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"WILDCARD_PRIMITIVE"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"WILDCARD_TYPEVAR"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"WILDCARD_UNION"},{"p":"org.checkerframework.framework.util","c":"AtmCombo","l":"WILDCARD_WILDCARD"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"wildcardToTypeParam(Type.WildcardType)","u":"wildcardToTypeParam(com.sun.tools.javac.code.Type.WildcardType)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"wildcardToTypeParam(WildcardType)","u":"wildcardToTypeParam(javax.lang.model.type.WildcardType)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"wildLowerBound(TypeMirror, ProcessingEnvironment)","u":"wildLowerBound(javax.lang.model.type.TypeMirror,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.javacutil","c":"TypesUtils","l":"wildUpperBound(TypeMirror, ProcessingEnvironment)","u":"wildUpperBound(javax.lang.model.type.TypeMirror,javax.annotation.processing.ProcessingEnvironment)"},{"p":"org.checkerframework.framework.util","c":"Heuristics.Within","l":"Within(Heuristics.Matcher)","u":"%3Cinit%3E(org.checkerframework.framework.util.Heuristics.Matcher)"},{"p":"org.checkerframework.framework.util","c":"Heuristics.WithinTrueBranch","l":"WithinTrueBranch(Heuristics.Matcher)","u":"%3Cinit%3E(org.checkerframework.framework.util.Heuristics.Matcher)"},{"p":"org.checkerframework.dataflow.cfg.builder","c":"CFGTranslationPhaseOne","l":"withoutAssignment(Tree.Kind)","u":"withoutAssignment(com.sun.source.tree.Tree.Kind)"},{"p":"org.checkerframework.checker.mustcall","c":"MustCallAnnotatedTypeFactory","l":"withoutClose(AnnotationMirror)","u":"withoutClose(javax.lang.model.element.AnnotationMirror)"},{"p":"org.checkerframework.javacutil","c":"SystemUtil","l":"withoutDuplicatesSorted(List<T>)","u":"withoutDuplicatesSorted(java.util.List)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"withoutParens(ExpressionTree)","u":"withoutParens(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"withoutParensOrCasts(ExpressionTree)","u":"withoutParensOrCasts(com.sun.source.tree.ExpressionTree)"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis","l":"worklist"},{"p":"org.checkerframework.dataflow.analysis","c":"AbstractAnalysis.Worklist","l":"Worklist(Analysis.Direction)","u":"%3Cinit%3E(org.checkerframework.dataflow.analysis.Analysis.Direction)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"wrapUnsigned(byte[])"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"wrapUnsigned(byte[], int, int)","u":"wrapUnsigned(byte[],int,int)"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"writeDiagnostics(File, File, List<String>, List<String>, List<String>, List<String>, boolean, boolean)","u":"writeDiagnostics(java.io.File,java.io.File,java.util.List,java.util.List,java.util.List,java.util.List,boolean,boolean)"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"writeJavacArguments(File, Iterable<? extends JavaFileObject>, Iterable<String>, Iterable<String>)","u":"writeJavacArguments(java.io.File,java.lang.Iterable,java.lang.Iterable,java.lang.Iterable)"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"writeLines(File, Iterable<?>)","u":"writeLines(java.io.File,java.lang.Iterable)"},{"p":"org.checkerframework.dataflow.cfg.visualize","c":"CFGVisualizeLauncher","l":"writeStringOfCFG(String, String, String, String, Analysis<?, ?, ?>)","u":"writeStringOfCFG(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.checkerframework.dataflow.analysis.Analysis)"},{"p":"org.checkerframework.framework.test","c":"TestUtilities","l":"writeTestConfiguration(File, TestConfiguration)","u":"writeTestConfiguration(java.io.File,org.checkerframework.framework.test.TestConfiguration)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"writeUnsigned(RandomAccessFile, byte[], int, int)","u":"writeUnsigned(java.io.RandomAccessFile,byte[],int,int)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"writeUnsignedByte(RandomAccessFile, byte)","u":"writeUnsignedByte(java.io.RandomAccessFile,byte)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"writeUnsignedChar(RandomAccessFile, char)","u":"writeUnsignedChar(java.io.RandomAccessFile,char)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"writeUnsignedInt(RandomAccessFile, int)","u":"writeUnsignedInt(java.io.RandomAccessFile,int)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"writeUnsignedLong(RandomAccessFile, long)","u":"writeUnsignedLong(java.io.RandomAccessFile,long)"},{"p":"org.checkerframework.checker.signedness.util","c":"SignednessUtil","l":"writeUnsignedShort(RandomAccessFile, short)","u":"writeUnsignedShort(java.io.RandomAccessFile,short)"},{"p":"org.checkerframework.javacutil","c":"TreeUtils","l":"yieldTreeGetValue(Tree)","u":"yieldTreeGetValue(com.sun.source.tree.Tree)"},{"p":"org.checkerframework.javacutil","c":"SwitchExpressionScanner","l":"yieldVisitor"},{"p":"org.checkerframework.javacutil","c":"SwitchExpressionScanner.YieldVisitor","l":"YieldVisitor()","u":"%3Cinit%3E()"},{"p":"org.checkerframework.checker.units.qual","c":"Prefix","l":"yocto"},{"p":"org.checkerframework.checker.units.qual","c":"Prefix","l":"yotta"},{"p":"org.checkerframework.checker.units.qual","c":"Prefix","l":"zepto"},{"p":"org.checkerframework.checker.index.upperbound","c":"OffsetEquation","l":"ZERO"},{"p":"org.checkerframework.checker.index.upperbound","c":"UBQualifier.UpperBoundLiteralQualifier","l":"ZERO"},{"p":"org.checkerframework.checker.index.upperbound","c":"UpperBoundAnnotatedTypeFactory","l":"ZERO"},{"p":"org.checkerframework.checker.units.qual","c":"Prefix","l":"zetta"}];updateSearchResults();